{"version":3,"sources":["../src/index.ts","../src/components/SearchBar.tsx","../src/hooks/useEntityPreviews.tsx","../src/hooks/useComponentMountStatus.tsx","../src/hooks/useDebouncedFunction.ts","../src/hooks/useRecentSearches.ts","../src/hooks/useSearchWithNearMeHandling.ts","../src/utils/search-operations.ts","../src/utils/location-operations.ts","../src/hooks/useSynchronizedRequest.tsx","../src/icons/VerticalDividerIcon.tsx","../src/icons/HistoryIcon.tsx","../src/icons/CloseIcon.tsx","../src/icons/MagnifyingGlassIcon.tsx","../src/components/Dropdown/Dropdown.tsx","../src/components/Dropdown/DropdownContext.ts","../src/components/Dropdown/InputContext.tsx","../src/components/Dropdown/FocusContext.ts","../src/components/ScreenReader.tsx","../src/components/utils/recursivelyMapChildren.ts","../src/components/Dropdown/DropdownItem.tsx","../src/components/Dropdown/generateDropdownId.ts","../src/components/Dropdown/DropdownInput.tsx","../src/components/Dropdown/DropdownMenu.tsx","../src/hooks/useComposedCssClasses.tsx","../src/components/SearchButton.tsx","../src/components/utils/processTranslation.ts","../src/components/utils/renderHighlightedValue.tsx","../src/components/utils/renderAutocompleteResult.tsx","../src/hooks/useAnalytics.ts","../src/hooks/useSearchBarAnalytics.ts","../src/models/verticalLink.ts","../src/utils/filterutils.tsx","../src/models/NumberRangeFilter.ts","../src/components/SpellCheck.tsx","../src/components/DirectAnswer.tsx","../src/components/ThumbsFeedback.tsx","../src/icons/ThumbIcon.tsx","../src/hooks/useCardAnalyticsCallback.tsx","../src/hooks/useCardAnalytics.ts","../src/hooks/useCardFeedbackCallback.tsx","../src/components/FieldValueDirectAnswer.tsx","../src/components/FeaturedSnippetDirectAnswer.tsx","../src/components/FilterSearch.tsx","../src/components/LocationBias.tsx","../src/icons/LoadingIndicator.tsx","../src/icons/YextIcon.tsx","../src/hooks/useGeolocationHandler.ts","../src/components/Geolocation.tsx","../src/components/AppliedFilters.tsx","../src/hooks/useClearFiltersCallback.ts","../src/components/AppliedFiltersDisplay.tsx","../src/components/Filters/HierarchicalFacetDisplay.tsx","../src/hooks/useHierarchicalFacetTree.ts","../src/components/Filters/FiltersContext.ts","../src/hooks/useNlpFilterDisplayNames.ts","../src/hooks/useRemovableFilters.ts","../src/utils/isDescendantHierarchicalFacet.tsx","../src/hooks/useStateUpdatedOnSearch.ts","../src/hooks/useRemovableStaticFilters.ts","../src/components/UniversalResults.tsx","../src/components/VerticalResultsDisplay.tsx","../src/components/cards/standard/StandardCardDisplay.tsx","../src/components/cards/standard/StandardCard.tsx","../src/components/sections/StandardSection.tsx","../src/icons/CollectionIcon.tsx","../src/components/sections/SectionHeader.tsx","../src/components/VerticalResults.tsx","../src/components/Pagination.tsx","../src/icons/ChevronIcon.tsx","../src/hooks/usePaginationAnalytics.ts","../src/icons/StarIcon.tsx","../src/components/AlternativeVerticals.tsx","../src/components/ResultsCount.tsx","../src/components/Filters/CheckboxOption.tsx","../src/components/Filters/FilterGroupContext.ts","../src/components/Filters/CollapsibleLabel.tsx","../src/components/Filters/CollapsibleSection.tsx","../src/components/Filters/FacetsProvider.tsx","../src/components/Filters/FilterGroupProvider.tsx","../src/components/Filters/SearchInput.tsx","../src/components/Filters/StaticFiltersProvider.tsx","../src/components/Filters/RangeInput.tsx","../src/icons/InvalidIcon.tsx","../src/components/FilterGroup.tsx","../src/components/FacetTiltle.tsx","../src/components/StaticFilters.tsx","../src/components/StandardFacets.tsx","../src/components/FilterDivider.tsx","../src/components/HierarchicalFacets.tsx","../src/components/NumericalFacets.tsx","../src/components/StandardFacetContent.tsx","../src/components/Facets.tsx","../src/components/NumericalFacetContent.tsx","../src/components/HierarchicalFacetContent.tsx","../src/components/ApplyFiltersButton.tsx","../src/components/MapboxMap.tsx","../src/components/AnalyticsProvider.tsx","../src/models/StandardCardData.ts"],"sourcesContent":["export * from './components';\nexport * from './hooks';\nexport * from './models';\nexport * from './utils';\n\n/**\n * Content path to the source files in component library that utilizes Tailwind class names.\n * This is intended to be used in user's custom tailwind config.\n *\n * @public\n *\n * @remarks\n * This assumes that the node_modules folder containing the component library\n * is in adjacent level with the user's tailwind.config.js file.\n *\n * @example\n * In user's tailwind.config.js file:\n *\n * ```js\n * const { ComponentsContentPath } = require('@yext/search-ui-react');\n *\n * module.exports = {\n *  content: [ ComponentsContentPath ],\n *  // ... the rest of your tailwind config\n * };\n * ```\n */\nexport const ComponentsContentPath = 'node_modules/@yext/search-ui-react/lib/**/*.{js,jsx}';\n","import {\n  SearchHeadless,\n  QuerySource,\n  SearchTypeEnum,\n  UniversalLimit,\n  useSearchActions,\n  useSearchState,\n  useSearchUtilities,\n  VerticalResults as VerticalResultsData\n} from '@yext/search-headless-react';\nimport classNames from 'classnames';\nimport { Fragment, isValidElement, PropsWithChildren, ReactNode, useCallback, useEffect, useMemo } from 'react';\nimport { useEntityPreviews } from '../hooks/useEntityPreviews';\nimport { useRecentSearches } from '../hooks/useRecentSearches';\nimport { useSearchWithNearMeHandling } from '../hooks/useSearchWithNearMeHandling';\nimport { useSynchronizedRequest } from '../hooks/useSynchronizedRequest';\nimport { VerticalDividerIcon } from '../icons/VerticalDividerIcon';\nimport { HistoryIcon as RecentSearchIcon } from '../icons/HistoryIcon';\nimport { CloseIcon } from '../icons/CloseIcon';\nimport { MagnifyingGlassIcon } from '../icons/MagnifyingGlassIcon';\nimport { Dropdown } from './Dropdown/Dropdown';\nimport { useDropdownContext } from './Dropdown/DropdownContext';\nimport { DropdownInput } from './Dropdown/DropdownInput';\nimport { DropdownItem } from './Dropdown/DropdownItem';\nimport { DropdownMenu } from './Dropdown/DropdownMenu';\nimport { FocusedItemData } from './Dropdown/FocusContext';\nimport { useComposedCssClasses, twMerge } from '../hooks/useComposedCssClasses';\nimport { SearchButton } from './SearchButton';\nimport { processTranslation } from './utils/processTranslation';\nimport {\n  renderAutocompleteResult,\n  AutocompleteResultCssClasses,\n  builtInCssClasses as AutocompleteResultBuiltInCssClasses\n} from './utils/renderAutocompleteResult';\nimport { useSearchBarAnalytics } from '../hooks/useSearchBarAnalytics';\nimport { isVerticalLink, VerticalLink } from '../models/verticalLink';\nimport { executeAutocomplete as executeAutocompleteSearch } from '../utils/search-operations';\nimport { clearStaticRangeFilters } from '../utils/filterutils';\nimport { recursivelyMapChildren } from './utils/recursivelyMapChildren';\n\nconst builtInCssClasses: Readonly<SearchBarCssClasses> = {\n  searchBarContainer: 'h-12 mb-6',\n  inputDivider: 'border-t border-gray-200 mx-2.5',\n  inputElement: 'outline-none flex-grow border-none h-11 pl-5 pr-2 text-neutral-dark text-base placeholder:text-neutral-light',\n  searchButtonContainer: ' w-8 h-full mx-2 flex flex-col justify-center items-center',\n  searchButton: 'h-7 w-7',\n  focusedOption: 'bg-gray-100',\n  clearButton: 'h-3 w-3 mr-3.5',\n  verticalDivider: 'mr-0.5',\n  recentSearchesIcon: 'w-5 mr-1 flex-shrink-0 h-full text-gray-400',\n  recentSearchesOption: 'whitespace-no-wrap max-w-full px-3 text-neutral-dark truncate',\n  recentSearchesNonHighlighted: 'font-normal', // Swap this to semibold once we apply highlighting to recent searches\n  verticalLink: 'ml-12 pl-1 text-neutral italic',\n  entityPreviewsDivider: 'h-px bg-gray-200 mt-1 mb-4 mx-3.5',\n  ...AutocompleteResultBuiltInCssClasses\n};\n\n/**\n * The CSS class interface for the {@link SearchBar}.\n *\n * @public\n */\nexport interface SearchBarCssClasses extends AutocompleteResultCssClasses {\n  searchBarContainer?: string,\n  inputElement?: string,\n  inputDivider?: string,\n  clearButton?: string,\n  searchButton?: string,\n  searchButtonContainer?: string,\n  focusedOption?: string,\n  recentSearchesIcon?: string,\n  recentSearchesOption?: string,\n  recentSearchesNonHighlighted?: string,\n  verticalLink?: string,\n  verticalDivider?: string,\n  entityPreviewsDivider?: string\n}\n\n/**\n * The type of a functional React component which renders entity previews using\n * a map of vertical key to the corresponding VerticalResults data.\n *\n * @remarks\n * The autocomplete loading state is passed in as an optional param.\n *\n * Default props for rendering corresponding DropdownItems are passed in:\n * an onClick function to allow an entity preview to be submitted, and\n * an ariaLabel function that returns text for the screenreader\n *\n * For the entity previews to be navigable in the search bar's dropdown section,\n * wrap each entity preview in a {@link DropdownItem} component.\n *\n * @public\n */\nexport type RenderEntityPreviews = (\n  autocompleteLoading: boolean,\n  verticalKeyToResults: Record<string, VerticalResultsData>,\n  dropdownItemProps: {\n    onClick: (value: string, _index: number, itemData?: FocusedItemData) => void,\n    ariaLabel: (value: string) => string\n  }\n) => JSX.Element | null;\n\n/**\n * The configuration options for Visual Autocomplete.\n *\n * @public\n */\nexport interface VisualAutocompleteConfig {\n  /** The Search Headless instance used to perform visual autocomplete searches. */\n  entityPreviewSearcher: SearchHeadless,\n  /** Renders entity previews based on the autocomplete loading state and results. */\n  renderEntityPreviews: RenderEntityPreviews,\n  /** Specify which verticals to include for VisualAutocomplete. */\n  includedVerticals: string[],\n  /** Specify the number of entities to return per vertical. **/\n  universalLimit?: UniversalLimit,\n  /** The debouncing time, in milliseconds, for making API requests for entity previews. */\n  entityPreviewsDebouncingTime?: number\n}\n\n/**\n * The interface of a function which is called on a search.\n *\n * @public\n */\nexport type onSearchFunc = (searchEventData: { verticalKey?: string, query?: string }) => void;\n\n/**\n * The props for the {@link SearchBar} component.\n *\n * @public\n */\nexport interface SearchBarProps {\n  /** The search bar's placeholder text. */\n  placeholder?: string,\n  /** {@inheritDoc LocationBiasProps.geolocationOptions} */\n  geolocationOptions?: PositionOptions,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: SearchBarCssClasses,\n  /** {@inheritDoc VisualAutocompleteConfig} */\n  visualAutocompleteConfig?: VisualAutocompleteConfig,\n  /** Shows vertical links if true, set to false on default. */\n  showVerticalLinks?: boolean,\n  /** A function which is called when a vertical link is selected. */\n  onSelectVerticalLink?: (data: { verticalLink: VerticalLink, querySource: QuerySource }) => void,\n  /** A function which returns a display label for the given verticalKey. */\n  verticalKeyToLabel?: (verticalKey: string) => string,\n  /** Hides recent searches if true. */\n  hideRecentSearches?: boolean,\n  /** Limits the number of recent searches shown. */\n  recentSearchesLimit?: number,\n  /** A callback which is called when a search is ran. */\n  onSearch?: onSearchFunc\n}\n\n/**\n * Renders a SearchBar that is hooked up with an InputDropdown component.\n *\n * @public\n */\nexport function SearchBar({\n  placeholder,\n  geolocationOptions,\n  hideRecentSearches,\n  visualAutocompleteConfig,\n  showVerticalLinks = false,\n  onSelectVerticalLink,\n  verticalKeyToLabel,\n  recentSearchesLimit = 5,\n  customCssClasses,\n  onSearch\n}: SearchBarProps): JSX.Element {\n  const {\n    entityPreviewSearcher,\n    renderEntityPreviews,\n    includedVerticals,\n    universalLimit,\n    entityPreviewsDebouncingTime = 500\n  } = visualAutocompleteConfig ?? {};\n  const searchActions = useSearchActions();\n  const searchUtilities = useSearchUtilities();\n  const reportAnalyticsEvent = useSearchBarAnalytics();\n\n  const query = useSearchState(state => state.query.input) ?? '';\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n  const isVertical = useSearchState(state => state.meta.searchType) === SearchTypeEnum.Vertical;\n  const verticalKey = useSearchState(state => state.vertical.verticalKey);\n  const [autocompleteResponse, executeAutocomplete, clearAutocompleteData] = useSynchronizedRequest(\n    () => executeAutocompleteSearch(searchActions)\n  );\n  const [\n    executeQueryWithNearMeHandling,\n    autocompletePromiseRef,\n  ] = useSearchWithNearMeHandling(geolocationOptions, onSearch);\n  const [\n    recentSearches,\n    setRecentSearch,\n    clearRecentSearches,\n  ] = useRecentSearches(recentSearchesLimit, verticalKey);\n  const filteredRecentSearches = recentSearches?.filter(search =>\n    searchUtilities.isCloseMatch(search.query, query)\n  );\n\n  useEffect(() => {\n    if (hideRecentSearches) {\n      clearRecentSearches();\n    }\n  }, [clearRecentSearches, hideRecentSearches]);\n\n  const clearAutocomplete = useCallback(() => {\n    clearAutocompleteData();\n    autocompletePromiseRef.current = undefined;\n  }, [autocompletePromiseRef, clearAutocompleteData]);\n\n  const executeQuery = useCallback(() => {\n    if (!hideRecentSearches) {\n      const input = searchActions.state.query.input;\n      input && setRecentSearch(input);\n    }\n    executeQueryWithNearMeHandling();\n  }, [\n    searchActions.state.query.input,\n    executeQueryWithNearMeHandling,\n    hideRecentSearches,\n    setRecentSearch\n  ]);\n\n  const handleSubmit = useCallback((value?: string, index?: number, itemData?: FocusedItemData) => {\n    value !== undefined && searchActions.setQuery(value);\n    searchActions.setOffset(0);\n    searchActions.setFacets([]);\n    clearStaticRangeFilters(searchActions);\n    if (itemData && isVerticalLink(itemData.verticalLink) && onSelectVerticalLink) {\n      onSelectVerticalLink({ verticalLink: itemData.verticalLink, querySource: QuerySource.Autocomplete });\n    } else {\n      executeQuery();\n    }\n    if (typeof index === 'number' && index >= 0 && !itemData?.isEntityPreview) {\n      reportAnalyticsEvent('AUTO_COMPLETE_SELECTION', value);\n    }\n  }, [searchActions, executeQuery, onSelectVerticalLink, reportAnalyticsEvent]);\n\n  const [\n    entityPreviewsState,\n    executeEntityPreviewsQuery\n  ] = useEntityPreviews(entityPreviewSearcher, entityPreviewsDebouncingTime);\n  const { verticalKeyToResults, isLoading: entityPreviewsLoading } = entityPreviewsState;\n  const entityPreviews = renderEntityPreviews?.(\n    entityPreviewsLoading,\n    verticalKeyToResults,\n    { onClick: handleSubmit, ariaLabel: getAriaLabel }\n  );\n  const updateEntityPreviews = useCallback((query: string) => {\n    if (!renderEntityPreviews || !includedVerticals) {\n      return;\n    }\n    executeEntityPreviewsQuery(query, universalLimit ?? {}, includedVerticals);\n  }, [executeEntityPreviewsQuery, renderEntityPreviews, includedVerticals, universalLimit]);\n\n  const handleInputFocus = useCallback((value = '') => {\n    searchActions.setQuery(value);\n    updateEntityPreviews(value);\n    autocompletePromiseRef.current = executeAutocomplete();\n  }, [searchActions, autocompletePromiseRef, executeAutocomplete, updateEntityPreviews]);\n\n  const handleInputChange = useCallback((value = '') => {\n    searchActions.setQuery(value);\n    updateEntityPreviews(value);\n    autocompletePromiseRef.current = executeAutocomplete();\n  }, [searchActions, autocompletePromiseRef, executeAutocomplete, updateEntityPreviews]);\n\n  const handleClickClearButton = useCallback(() => {\n    updateEntityPreviews('');\n    handleSubmit('');\n    reportAnalyticsEvent('SEARCH_CLEAR_BUTTON');\n  }, [handleSubmit, reportAnalyticsEvent, updateEntityPreviews]);\n\n  function renderInput() {\n    return (\n      <DropdownInput\n        className={cssClasses.inputElement}\n        placeholder={placeholder}\n        onSubmit={handleSubmit}\n        onFocus={handleInputFocus}\n        onChange={handleInputChange}\n        ariaLabel='Conduct a search'\n      />\n    );\n  }\n\n  function renderRecentSearches() {\n    const recentSearchesCssClasses = {\n      icon: cssClasses.recentSearchesIcon,\n      option: cssClasses.recentSearchesOption,\n      nonHighlighted: cssClasses.recentSearchesNonHighlighted\n    };\n\n    return filteredRecentSearches?.map((result, i) => (\n      <DropdownItem\n        className='flex items-center h-6.5 px-3.5 py-1.5 cursor-pointer hover:bg-gray-100'\n        focusedClassName={twMerge('flex items-center h-6.5 px-3.5 py-1.5 cursor-pointer hover:bg-gray-100', cssClasses.focusedOption)}\n        key={i}\n        value={result.query}\n        onClick={handleSubmit}\n      >\n        {renderAutocompleteResult(\n          { value: result.query, inputIntents: [] },\n          recentSearchesCssClasses,\n          RecentSearchIcon,\n          `recent search: ${result.query}`\n        )}\n      </DropdownItem>\n    ));\n  }\n\n  const itemDataMatrix = useMemo(() => {\n    return autocompleteResponse?.results.map(result => {\n      return result.verticalKeys?.map(verticalKey => ({\n        verticalLink: { verticalKey, query: result.value }\n      })) ?? [];\n    }) ?? [];\n  }, [autocompleteResponse?.results]);\n\n  function renderQuerySuggestions() {\n    return autocompleteResponse?.results.map((result, i) => (\n      <Fragment key={i}>\n        <DropdownItem\n          className='flex items-stretch py-1.5 px-3.5 cursor-pointer hover:bg-gray-100'\n          focusedClassName={twMerge('flex items-stretch py-1.5 px-3.5 cursor-pointer hover:bg-gray-100', cssClasses.focusedOption)}\n          value={result.value}\n          onClick={handleSubmit}\n        >\n          {renderAutocompleteResult(\n            result,\n            cssClasses,\n            MagnifyingGlassIcon,\n            `autocomplete suggestion: ${result.value}`\n          )}\n        </DropdownItem>\n        {showVerticalLinks && !isVertical && result.verticalKeys?.map((verticalKey, j) => (\n          <DropdownItem\n            key={j}\n            className='flex items-stretch py-1.5 px-3.5 cursor-pointer hover:bg-gray-100'\n            focusedClassName={twMerge('flex items-stretch py-1.5 px-3.5 cursor-pointer hover:bg-gray-100', cssClasses.focusedOption)}\n            value={result.value}\n            itemData={itemDataMatrix[i][j]}\n            onClick={handleSubmit}\n          >\n            {renderAutocompleteResult(\n              {\n                value: `in ${verticalKeyToLabel ? verticalKeyToLabel(verticalKey) : verticalKey}`,\n                inputIntents: []\n              },\n              { ...cssClasses, option: cssClasses.verticalLink }\n            )}\n          </DropdownItem>\n        ))}\n      </Fragment>\n    ));\n  }\n\n  function renderClearButton() {\n    return (\n      <>\n        <button\n          aria-label='Clear the search bar'\n          className={cssClasses.clearButton}\n          onClick={handleClickClearButton}\n        >\n          <CloseIcon />\n        </button>\n        <VerticalDividerIcon className={cssClasses.verticalDivider} />\n      </>\n    );\n  }\n\n  const entityPreviewsCount = calculateEntityPreviewsCount(entityPreviews);\n  const showEntityPreviewsDivider = entityPreviews\n    && !!(autocompleteResponse?.results.length || filteredRecentSearches?.length);\n  const hasItems = !!(autocompleteResponse?.results.length\n    || filteredRecentSearches?.length || entityPreviews);\n  const screenReaderText = getScreenReaderText(\n    autocompleteResponse?.results.length,\n    filteredRecentSearches?.length,\n    entityPreviewsCount\n  );\n  const activeClassName = classNames('relative z-10 bg-white border rounded-3xl border-gray-200 w-full overflow-hidden', {\n    ['shadow-lg' ?? '']: hasItems\n  });\n\n  const handleToggleDropdown = useCallback((isActive) => {\n    if (!isActive) {\n      clearAutocomplete();\n    }\n  }, [clearAutocomplete]);\n\n  return (\n    <div className={cssClasses.searchBarContainer}>\n      <Dropdown\n        className='relative bg-white border rounded-3xl border-gray-200 w-full overflow-hidden'\n        activeClassName={activeClassName}\n        screenReaderText={screenReaderText}\n        parentQuery={query}\n        onToggle={handleToggleDropdown}\n      >\n        <div className='inline-flex items-center justify-between w-full'>\n          {renderInput()}\n          {query && renderClearButton()}\n          <DropdownSearchButton\n            handleSubmit={handleSubmit}\n            cssClasses={cssClasses}\n          />\n        </div>\n        {hasItems &&\n          <StyledDropdownMenu cssClasses={cssClasses}>\n            {renderRecentSearches()}\n            {renderQuerySuggestions()}\n            {showEntityPreviewsDivider && <div className={cssClasses.entityPreviewsDivider}></div>}\n            {entityPreviews}\n          </StyledDropdownMenu>\n        }\n      </Dropdown>\n    </div>\n  );\n}\n\nfunction StyledDropdownMenu({ cssClasses, children }: PropsWithChildren<{\n  cssClasses: {\n    inputDivider?: string\n  }\n}>) {\n  return (\n    <DropdownMenu>\n      <div className={cssClasses.inputDivider} />\n      <div className='bg-white py-4'>\n        {children}\n      </div>\n    </DropdownMenu>\n  );\n}\n\nfunction getScreenReaderText(\n  autocompleteOptions = 0,\n  recentSearchesOptions = 0,\n  entityPreviewsCount = 0\n): string {\n  const recentSearchesText = recentSearchesOptions > 0\n    ? processTranslation({\n      phrase: `${recentSearchesOptions} recent search found.`,\n      pluralForm: `${recentSearchesOptions} recent searches found.`,\n      count: recentSearchesOptions\n    })\n    : '';\n  const entityPreviewsText = entityPreviewsCount > 0\n    ? ' ' + processTranslation({\n      phrase: `${entityPreviewsCount} result preview found.`,\n      pluralForm: `${entityPreviewsCount} result previews found.`,\n      count: entityPreviewsCount\n    })\n    : '';\n  const autocompleteText = autocompleteOptions > 0\n    ? ' ' + processTranslation({\n      phrase: `${autocompleteOptions} autocomplete suggestion found.`,\n      pluralForm: `${autocompleteOptions} autocomplete suggestions found.`,\n      count: autocompleteOptions\n    })\n    : '';\n\n  const text = recentSearchesText + autocompleteText + entityPreviewsText;\n  if (text === '') {\n    return processTranslation({\n      phrase: '0 autocomplete suggestion found.',\n      pluralForm: '0 autocomplete suggestions found.',\n      count: 0\n    });\n  }\n  return text.trim();\n}\n\nfunction DropdownSearchButton({ handleSubmit, cssClasses }: {\n  handleSubmit: () => void,\n  cssClasses: {\n    searchButtonContainer?: string,\n    searchButton?: string\n  }\n}) {\n  const { toggleDropdown } = useDropdownContext();\n  const handleClick = useCallback(() => {\n    handleSubmit();\n    toggleDropdown(false);\n  }, [handleSubmit, toggleDropdown]);\n  return (\n    <div className={cssClasses.searchButtonContainer}>\n      <SearchButton\n        className={cssClasses.searchButton}\n        handleClick={handleClick}\n      />\n    </div>\n  );\n}\n\nfunction getAriaLabel(value: string): string {\n  return 'result preview: ' + value;\n}\n\n/**\n * Calculates the number of navigable entity previews from a ReactNode containing DropdownItems.\n */\nexport function calculateEntityPreviewsCount(children: ReactNode): number {\n  let count = 0;\n  recursivelyMapChildren(children, c => {\n    if (isValidElement(c) && c.type === DropdownItem) {\n      count++;\n    }\n    return c;\n  });\n  return count;\n}","import { SearchHeadless, UniversalLimit, VerticalResults as VerticalResultsData } from '@yext/search-headless-react';\nimport { useState } from 'react';\nimport { useComponentMountStatus } from './useComponentMountStatus';\nimport { useDebouncedFunction } from './useDebouncedFunction';\n\ninterface EntityPreviewsState {\n  verticalKeyToResults: Record<string, VerticalResultsData>,\n  isLoading: boolean\n}\n\ntype ExecuteEntityPreviewsQuery = (\n  query: string,\n  universalLimit: UniversalLimit,\n  restrictVerticals: string[]\n) => void;\n\n/**\n * useEntityPreviews provides state surrounding the visual entities portion of visual autocomplete,\n * which performs debounced universal searches.\n *\n * @param entityPreviewSearcher - the headless instance use as searcher for entity preview related queries\n * @param debounceTime - the time in milliseconds to debounce the universal search request\n */\nexport function useEntityPreviews(\n  entityPreviewSearcher: SearchHeadless | undefined,\n  debounceTime: number\n): [EntityPreviewsState, ExecuteEntityPreviewsQuery] {\n  const isMountedRef = useComponentMountStatus();\n  const [\n    verticalKeyToResults,\n    setVerticalKeyToResults\n  ] = useState<Record<string, VerticalResultsData>>({});\n  const debouncedUniversalSearch = useDebouncedFunction(async () => {\n    if (!entityPreviewSearcher) {\n      return;\n    }\n    await entityPreviewSearcher.executeUniversalQuery();\n    /**\n     * Avoid performing a React state update on an unmounted component\n     * (e.g unmounted during async await)\n     */\n    if (!isMountedRef.current) {\n      return;\n    }\n    const results = entityPreviewSearcher.state.universal.verticals || [];\n    setVerticalKeyToResults(getVerticalKeyToResults(results));\n    setLoadingState(false);\n  }, debounceTime);\n  const [isLoading, setLoadingState] = useState<boolean>(false);\n\n  function executeEntityPreviewsQuery(\n    query: string,\n    universalLimit: UniversalLimit,\n    restrictVerticals: string[]\n  ) {\n    if (!entityPreviewSearcher) {\n      return;\n    }\n    if (query === entityPreviewSearcher.state.query.input) {\n      return;\n    }\n    setLoadingState(true);\n    entityPreviewSearcher.setQuery(query);\n    entityPreviewSearcher.setRestrictVerticals(restrictVerticals);\n    entityPreviewSearcher.setUniversalLimit(universalLimit);\n    debouncedUniversalSearch?.();\n  }\n  return [{ verticalKeyToResults, isLoading }, executeEntityPreviewsQuery];\n}\n\n/**\n * @returns a mapping of vertical key to VerticalResults\n */\nfunction getVerticalKeyToResults(\n  verticalResultsArray: VerticalResultsData[]\n): Record<string, VerticalResultsData> {\n  return verticalResultsArray.reduce<Record<string, VerticalResultsData>>((prev, current) => {\n    prev[current.verticalKey] = current;\n    return prev;\n  }, {});\n}","import { useEffect, useRef } from 'react';\n\n/**\n * This is use to prevent react errors due to performing state update on unmounted component.\n * This error does not need to be suppressed as it will be remove in the next version of React.\n *\n * React PR regarding the issue: https://github.com/facebook/react/pull/22114\n */\nexport function useComponentMountStatus(): React.MutableRefObject<boolean> {\n  const isMountedRef = useRef<boolean>(false);\n  useEffect(() => {\n    isMountedRef.current = true;\n    return () => { isMountedRef.current = false; };\n  }, []);\n\n  return isMountedRef;\n}","import { useRef } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Func = (...args: any[]) => any;\ntype DebouncedFunction<F extends Func> = (...args: Parameters<F>) => Promise<undefined | ReturnType<F>>;\n\nexport function useDebouncedFunction<F extends Func>(\n  func: F | undefined,\n  milliseconds: number\n): DebouncedFunction<F> | undefined {\n  const timeoutIdRef = useRef<number | undefined>();\n  if (!func) {\n    return undefined;\n  }\n  const debounced: DebouncedFunction<F> = (...args: Parameters<F>) => {\n    return new Promise(resolve => {\n      if (timeoutIdRef.current !== undefined) {\n        clearTimeout(timeoutIdRef.current);\n      }\n      timeoutIdRef.current = window.setTimeout(() => {\n        resolve(func(...args));\n        timeoutIdRef.current = undefined;\n      }, milliseconds);\n    });\n  };\n  return debounced;\n}","import { useCallback, useEffect, useState } from 'react';\nimport { RecentSearches, ISearch } from 'recent-searches';\n\nexport function useRecentSearches(\n  recentSearchesLimit: number,\n  verticalKey: string | undefined\n): [ISearch[] | undefined, (input: string) => void, () => void] {\n  const recentSearchesKey = getRecentSearchesKey(verticalKey);\n  const [recentSearches, setRecentSeaches] = useState<RecentSearches>(\n    new RecentSearches({\n      limit: recentSearchesLimit,\n      namespace: recentSearchesKey\n    })\n  );\n\n  const clearRecentSearches = useCallback(() => {\n    localStorage.removeItem(recentSearchesKey);\n    setRecentSeaches(new RecentSearches({\n      limit: recentSearchesLimit,\n      namespace: recentSearchesKey\n    }));\n    localStorage.removeItem(recentSearchesKey);\n  }, [recentSearchesKey, recentSearchesLimit]);\n\n  const setRecentSearch = useCallback((input: string) => {\n    recentSearches.setRecentSearch(input);\n  }, [recentSearches]);\n\n  useEffect(() => {\n    setRecentSeaches(new RecentSearches({\n      limit: recentSearchesLimit,\n      namespace: recentSearchesKey\n    }));\n  }, [recentSearchesKey, recentSearchesLimit]);\n\n  return [recentSearches?.getRecentSearches(), setRecentSearch, clearRecentSearches];\n}\n\nfunction getRecentSearchesKey(verticalKey: string | undefined): string {\n  if (verticalKey) {\n    return `__yxt_recent_searches_${verticalKey}__`;\n  } else {\n    return '__yxt_recent_searches_universal__';\n  }\n}","import { useSearchActions, AutocompleteResponse, SearchIntent } from '@yext/search-headless-react';\nimport { executeSearch, executeAutocomplete } from '../utils/search-operations';\nimport { updateLocationIfNeeded } from '../utils/location-operations';\nimport { MutableRefObject, useRef } from 'react';\nimport { onSearchFunc } from '../components/SearchBar';\n\n/** The type of a function for executing a query and returning a promise. @public */\nexport type QueryFunc = () => Promise<void>;\n/**\n * A ref which contains a promise of the latest autocomplete response in order get the\n * latest search intents.\n */\nexport type AutocompleteRef = MutableRefObject<Promise<AutocompleteResponse | undefined> | undefined>;\n\n/**\n * Returns a search action that will handle near me searches, by first checking\n * for near me intents using an autocomplete request.\n *\n * @remarks\n * You can optionally use the provided ref to store autocomplete responses, to avoid\n * making unnecessary autocomplete requests.\n */\nexport function useSearchWithNearMeHandling(\n  geolocationOptions?: PositionOptions,\n  onSearch?: onSearchFunc\n): [QueryFunc, AutocompleteRef] {\n  /**\n   * Allow a query search to wait on the response to the autocomplete request right\n   * before the search execution in order to retrieve the search intents.\n   */\n  const autocompletePromiseRef = useRef<Promise<AutocompleteResponse | undefined>>();\n  const searchActions = useSearchActions();\n\n  async function executeQuery() {\n    let intents: SearchIntent[] = [];\n    if (!searchActions.state.location.userLocation) {\n      if (!autocompletePromiseRef.current) {\n        autocompletePromiseRef.current = executeAutocomplete(searchActions);\n      }\n      const autocompleteResponseBeforeSearch = await autocompletePromiseRef.current;\n      intents = autocompleteResponseBeforeSearch?.inputIntents || [];\n      await updateLocationIfNeeded(searchActions, intents, geolocationOptions);\n    }\n    const verticalKey = searchActions.state.vertical.verticalKey ?? '';\n    const query = searchActions.state.query.input ?? '';\n    onSearch\n      ? onSearch({ verticalKey, query })\n      : executeSearch(searchActions);\n  }\n  return [executeQuery, autocompletePromiseRef];\n}","import {\n  SearchActions,\n  AutocompleteResponse,\n  SearchIntent,\n  SearchTypeEnum\n} from '@yext/search-headless-react';\n\n/**\n * Executes a universal/vertical search.\n *\n * @public\n */\nexport async function executeSearch(searchActions: SearchActions): Promise<void> {\n  const isVertical = searchActions.state.meta.searchType === SearchTypeEnum.Vertical;\n  try {\n    isVertical\n      ? searchActions.executeVerticalQuery()\n      : searchActions.executeUniversalQuery();\n  } catch (e) {\n    console.error(`Error occured executing a ${isVertical ? 'vertical' : 'universal'} search.\\n`, e);\n  }\n}\n\n/**\n * Executes a universal/vertical autocomplete search and return the corresponding response.\n *\n * @public\n */\nexport async function executeAutocomplete(\n  searchActions: SearchActions\n): Promise<AutocompleteResponse | undefined> {\n  const isVertical = searchActions.state.meta.searchType === SearchTypeEnum.Vertical;\n  try {\n    return isVertical\n      ? searchActions.executeVerticalAutocomplete()\n      : searchActions.executeUniversalAutocomplete();\n  } catch (e) {\n    console.error(`Error occured executing a ${isVertical ? 'vertical' : 'universal'} autocomplete search.\\n`, e);\n  }\n}\n\n/**\n * Get search intents of the current query stored in headless using autocomplete request.\n *\n * @public\n */\nexport async function getSearchIntents(\n  searchActions: SearchActions\n): Promise<SearchIntent[] | undefined> {\n  const results = await executeAutocomplete(searchActions);\n  return results?.inputIntents;\n}\n","import {\n  SearchActions,\n  SearchIntent,\n} from '@yext/search-headless-react';\n\nconst defaultGeolocationOptions: PositionOptions = {\n  enableHighAccuracy: false,\n  timeout: 6000,\n  maximumAge: 300000,\n};\n\n/**\n * If the provided search intents include a 'NEAR_ME' intent and there's no existing\n * user's location in state, retrieve and store user's location in headless state.\n *\n * @public\n */\nexport async function updateLocationIfNeeded(\n  searchActions: SearchActions,\n  intents: SearchIntent[],\n  geolocationOptions?: PositionOptions\n): Promise<void> {\n  if (intents.includes(SearchIntent.NearMe) && !searchActions.state.location.userLocation) {\n    try {\n      const position = await getUserLocation(geolocationOptions);\n      searchActions.setUserLocation({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n/**\n * Retrieves user's location using navigator.geolocation API.\n *\n * @public\n */\nexport async function getUserLocation(geolocationOptions?: PositionOptions): Promise<GeolocationPosition> {\n  return new Promise((resolve, reject) => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        position => resolve(position),\n        err => {\n          console.error('Error occured using geolocation API. Unable to determine user\\'s location.');\n          reject(err);\n        },\n        { ...defaultGeolocationOptions, ...geolocationOptions }\n      );\n    } else {\n      reject('No access to geolocation API. Unable to determine user\\'s location.');\n    }\n  });\n}\n","import { useRef, useState, useCallback, useEffect } from 'react';\nimport { useComponentMountStatus } from './useComponentMountStatus';\n\n/**\n * Handles the network request race condition by synchronizing requests with their responses. If multiple\n * requests are sent before getting a response, only the response corresponding to the latest request will\n * be returned.\n *\n * @param executeRequest - Function that executes the network request\n * @param handleRejectedPromise - Function that executes when a rejected promise is received from the request\n *\n * @returns Reponse to the latest request and a function to execute the request in a synchronized manner\n */\nexport function useSynchronizedRequest<RequestDataType, ResponseType>(\n  executeRequest: (data?: RequestDataType) => Promise<ResponseType | undefined>,\n  handleRejectedPromise?: (error: unknown) => void\n): [\n    ResponseType | undefined,\n    (data?: RequestDataType) => Promise<ResponseType | undefined>,\n    () => void\n  ]\n{\n  const executeRequestRef = useRef(executeRequest);\n  const handleRejectedPromiseRef = useRef(handleRejectedPromise);\n  const isMountedRef = useComponentMountStatus();\n  const networkIds = useRef({ latestRequest: 0, responseInState: 0 });\n  const [synchronizedResponse, setSynchronizedResponse] = useState<ResponseType>();\n\n  const executeSynchronizedRequest = useCallback(async (data?: RequestDataType):\n  Promise<ResponseType | undefined> => {\n    const requestId = ++networkIds.current.latestRequest;\n    return new Promise(async (resolve) => {\n      let response: ResponseType | undefined = undefined;\n      try {\n        response = await executeRequestRef.current(data);\n      } catch (e) {\n        handleRejectedPromiseRef.current ? handleRejectedPromiseRef.current(e) : console.error(e);\n      }\n      if (requestId >= networkIds.current.responseInState) {\n        /**\n         * Avoid performing a React state update on an unmounted component\n         * (e.g unmounted during async await)\n         */\n        if (!isMountedRef.current) {\n          return;\n        }\n        setSynchronizedResponse(response);\n        networkIds.current.responseInState = requestId;\n      }\n      resolve(response);\n    });\n  }, [isMountedRef]);\n\n  const clearResponseData = useCallback(() => {\n    setSynchronizedResponse(undefined);\n  }, [setSynchronizedResponse]);\n\n  useEffect(() => {\n    executeRequestRef.current = executeRequest;\n    handleRejectedPromiseRef.current = handleRejectedPromise;\n  });\n\n  return [synchronizedResponse, executeSynchronizedRequest, clearResponseData];\n}","export function VerticalDividerIcon({ className }: { className?: string }): JSX.Element {\n  return (\n    <svg className={className}\n      width=\"1\" height=\"24\" viewBox=\"0 0 1 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"1\" height=\"24\" rx=\"0.5\" fill=\"#E1E5E8\" />\n    </svg>\n  );\n}","export function HistoryIcon(): JSX.Element {\n  return (\n    <svg viewBox=\"0 0 14 15\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M13.7813 7.75C13.7539 4.00391 10.7188 0.96875 7 0.96875C5.11328 0.96875 3.39063 1.76172 2.16016 2.99219L0.929688 1.76172C0.738281 1.57031 0.382813 1.70703 0.382813 2.00781L0.382813 5.45312C0.382813 5.64453 0.519531 5.78125 0.710938 5.78125L4.21094 5.78125C4.51172 5.78125 4.64844 5.42578 4.45703 5.23437L3.11719 3.92188C4.10156 2.91016 5.46875 2.28125 7 2.28125C10.0078 2.28125 12.4688 4.74219 12.4688 7.75C12.4688 10.7852 10.0078 13.2187 7 13.2188C5.57813 13.2188 4.32031 12.6992 3.33594 11.8516C3.22656 11.7422 3.00781 11.7422 2.89844 11.8516L2.43359 12.3164C2.29688 12.4531 2.29688 12.6719 2.43359 12.8086C3.63672 13.875 5.25 14.5586 7 14.5312C10.7188 14.5312 13.7813 11.4961 13.7813 7.75ZM9.1875 10.2109L9.59766 9.69141C9.67969 9.52734 9.65234 9.33594 9.51563 9.22656L7.65625 7.85937V3.92187C7.65625 3.75781 7.49219 3.59375 7.32813 3.59375H6.67188C6.48047 3.59375 6.34375 3.75781 6.34375 3.92187V8.54297L8.75 10.293C8.88672 10.4023 9.10547 10.375 9.1875 10.2109Z\"/>\n    </svg>\n  );\n}","export function CloseIcon(): JSX.Element {\n  return (\n    <svg viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\" fill='currentColor'>\n      <path d=\"M10.9095 9.00028L16.6786 3.2311L17.8684 2.04138C18.0439 1.86587 18.0439 1.58067 17.8684 1.40517L16.5954 0.132192C16.4199 -0.0433137 16.1347 -0.0433137 15.9592 0.132192L9.00028 7.0911L2.04138 0.131629C1.86587 -0.0438764 1.58067 -0.0438764 1.40517 0.131629L0.131629 1.40461C-0.0438764 1.58011 -0.0438764 1.86531 0.131629 2.04081L7.0911 9.00028L0.131629 15.9592C-0.0438764 16.1347 -0.0438764 16.4199 0.131629 16.5954L1.40461 17.8684C1.58011 18.0439 1.86531 18.0439 2.04081 17.8684L9.00028 10.9095L14.7695 16.6786L15.9592 17.8684C16.1347 18.0439 16.4199 18.0439 16.5954 17.8684L17.8684 16.5954C18.0439 16.4199 18.0439 16.1347 17.8684 15.9592L10.9095 9.00028Z\" fill=\"#6b7280\"/>\n    </svg>\n  );\n}","export function MagnifyingGlassIcon(): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path\n        d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n    </svg>\n  );\n}","import { createElement, isValidElement, KeyboardEvent, PropsWithChildren, ReactNode, useEffect, useMemo, useRef, useState } from 'react';\nimport { DropdownContext, DropdownContextType } from './DropdownContext';\nimport { InputContext, InputContextType } from './InputContext';\nimport useRootClosePkg from '@restart/ui/useRootClose';\nconst useRootClose = typeof useRootClosePkg === 'function' ? useRootClosePkg : useRootClosePkg['default'];\nimport { FocusContext, FocusContextType } from './FocusContext';\nimport { ScreenReader } from '../ScreenReader';\nimport { recursivelyMapChildren } from '../utils/recursivelyMapChildren';\nimport { DropdownItem, DropdownItemProps, DropdownItemWithIndex } from './DropdownItem';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nconst useLayoutEffect = typeof useIsomorphicLayoutEffect === 'function'\n  ? useIsomorphicLayoutEffect\n  : useIsomorphicLayoutEffect['default'];\nimport { useId } from '@reach/auto-id';\n\ninterface DropdownItemData {\n  value: string,\n  itemData?: Record<string, unknown>\n}\n\nexport interface DropdownProps {\n  screenReaderText: string,\n  screenReaderInstructions?: string,\n  parentQuery?: string,\n  onSelect?: (value: string, index: number, focusedItemData: Record<string, unknown> | undefined) => void,\n  onToggle?: (\n    isActive: boolean,\n    prevValue: string,\n    value: string,\n    index: number,\n    focusedItemData: Record<string, unknown> | undefined\n  ) => void,\n  className?: string,\n  activeClassName?: string,\n  alwaysSelectOption?: boolean\n}\n\n/**\n * Dropdown is the parent component for a set of Dropdown-related components.\n *\n * @remarks\n * It provides multiple shared contexts, which are consumed by its child components,\n * and also registers some global event listeners.\n */\nexport function Dropdown(props: PropsWithChildren<DropdownProps>): JSX.Element {\n  const {\n    children,\n    screenReaderText,\n    screenReaderInstructions = 'When autocomplete results are available, use up and down arrows to review and enter to select.',\n    onSelect,\n    onToggle,\n    className,\n    activeClassName,\n    parentQuery,\n    alwaysSelectOption = false\n  } = props;\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const screenReaderUUID = useId();\n  const [screenReaderKey, setScreenReaderKey] = useState<number>(0);\n  const [hasTyped, setHasTyped] = useState<boolean>(false);\n  const [childrenWithDropdownItemsTransformed, items] = useMemo(() => {\n    return getTransformedChildrenAndItemData(children);\n  }, [children]);\n\n  const inputContext = useInputContextInstance();\n  const { value, setValue, lastTypedOrSubmittedValue, setLastTypedOrSubmittedValue } = inputContext;\n\n  const focusContext = useFocusContextInstance(\n    items,\n    lastTypedOrSubmittedValue,\n    setValue,\n    screenReaderKey,\n    setScreenReaderKey,\n    alwaysSelectOption\n  );\n  const { focusedIndex, focusedItemData, updateFocusedItem } = focusContext;\n\n  const dropdownContext = useDropdownContextInstance(\n    lastTypedOrSubmittedValue,\n    value,\n    focusedIndex,\n    focusedItemData,\n    screenReaderUUID,\n    setHasTyped,\n    onToggle,\n    onSelect\n  );\n  const { toggleDropdown, isActive } = dropdownContext;\n\n  useLayoutEffect(() => {\n    if (parentQuery !== undefined && parentQuery !== lastTypedOrSubmittedValue) {\n      setLastTypedOrSubmittedValue(parentQuery);\n      updateFocusedItem(-1, parentQuery);\n    }\n  }, [\n    parentQuery,\n    lastTypedOrSubmittedValue,\n    updateFocusedItem,\n    setLastTypedOrSubmittedValue\n  ]);\n\n  useRootClose(containerRef, () => {\n    toggleDropdown(false);\n  }, { disabled: !isActive });\n\n  function handleKeyDown(e: KeyboardEvent<HTMLDivElement>) {\n    if (!isActive) {\n      return;\n    }\n\n    if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n      e.preventDefault();\n    }\n\n    if (e.key === 'ArrowDown') {\n      if (alwaysSelectOption && focusedIndex === items.length - 1) {\n        updateFocusedItem(0);\n      } else {\n        updateFocusedItem(focusedIndex + 1);\n      }\n    } else if (e.key === 'ArrowUp') {\n      if (alwaysSelectOption && focusedIndex === 0) {\n        updateFocusedItem(items.length - 1);\n      } else {\n        updateFocusedItem(focusedIndex - 1);\n      }\n    } else if (e.key === 'Tab' && !e.shiftKey) {\n      if (items.length !== 0) {\n        if (focusedIndex >= items.length - 1) {\n          updateFocusedItem(-1);\n          toggleDropdown(false);\n        } else {\n          updateFocusedItem(focusedIndex + 1);\n          e.preventDefault();\n        }\n      }\n    } else if (e.key === 'Tab' && e.shiftKey) {\n      if (focusedIndex > 0 || (!alwaysSelectOption && focusedIndex === 0)) {\n        updateFocusedItem(focusedIndex - 1);\n        e.preventDefault();\n      } else {\n        updateFocusedItem(-1);\n        toggleDropdown(false);\n      }\n    } else if (!hasTyped) {\n      setHasTyped(true);\n    }\n  }\n\n  return (\n    <div ref={containerRef} className={isActive ? activeClassName : className} onKeyDown={handleKeyDown}>\n      <DropdownContext.Provider value={dropdownContext}>\n        <InputContext.Provider value={inputContext}>\n          <FocusContext.Provider value={focusContext}>\n            {childrenWithDropdownItemsTransformed}\n          </FocusContext.Provider>\n        </InputContext.Provider>\n      </DropdownContext.Provider>\n\n      <ScreenReader\n        announcementKey={screenReaderKey}\n        announcementText={isActive && (hasTyped || items.length || value) ? screenReaderText : ''}\n        instructionsId={screenReaderUUID}\n        instructions={screenReaderInstructions}\n      />\n    </div>\n  );\n}\n\nfunction useInputContextInstance(): InputContextType {\n  const [value, setValue] = useState('');\n  const [lastTypedOrSubmittedValue, setLastTypedOrSubmittedValue] = useState('');\n  return {\n    value,\n    setValue,\n    lastTypedOrSubmittedValue,\n    setLastTypedOrSubmittedValue\n  };\n}\n\nfunction useFocusContextInstance(\n  items: DropdownItemData[],\n  lastTypedOrSubmittedValue: string,\n  setValue: (newValue: string) => void,\n  screenReaderKey: number,\n  setScreenReaderKey: (newKey: number) => void,\n  alwaysSelectOption: boolean\n): FocusContextType {\n  const [focusedIndex, setFocusedIndex] = useState(-1);\n  const [focusedValue, setFocusedValue] = useState<string | null>(null);\n  const [focusedItemData, setFocusedItemData] = useState<Record<string, unknown> | undefined>(undefined);\n  useEffect(() => {\n    if (alwaysSelectOption) {\n      if (items.length > 0) {\n        const index = focusedIndex === -1 || focusedIndex >= items.length ? 0 : focusedIndex;\n        setFocusedIndex(index);\n        setFocusedValue(items[index].value);\n        setFocusedItemData(items[index].itemData);\n      } else {\n        setFocusedIndex(-1);\n        setFocusedValue(null);\n        setFocusedItemData(undefined);\n      }\n    }\n  }, [alwaysSelectOption, focusedIndex, items]);\n\n  function updateFocusedItem(updatedFocusedIndex: number, value?: string) {\n    const numItems = items.length;\n    let updatedValue;\n    if (updatedFocusedIndex === -1 || updatedFocusedIndex >= numItems || numItems === 0) {\n      updatedValue = value ?? lastTypedOrSubmittedValue;\n      if (alwaysSelectOption && numItems !== 0) {\n        setFocusedIndex(0);\n        setFocusedItemData(items[0].itemData);\n        setScreenReaderKey(screenReaderKey + 1);\n      } else {\n        setFocusedIndex(-1);\n        setFocusedItemData(undefined);\n        setScreenReaderKey(screenReaderKey + 1);\n      }\n    } else if (updatedFocusedIndex < -1) {\n      const loopedAroundIndex = (numItems + updatedFocusedIndex + 1) % numItems;\n      updatedValue = value ?? items[loopedAroundIndex].value;\n      setFocusedIndex(loopedAroundIndex);\n      setFocusedItemData(items[loopedAroundIndex].itemData);\n    } else {\n      updatedValue = value ?? items[updatedFocusedIndex].value;\n      setFocusedIndex(updatedFocusedIndex);\n      setFocusedItemData(items[updatedFocusedIndex].itemData);\n    }\n    setFocusedValue(updatedValue);\n    setValue(alwaysSelectOption ? (value ?? lastTypedOrSubmittedValue) : updatedValue);\n  }\n\n  return {\n    focusedIndex,\n    focusedValue,\n    focusedItemData,\n    updateFocusedItem\n  };\n}\n\nfunction useDropdownContextInstance(\n  prevValue: string,\n  value: string,\n  index: number,\n  focusedItemData: Record<string, unknown> | undefined,\n  screenReaderUUID: string | undefined,\n  setHasTyped: (hasTyped: boolean) => void,\n  onToggle?: (\n    isActive: boolean,\n    prevValue: string,\n    value: string,\n    index: number,\n    focusedItemData: Record<string, unknown> | undefined\n  ) => void,\n  onSelect?: (value: string, index: number, focusedItemData: Record<string, unknown> | undefined) => void\n): DropdownContextType {\n  const [isActive, _toggleDropdown] = useState(false);\n  const toggleDropdown = (willBeOpen: boolean) => {\n    if (!willBeOpen) {\n      setHasTyped(false);\n    }\n    _toggleDropdown(willBeOpen);\n    onToggle?.(willBeOpen, prevValue, value, index, focusedItemData);\n  };\n  return {\n    isActive,\n    toggleDropdown,\n    onSelect,\n    screenReaderUUID\n  };\n}\n\nfunction getTransformedChildrenAndItemData(children: ReactNode): [ReactNode, DropdownItemData[]] {\n  const items: DropdownItemData [] = [];\n  const childrenWithDropdownItemsTransformed = recursivelyMapChildren(children, (child => {\n    if (!(isValidElement(child) && child.type === DropdownItem)) {\n      return child;\n    }\n    const props: DropdownItemProps = child.props;\n    items.push({\n      value: props.value,\n      itemData: props.itemData\n    });\n    const transformedItem = createElement(DropdownItemWithIndex, { ...props, index: items.length - 1 });\n    return transformedItem;\n  }));\n  return [childrenWithDropdownItemsTransformed, items];\n}","import { createContext, useContext } from 'react';\n\n/**\n * The Context responsible for the Dropdown state.\n */\nexport type DropdownContextType = {\n  isActive: boolean,\n  screenReaderUUID?: string,\n  toggleDropdown: (visible: boolean) => void,\n  onSelect?: (value: string, index: number, focusedItemData: Record<string, unknown> | undefined) => void\n};\n\nexport const DropdownContext = createContext<DropdownContextType | null>(null);\n\nexport function useDropdownContext(): DropdownContextType {\n  const dropdownContextInstance = useContext(DropdownContext);\n  if (dropdownContextInstance === null) {\n    throw new Error('Tried to use DropdownContext when none exists.');\n  }\n  return dropdownContextInstance;\n}","import { useContext, createContext } from 'react';\n\n/**\n * A Context for a string state value.\n */\nexport type InputContextType = {\n  value: string,\n  setValue: (newValue: string) => void,\n  lastTypedOrSubmittedValue: string,\n  setLastTypedOrSubmittedValue: (newValue: string) => void\n};\n\nexport const InputContext = createContext<InputContextType | null>(null);\n\nexport function useInputContext(): InputContextType {\n  const inputContextInstance = useContext(InputContext);\n  if (inputContextInstance === null) {\n    throw new Error('Tried to use InputContext when none exists.');\n  }\n  return inputContextInstance;\n}","import { createContext, useContext } from 'react';\n\n/**\n * The data associated with the currently focused item.\n *\n * @public\n */\nexport type FocusedItemData = Record<string, unknown>;\n\n/**\n * The Context responsible for the currently focused item in a Dropdown.\n */\nexport type FocusContextType = {\n  focusedIndex: number,\n  focusedValue: string | null,\n  focusedItemData: FocusedItemData | undefined,\n  updateFocusedItem: (index: number, value?: string) => void\n};\n\nexport const FocusContext = createContext<FocusContextType | null>(null);\n\nexport function useFocusContext(): FocusContextType {\n  const focusContextInstance = useContext(FocusContext);\n  if (focusContextInstance === null) {\n    throw new Error('Tried to use FocusContext when none exists.');\n  }\n  return focusContextInstance;\n}\n","interface Props {\n  instructionsId?: string,\n  instructions: string,\n  announcementKey: number,\n  announcementText: string\n}\n\nexport function ScreenReader({\n  instructionsId,\n  instructions,\n  announcementKey,\n  announcementText,\n}: Props): JSX.Element | null {\n\n  return (\n    <>\n      <div\n        id={instructionsId}\n        className='hidden'\n      >\n        {instructions}\n      </div>\n      <div\n        className='sr-only'\n        key={announcementKey}\n        aria-live='assertive'\n      >\n        {announcementText}\n      </div>\n    </>\n  );\n}\n","import { Children, cloneElement, isValidElement, ReactElement, ReactNode, ReactPortal } from 'react';\n\n/**\n * Recursively performs React.Children.map on a given ReactNode.\n */\nexport function recursivelyMapChildren(\n  children: ReactNode,\n  elementReplacer: (c: ReactElement | ReactPortal, index: number) => ReactNode | null\n): ReactNode {\n  return Children.map<ReactNode, ReactNode>(children, (c, index) => {\n    if (!isValidElement(c)) {\n      return c;\n    }\n    const replacedElement = elementReplacer(c, index);\n    if (!replacedElement || !isValidElement(replacedElement)) {\n      return replacedElement;\n    }\n    const grandchildren = replacedElement.props.children;\n    if (!grandchildren) {\n      return replacedElement;\n    }\n    const replacedGrandchildren = recursivelyMapChildren(grandchildren, elementReplacer);\n    return cloneElement(replacedElement, { children: replacedGrandchildren });\n  });\n}","import { PropsWithChildren, useCallback } from 'react';\nimport { useDropdownContext } from './DropdownContext';\nimport { FocusedItemData, useFocusContext } from './FocusContext';\nimport { generateDropdownId } from './generateDropdownId';\nimport { useInputContext } from './InputContext';\n\n/**\n * Props for the {@link DropdownItem}.\n *\n * @public\n */\nexport type DropdownItemProps = PropsWithChildren<{\n  /** The value associated with the dropdown item. */\n  value: string,\n  /** The CSS classes which put on the dropdown item. */\n  className?: string,\n  /** The CSS classes put on the dropdown item when it is focused. */\n  focusedClassName?: string,\n  /** Data associated with the dropdown item which is passed to the onClick and the onSelect handlers. */\n  itemData?: Record<string, unknown> | undefined,\n  /** A function which is fired when the item is clicked. */\n  onClick?: (value: string, index: number, focusedItemData: FocusedItemData | undefined) => void,\n  /** Screenreader text. */\n  ariaLabel?: (value: string) => string | string\n}>;\n\n/**\n * A wrapper component for specifying a DropdownItemWithIndex.\n * The index will be automatically provided by the Dropdown component instance.\n *\n * @public\n */\nexport function DropdownItem(_props: DropdownItemProps): JSX.Element | null { return null; }\n\nexport function DropdownItemWithIndex(props: DropdownItemProps & { index: number }): JSX.Element {\n  const {\n    children,\n    value,\n    index,\n    className,\n    focusedClassName,\n    itemData,\n    onClick,\n    ariaLabel\n  } = props;\n\n  const { toggleDropdown, onSelect, screenReaderUUID } = useDropdownContext();\n  const { focusedIndex, updateFocusedItem } = useFocusContext();\n  const { setValue, setLastTypedOrSubmittedValue } = useInputContext();\n\n  const isFocused = focusedIndex === index;\n\n  const handleClick = useCallback(() => {\n    toggleDropdown(false);\n    updateFocusedItem(-1);\n    setLastTypedOrSubmittedValue(value);\n    setValue(value);\n    onSelect?.(value, index, itemData);\n    onClick?.(value, index, itemData);\n  }, [\n    index,\n    itemData,\n    onClick,\n    onSelect,\n    setLastTypedOrSubmittedValue,\n    setValue,\n    toggleDropdown,\n    updateFocusedItem,\n    value\n  ]);\n\n  return (\n    <div\n      id={generateDropdownId(screenReaderUUID, index)}\n      tabIndex={0}\n      className={isFocused ? focusedClassName : className}\n      onClick={handleClick}\n      aria-label={typeof ariaLabel === 'function' ? ariaLabel(value) : ariaLabel}\n    >\n      {children}\n    </div>\n  );\n}","/**\n * Generates an id for a {@link DropdownItem}, for use with aria\n * attributes like aria-activedescendant.\n *\n * @param screenReaderUUID - the shared UUID for the {@link Dropdown} instance\n * @param index - the index of the dropdown item in question\n */\nexport function generateDropdownId(screenReaderUUID: string | undefined, index: number): string {\n  if (!screenReaderUUID) return '';\n  return screenReaderUUID + '_' + index;\n}","import { ChangeEvent, KeyboardEvent, useCallback, useRef, useState } from 'react';\nimport { useDropdownContext } from './DropdownContext';\nimport { useFocusContext, FocusedItemData } from './FocusContext';\nimport { generateDropdownId } from './generateDropdownId';\nimport { useInputContext } from './InputContext';\n\n/**\n * An input component for use within a Dropdown.\n */\nexport function DropdownInput(props: {\n  className?: string,\n  placeholder?: string,\n  ariaLabel?: string,\n  onSubmit?: (value: string, index: number, focusedItemData: FocusedItemData | undefined ) => void,\n  onFocus?: (value: string) => void,\n  onChange?: (value: string) => void,\n  submitCriteria?: (index: number) => boolean\n}): JSX.Element {\n  const {\n    className,\n    placeholder,\n    ariaLabel,\n    onSubmit,\n    onFocus,\n    onChange,\n    submitCriteria\n  } = props;\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { toggleDropdown, onSelect, screenReaderUUID } = useDropdownContext();\n  const { value = '', setLastTypedOrSubmittedValue } = useInputContext();\n  const {\n    focusedIndex = -1,\n    focusedItemData,\n    focusedValue,\n    updateFocusedItem\n  } = useFocusContext();\n  const [isTyping, setIsTyping] = useState<boolean>(true);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsTyping(true);\n    toggleDropdown(true);\n    onChange?.(e.target.value);\n    updateFocusedItem(-1, e.target.value);\n    setLastTypedOrSubmittedValue(e.target.value);\n  }, [onChange, setLastTypedOrSubmittedValue, toggleDropdown, updateFocusedItem]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'ArrowDown' || e.key === 'ArrowUp' || e.key === 'Tab') {\n      setIsTyping(false);\n    }\n    if (e.key === 'Enter' && (!submitCriteria || submitCriteria(focusedIndex))) {\n      updateFocusedItem(focusedIndex);\n      toggleDropdown(false);\n      inputRef.current?.blur();\n      onSubmit?.(value, focusedIndex, focusedItemData);\n      if (focusedIndex >= 0) {\n        onSelect?.(value, focusedIndex, focusedItemData);\n      }\n      updateFocusedItem(-1, focusedValue ?? undefined);\n    }\n  }, [\n    focusedIndex,\n    focusedValue,\n    focusedItemData,\n    onSelect,\n    onSubmit,\n    submitCriteria,\n    toggleDropdown,\n    updateFocusedItem,\n    value\n  ]);\n\n  const handleFocus = useCallback(() => {\n    toggleDropdown(true);\n    updateFocusedItem(-1);\n    onFocus?.(value);\n  }, [onFocus, toggleDropdown, updateFocusedItem, value]);\n\n  return (\n    <input\n      ref={inputRef}\n      className={className}\n      placeholder={placeholder}\n      value={value}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      onFocus={handleFocus}\n      id={generateDropdownId(screenReaderUUID, -1)}\n      autoComplete='off'\n      aria-describedby={screenReaderUUID}\n      aria-activedescendant={isTyping ? '' : generateDropdownId(screenReaderUUID, focusedIndex)}\n      aria-label={ariaLabel}\n    />\n  );\n}","import { PropsWithChildren } from 'react';\nimport { useDropdownContext } from './DropdownContext';\n\n/**\n * DropdownMenu is a container for the overlay portion of a Dropdown.\n */\nexport function DropdownMenu(\n  { children }: PropsWithChildren<unknown>\n): JSX.Element | null {\n  const { isActive } = useDropdownContext();\n  if (!isActive) {\n    return null;\n  }\n\n  return <>{children}</>;\n}\n","import { useMemo } from 'react';\nimport { extendTailwindMerge } from 'tailwind-merge';\n\n/**\n * We extend the base tailwind-merge so that conflicts between custom classes can be\n * handled correctly.\n *\n * When new tailwind classes are introduced they should be added to the `classGroups` object below.\n *\n * @example\n * tailwindcss/forms adds the form-input, form-checkbox, etc. classes,\n * so we need to add the 'form' class group here for twMerge to recognize form-input\n * and form-checkbox as conflicting classes.\n */\nexport const twMerge = extendTailwindMerge({\n  classGroups: {\n    form: ['input', 'checkbox', 'textarea', 'select', 'multiselect', 'radio'].map(v => 'form-' + v)\n  }\n});\n\n/**\n * useComposedCssClasses merges a component's built-in tailwind classes with custom tailwind classes.\n *\n * @remarks\n * Tailwind classes will be merged without conflict, with custom classes having higher priority\n * than built-in ones.\n *\n * @example\n * Suppose a component has built-in classes of `{ container: 'px-4 text-slate-700' }`.\n *\n * Passing in the custom classes:\n *\n * ```ts\n * { container: 'text-red-200 mb-3' }\n * ```\n *\n * results in the merged classes of:\n *\n * ```ts\n * { container: 'px-4 text-red-200 mb-3' }\n * ```\n *\n * @public\n *\n * @param builtInClasses - The component's built-in tailwind classes\n * @param customClasses - The custom tailwind classes to merge with the built-in ones\n * @returns The composed CSS classes\n */\nexport function useComposedCssClasses<\n  ClassInterface extends Partial<Record<keyof ClassInterface & string, string>>\n>(\n  builtInClasses: Readonly<ClassInterface>,\n  customClasses?: Partial<ClassInterface>\n): ClassInterface {\n  return useMemo(() => {\n    const mergedCssClasses = { ...builtInClasses };\n    if (!customClasses) {\n      return mergedCssClasses;\n    }\n    Object.keys(customClasses).forEach(key => {\n      const builtIn = builtInClasses[key];\n      const custom = customClasses[key];\n      if (!builtIn || !custom) {\n        mergedCssClasses[key] = custom || builtIn;\n      } else {\n        mergedCssClasses[key] = twMerge(builtIn, custom);\n      }\n    });\n    return mergedCssClasses;\n  }, [builtInClasses, customClasses]);\n}","import { MagnifyingGlassIcon } from '../icons/MagnifyingGlassIcon';\n\ninterface Props {\n  handleClick: () => void,\n  className?: string\n}\n\nexport function SearchButton({ handleClick, className }: Props): JSX.Element {\n  return (\n    <button\n      className={className}\n      onClick={handleClick}\n      aria-label='Submit Search'\n    >\n      <MagnifyingGlassIcon />\n    </button>\n  );\n}","export function processTranslation(args: {\n  phrase: string,\n  pluralForm?: string,\n  count?: number\n}): string {\n  if (args.count != null && args.pluralForm && args.count !== 1) {\n    return args.pluralForm;\n  } else {\n    return args.phrase;\n  }\n}","import { HighlightedValue } from '@yext/search-headless-react';\n\nconst defaultCssClasses: HighlightedValueCssClasses = {\n  highlighted: 'font-normal',\n  nonHighlighted: 'font-semibold'\n};\n\n/**\n * The CSS class interface for {@link renderHighlightedValue}.\n *\n * @public\n */\nexport interface HighlightedValueCssClasses {\n  highlighted?: string,\n  nonHighlighted?: string\n}\n\n/**\n * Renders a HighlightedValue with highlighting based on its matchedSubstrings.\n * @returns JSX.Element\n *\n * @public\n *\n * @param highlightedValueOrString - the text to add highlight to.\n * @param customCssClasses - css classes use for the non-highlighted and highlighted text.\n */\nexport function renderHighlightedValue(\n  highlightedValueOrString: Partial<HighlightedValue> | string,\n  customCssClasses?: HighlightedValueCssClasses\n): JSX.Element {\n  const { value = '', matchedSubstrings } =\n    typeof highlightedValueOrString === 'string'\n      ? { value: highlightedValueOrString, matchedSubstrings: [] }\n      : highlightedValueOrString;\n\n  const cssClasses = { ...defaultCssClasses, ...customCssClasses };\n  if (!matchedSubstrings || matchedSubstrings.length === 0) {\n    return <span>{value}</span>;\n  }\n  const substrings = [...matchedSubstrings];\n  substrings.sort((a, b) => a.offset - b.offset);\n  const highlightedJSX: JSX.Element[] = [];\n  let curr = 0;\n  for (const { offset, length } of substrings) {\n    if (offset > curr) {\n      highlightedJSX.push(\n        <span key={curr} className={cssClasses.nonHighlighted} >{value.substring(curr, offset)}</span>\n      );\n    }\n    highlightedJSX.push(\n      <span key={offset} className={cssClasses.highlighted}>{value.substring(offset, offset + length)}</span>\n    );\n    curr = offset + length;\n  }\n  if (curr < value.length) {\n    highlightedJSX.push(\n      <span key={curr} className={cssClasses.nonHighlighted} >{value.substring(curr)}</span>\n    );\n  }\n  return <>{highlightedJSX}</>;\n}","import { AutocompleteResult } from '@yext/search-headless-react';\nimport { renderHighlightedValue } from '../utils/renderHighlightedValue';\n\n/**\n * The CSS class interface for the Autocomplete Result.\n *\n * @public\n */\nexport interface AutocompleteResultCssClasses {\n  option?: string,\n  icon?: string,\n  highlighted?: string,\n  nonHighlighted?: string\n}\n\nexport const builtInCssClasses: Readonly<AutocompleteResultCssClasses> = {\n  option: 'whitespace-no-wrap max-w-full px-3 text-neutral-dark truncate',\n  icon: 'w-6 h-full flex-shrink-0 text-gray-400'\n};\n\n/**\n * Renders an autocomplete result, including an icon to the left if provided.\n * @param result - The result to render\n * @returns JSX.Element\n */\nexport function renderAutocompleteResult(\n  result: AutocompleteResult,\n  cssClasses: AutocompleteResultCssClasses = {},\n  Icon?: React.FunctionComponent<React.SVGProps<SVGSVGElement>>,\n  ariaLabel?: string\n): JSX.Element {\n  return (<>\n    {Icon && <div className={cssClasses.icon}>\n      <Icon />\n    </div>}\n    <div aria-label={ariaLabel || ''} className={cssClasses.option}>\n      {renderHighlightedValue(result, cssClasses)}\n    </div>\n  </>);\n}\n","import { AnalyticsService } from '@yext/analytics';\nimport { createContext, useContext } from 'react';\n\nexport const AnalyticsContext = createContext<AnalyticsService | null>(null);\n\n/**\n * Returns a service that can be used to report analytics events.\n *\n * @public\n */\nexport function useAnalytics(): AnalyticsService | null {\n  return useContext(AnalyticsContext);\n}\n","import { useAnalytics } from './useAnalytics';\nimport { useSearchState } from '@yext/search-headless-react';\n\ntype SearchBarAnalyticsType = 'AUTO_COMPLETE_SELECTION' | 'SEARCH_CLEAR_BUTTON';\n\nexport function useSearchBarAnalytics(): (\n  analyticsEventType: SearchBarAnalyticsType,\n  suggestedSearchText?: string\n) => void {\n  const analytics = useAnalytics();\n  const verticalKey = useSearchState(state => state.vertical.verticalKey);\n  const queryId = useSearchState(state => state.query.queryId);\n\n  const reportAutocompleteEvent = (suggestedSearchText: string) => {\n    analytics?.report({\n      type: 'AUTO_COMPLETE_SELECTION',\n      ...(queryId && { queryId }),\n      suggestedSearchText\n    });\n  };\n  const reportSearchClearEvent = () => {\n    if (!queryId) {\n      console.error('Unable to report a search clear event. Missing field: queryId.');\n      return;\n    }\n    analytics?.report({\n      type: 'SEARCH_CLEAR_BUTTON',\n      queryId,\n      verticalKey\n    });\n  };\n  const reportAnalyticsEvent = (\n    analyticsEventType: SearchBarAnalyticsType,\n    suggestedSearchText?: string\n  ) => {\n    if (!analytics) {\n      return;\n    }\n    analyticsEventType === 'AUTO_COMPLETE_SELECTION'\n      ? reportAutocompleteEvent(suggestedSearchText || '')\n      : reportSearchClearEvent();\n  };\n  return reportAnalyticsEvent;\n}\n","/**\n * Data needed to create a URL to a vertical search page.\n *\n * @public\n */\nexport interface VerticalLink {\n  /** The vertical key associated with the vertical link. */\n  verticalKey: string,\n  /** The query used when the vertical link is selected. */\n  query?: string\n}\n\nexport const isVerticalLink = (obj: unknown): obj is VerticalLink => {\n  return typeof obj === 'object' && !!obj && 'verticalKey' in obj;\n};","import { NearFilterValue, FieldValueFilter, NumberRangeValue, Matcher, SearchActions, DisplayableFacet, SelectableStaticFilter, StaticFilter } from '@yext/search-headless-react';\nimport lodash from 'lodash';\nimport { isNumberRangeFilter } from '../models/NumberRangeFilter';\nimport { SelectableFieldValueFilter } from '../models/SelectableFieldValueFilter';\n\n/**\n * Check if the object follows NearFilterValue interface.\n */\nexport function isNearFilterValue(obj: unknown): obj is NearFilterValue {\n  return typeof obj === 'object' && !!obj && 'radius' in obj && 'lat' in obj && 'long' in obj;\n}\n\n/**\n * Checks if the object follows the NumberRangeValue interface.\n */\nexport function isNumberRangeValue(obj: unknown): obj is NumberRangeValue {\n  return typeof obj === 'object' && !!obj && ('start' in obj || 'end' in obj);\n}\n\n/**\n * Checks if the facet is a string facet with string options.\n */\nexport function isStringFacet(facet: DisplayableFacet): boolean {\n  return facet.options.length > 0 && typeof facet.options[0].value === 'string';\n}\n\n/**\n * Checks if the facet is a numerical facet with number range filter options.\n */\nexport function isNumericalFacet(facet: DisplayableFacet): boolean {\n  return facet.options.length > 0 &&\n    facet.options.some(option => isNumberRangeFilter(option));\n}\n\n/**\n * Returns true if the two given field value filters are the same.\n */\nexport function isDuplicateFieldValueFilter(\n  thisFilter: FieldValueFilter,\n  otherFilter: FieldValueFilter\n): boolean {\n  if (thisFilter.fieldId !== otherFilter.fieldId) {\n    return false;\n  }\n  if (thisFilter.matcher !== otherFilter.matcher) {\n    return false;\n  }\n  if (!lodash.isEqual(thisFilter.value, otherFilter.value)) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Returns true if the two given static filters are the same.\n */\nexport function isDuplicateStaticFilter(thisFilter: StaticFilter, otherFilter: StaticFilter): boolean {\n  if (thisFilter.kind === 'fieldValue') {\n    return otherFilter.kind === 'fieldValue'\n      ? isDuplicateFieldValueFilter(thisFilter, otherFilter)\n      : false;\n  }\n\n  if (otherFilter.kind === 'fieldValue') {\n    return false;\n  }\n\n  return thisFilter.combinator === otherFilter.combinator\n    && thisFilter.filters.length === otherFilter.filters.length\n    && thisFilter.filters.every(t => otherFilter.filters.some(o => isDuplicateStaticFilter(t, o)))\n    && otherFilter.filters.every(o => thisFilter.filters.some(t => isDuplicateStaticFilter(o, t)));\n}\n\n/**\n * Finds the {@link SelectableFieldValueFilter} from the list provided that matches\n * the given {@link FieldValueFilter}. If no matching {@link SelectableFieldValueFilter}\n * can be found, undefined is returned.\n *\n * @param filter - The filter to match against\n * @param selectableFilters - The list of {@link SelectableFieldValueFilter}s to search against\n */\nexport function findSelectableFieldValueFilter(\n  filter: FieldValueFilter,\n  selectableFilters: SelectableFieldValueFilter[]\n): SelectableFieldValueFilter | undefined {\n  return selectableFilters.find(selectableFilter => {\n    const { displayName: _, ...storedFilter } = selectableFilter;\n    return isDuplicateFieldValueFilter(storedFilter, filter);\n  });\n}\n\n/**\n * Creates a number range value based on a min and max from user input.\n */\nexport function parseNumberRangeInput(minRangeInput: string, maxRangeInput: string): NumberRangeValue {\n  const minRange = parseNumber(minRangeInput);\n  const maxRange = parseNumber(maxRangeInput);\n\n  return {\n    ...(minRange !== undefined && {\n      start: {\n        matcher: Matcher.GreaterThanOrEqualTo,\n        value: minRange\n      }\n    }),\n    ...(maxRange !== undefined && {\n      end: {\n        matcher: Matcher.LessThanOrEqualTo,\n        value: maxRange\n      }\n    })\n  };\n}\n\n/**\n * Given a string, returns the corresponding number, or undefined if it is NaN.\n */\nfunction parseNumber(num: string) {\n  const parsedNum = parseFloat(num);\n  if (isNaN(parsedNum)) {\n    return undefined;\n  }\n  return parsedNum;\n}\n\n/**\n * Deselects the selected static number range filters in state. If fieldIds are\n * provided, only filters corresponding to one of those fieldIds are deselected.\n * Otherwise, all selected filters are deselected.\n */\nexport function clearStaticRangeFilters(searchActions: SearchActions, fieldIds?: Set<string>) {\n  const selectedStaticRangeFilters = searchActions.state?.filters?.static?.filter(filter =>\n    isNumberRangeFilter(filter)\n    && filter.selected === true\n    && (!fieldIds || fieldIds.has(filter.fieldId))\n  );\n  selectedStaticRangeFilters?.forEach(filter => {\n    searchActions.setFilterOption({\n      ...filter,\n      selected: false\n    });\n  });\n}\n\n/**\n * Returns a set of fieldIds of the numerical facets in state that have at\n * least one option selected.\n */\nexport function getSelectedNumericalFacetFields(searchActions: SearchActions): Set<string> {\n  const selectedNumericalFacets = searchActions.state.filters.facets?.filter(\n    f => isNumericalFacet(f) && f.options.some(o => o.selected)\n  ) ?? [];\n  return new Set(selectedNumericalFacets.map(f => f.fieldId));\n}\n\n/**\n * Goes through the provided static filters and returns all that are field value\n * filters.\n *\n * @param staticFilters - The list of {@link SelectableStaticFilter}s to search through\n * @returns All filters that are {@link SelectableFieldValueFilter}s\n */\nexport function getSelectableFieldValueFilters(\n  staticFilters: SelectableStaticFilter[]\n): SelectableFieldValueFilter[] {\n  return staticFilters.map(s => {\n    const { filter: { kind, ...filterFields }, ...displayFields } = s;\n    if (kind === 'fieldValue') {\n      return {\n        ...displayFields,\n        ...filterFields\n      };\n    }\n    return undefined;\n  }).filter((s): s is SelectableFieldValueFilter => !!s);\n}\n","import { FieldValueFilter, Matcher, NumberRangeValue } from '@yext/search-headless-react';\nimport { isNumberRangeValue } from '../utils/filterutils';\n\nexport interface NumberRangeFilter extends FieldValueFilter {\n  value: NumberRangeValue,\n  matcher: Matcher.Between\n}\n\nexport function isNumberRangeFilter(unknownFilter: unknown = {}): unknownFilter is NumberRangeFilter {\n  const filter = unknownFilter as NumberRangeFilter;\n  return (filter.matcher === Matcher.Between) && isNumberRangeValue(filter.value);\n}","import { useSearchState, useSearchActions } from '@yext/search-headless-react';\nimport classNames from 'classnames';\nimport { useCallback } from 'react';\nimport { useComposedCssClasses } from '../hooks/useComposedCssClasses';\nimport { executeSearch } from '../utils/search-operations';\n\n/**\n * The CSS Class interface for SpellCheck.\n *\n * @public\n */\nexport interface SpellCheckCssClasses {\n  spellCheckLoading?: string,\n  spellCheckContainer?: string,\n  helpText?: string,\n  link?: string\n}\n\nconst builtInCssClasses: Readonly<SpellCheckCssClasses> = {\n  spellCheckLoading: 'opacity-50',\n  spellCheckContainer: 'text-lg pb-3',\n  helpText: 'text-neutral',\n  link: 'text-primary font-bold hover:underline focus:underline'\n};\n\n/**\n * The props for the {@link SpellCheck} component.\n *\n * @public\n */\nexport interface SpellCheckProps {\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: SpellCheckCssClasses,\n  /** A function which is called when a spell check suggestion is clicked. */\n  onClick?: (data: { correctedQuery: string, verticalKey: string }) => void\n}\n\n/**\n * Renders a suggested query if the Search API provides one.\n *\n * @public\n *\n * @param props - {@link SpellCheckProps}\n * @returns A react component for spell check, or null if none exists\n */\nexport function SpellCheck({\n  customCssClasses,\n  onClick\n}: SpellCheckProps): JSX.Element | null {\n  const verticalKey = useSearchState(state => state.vertical.verticalKey) ?? '';\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n  const correctedQuery = useSearchState(state => state.spellCheck.correctedQuery) ?? '';\n  const isLoading = useSearchState(state => state.searchStatus.isLoading);\n  const containerClassNames = classNames(cssClasses.spellCheckContainer, {\n    [cssClasses.spellCheckLoading ?? '']: isLoading\n  });\n  const searchActions = useSearchActions();\n  const handleClickSuggestion = useCallback(() => {\n    searchActions.setQuery(correctedQuery);\n    onClick\n      ? onClick({ correctedQuery, verticalKey })\n      : executeSearch(searchActions);\n  }, [searchActions, correctedQuery, onClick, verticalKey]);\n\n  if (!correctedQuery) {\n    return null;\n  }\n  return (\n    <div className={containerClassNames}>\n      <span className={cssClasses.helpText}>Did you mean </span>\n      <button className={cssClasses.link} onClick={handleClickSuggestion}>{correctedQuery}</button>\n    </div>\n  );\n}","import {\n  useSearchState,\n  DirectAnswerType,\n  DirectAnswer as DirectAnswerData,\n  UnknownFieldValueDirectAnswer,\n} from '@yext/search-headless-react';\nimport {\n  ThumbsFeedbackCssClasses,\n  ThumbsFeedback,\n  builtInCssClasses as thumbsFeedbackCssClasses\n} from './ThumbsFeedback';\nimport { twMerge, useComposedCssClasses } from '../hooks/useComposedCssClasses';\nimport { useCardAnalyticsCallback } from '../hooks/useCardAnalyticsCallback';\nimport { useCardFeedbackCallback } from '../hooks/useCardFeedbackCallback';\nimport { FieldValueDirectAnswer } from './FieldValueDirectAnswer';\nimport { FeaturedSnippetDirectAnswer } from './FeaturedSnippetDirectAnswer';\n\n/**\n * Props for {@link UnknownFieldTypeDisplayComponent}.\n *\n * @public\n */\nexport interface UnknownFieldTypeDisplayProps {\n  result: UnknownFieldValueDirectAnswer\n}\n\n/**\n * A React component interface to render results with \"unknown\" field type in field value direct answer.\n *\n * @public\n */\nexport type UnknownFieldTypeDisplayComponent = (\n  props: UnknownFieldTypeDisplayProps\n) => JSX.Element;\n\n/**\n * Props for {@link DirectAnswer}.\n *\n * @public\n */\nexport interface DirectAnswerProps {\n  /** A component to handle rendering results with \"unknown\" field type in field value direct answer. */\n  UnknownFieldTypeDisplay?: UnknownFieldTypeDisplayComponent,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: DirectAnswerCssClasses\n}\n\n/**\n *  The CSS class interface for {@link DirectAnswer}.\n *\n * @public\n */\nexport interface DirectAnswerCssClasses extends ThumbsFeedbackCssClasses {\n  directAnswerContainer?: string,\n  directAnswerLoading?: string,\n  answer?: string,\n  description?: string,\n  content?: string,\n  highlighted?: string,\n  answerContainer?: string\n}\n\nconst builtInCssClasses: Readonly<DirectAnswerCssClasses> = {\n  directAnswerContainer: '',\n  directAnswerLoading: 'opacity-50',\n  answer: 'font-bold text-xl text-neutral-dark',\n  description: 'text-neutral',\n  content: 'mt-4',\n  highlighted: 'bg-primary-light',\n  answerContainer: 'p-4 border border-gray-200 rounded-lg shadow-sm',\n  thumbsFeedbackContainer: thumbsFeedbackCssClasses.thumbsFeedbackContainer,\n  thumbsUpIcon: thumbsFeedbackCssClasses.thumbsUpIcon,\n  thumbsDownIcon: thumbsFeedbackCssClasses.thumbsDownIcon\n};\n\n/**\n * Renders Direct Answers provided by the Search API.\n *\n * @public\n *\n * @param props - {@link DirectAnswerProps}\n * @returns A react element for DirectAnswer\n */\nexport function DirectAnswer({\n  customCssClasses,\n  UnknownFieldTypeDisplay\n}: DirectAnswerProps): JSX.Element | null {\n  const directAnswerResult = useSearchState(state => state.directAnswer.result);\n  const isLoading = useSearchState(state => state.searchStatus.isLoading || false);\n  const composedCssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n\n  const handleClickViewDetails = useCardAnalyticsCallback(directAnswerResult as DirectAnswerData, 'CTA_CLICK');\n  const handleClickFeedbackButton = useCardFeedbackCallback(directAnswerResult as DirectAnswerData);\n\n  if (!directAnswerResult) {\n    return null;\n  }\n\n  const cssClasses = getCssClassesForAnswerType(composedCssClasses, directAnswerResult.type);\n  const containerCssClasses = twMerge(\n    cssClasses.directAnswerContainer,\n    isLoading && cssClasses.directAnswerLoading\n  );\n\n  return (\n    <div className={containerCssClasses}>\n      {directAnswerResult.type === DirectAnswerType.FieldValue\n        ? <FieldValueDirectAnswer\n          result={directAnswerResult}\n          cssClasses={cssClasses}\n          viewDetailsClickHandler={handleClickViewDetails}\n          UnknownFieldTypeDisplay={UnknownFieldTypeDisplay}\n        />\n        : <FeaturedSnippetDirectAnswer\n          result={directAnswerResult}\n          readMoreClickHandler={handleClickViewDetails}\n          cssClasses={cssClasses}\n        />\n      }\n      <ThumbsFeedback\n        onClick={handleClickFeedbackButton}\n        customCssClasses={composedCssClasses}\n      />\n    </div>\n  );\n}\n\nfunction getCssClassesForAnswerType(cssClasses: DirectAnswerCssClasses, type: DirectAnswerType) {\n  const isSnippet = type === DirectAnswerType.FeaturedSnippet;\n  return {\n    ...cssClasses,\n    header: isSnippet ? cssClasses.answer : cssClasses.description,\n    body: isSnippet ? cssClasses.description : cssClasses.answer\n  };\n}\n","import { useSearchState } from '@yext/search-headless-react';\nimport { useCallback, useState } from 'react';\nimport { ThumbIcon } from '../icons/ThumbIcon';\nimport { useComposedCssClasses } from '../hooks/useComposedCssClasses';\nimport useIsomorphicLayoutEffect from \"use-isomorphic-layout-effect\";\nconst useLayoutEffect = typeof useIsomorphicLayoutEffect === 'function'\n  ? useIsomorphicLayoutEffect\n  : useIsomorphicLayoutEffect['default'];\n\n/**\n * Analytics event types for quality feedback.\n *\n * @public\n */\nexport type FeedbackType = 'THUMBS_UP' | 'THUMBS_DOWN';\n\n/**\n * The CSS class interface used for {@link ThumbsFeedback}.\n *\n * @public\n */\nexport interface ThumbsFeedbackCssClasses {\n  thumbsFeedbackContainer?: string,\n  thumbsUpIcon?: string,\n  thumbsDownIcon?: string\n}\n\n/**\n * Props for {@link ThumbsFeedback}.\n *\n * @public\n */\nexport interface ThumbsFeedbackProps {\n  /** A function which is called when a quality feedback button is clicked. */\n  onClick: (feedbackType: FeedbackType) => void,\n  /** Text to display alongside the quality feedback buttons. */\n  feedbackText?: string,\n  /** Text to display after a quality feedback button is clicked. */\n  feedbackTextOnSubmission?: string,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: ThumbsFeedbackCssClasses\n}\n\nexport const builtInCssClasses: Readonly<ThumbsFeedbackCssClasses> = {\n  thumbsFeedbackContainer: 'flex justify-end mt-2 text-sm text-gray-500 font-medium',\n  thumbsUpIcon: 'ml-3 w-5',\n  thumbsDownIcon: 'w-5 ml-1 transform rotate-180'\n};\n\n/**\n * Renders a quality feedback widget composed of thumbs up and thumbs down buttons.\n *\n * @public\n *\n * @param props - The configuration for the the feedback component.\n * @returns A React element for quality feedback widget.\n */\nexport function ThumbsFeedback(props: ThumbsFeedbackProps): JSX.Element {\n  const {\n    onClick,\n    feedbackText = 'Feedback',\n    feedbackTextOnSubmission = 'Thank you for your feedback!',\n  } = props;\n  const cssClasses = useComposedCssClasses(builtInCssClasses, props.customCssClasses);\n  const query = useSearchState(state => state.query.mostRecentSearch);\n  const [isFeedbackProvided, setIsFeedbackProvided] = useState(false);\n\n  const handleClickThumbsUp = useCallback(() => {\n    onClick('THUMBS_UP');\n    setIsFeedbackProvided(true);\n  }, [onClick]);\n\n  const handleClickThumbsDown = useCallback(() => {\n    onClick('THUMBS_DOWN');\n    setIsFeedbackProvided(true);\n  }, [onClick]);\n\n  // Changes to most recent search query will trigger re-render to reset quality feedback submission.\n  useLayoutEffect(() => {\n    setIsFeedbackProvided(false);\n  }, [query]);\n\n  return (\n    <div className={cssClasses.thumbsFeedbackContainer}>\n      {isFeedbackProvided\n        ? feedbackTextOnSubmission\n        : <>\n          {feedbackText}\n          <button\n            className={cssClasses.thumbsUpIcon}\n            onClick={handleClickThumbsUp}\n            aria-label='This answered my question'\n          >\n            <ThumbIcon/>\n          </button>\n          <button\n            className={cssClasses.thumbsDownIcon}\n            onClick={handleClickThumbsDown}\n            aria-label='This did not answer my question'\n          >\n            <ThumbIcon/>\n          </button>\n        </>\n      }\n    </div>\n  );\n}","export function ThumbIcon({ className }: { className?: string }): JSX.Element {\n  return (\n    <svg className={className} viewBox=\"0 0 18 18\" fill=\"none\" stroke=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M10.6667 7.33333H14.6366C15.8756 7.33333 16.6814 8.63719 16.1273 9.74536L13.2107 15.5787C12.9283 16.1433 12.3512 16.5 11.7199 16.5H8.37184C8.23557 16.5 8.09982 16.4833 7.96762 16.4502L4.83333 15.6667M10.6667 7.33333V3.16667C10.6667 2.24619 9.92047 1.5 9 1.5H8.92044C8.50414 1.5 8.16667 1.83748 8.16667 2.25377C8.16667 2.84903 7.99047 3.43096 7.66028 3.92624L4.83333 8.16667V15.6667M10.6667 7.33333H9M4.83333 15.6667H3.16667C2.24619 15.6667 1.5 14.9205 1.5 14V9C1.5 8.07953 2.24619 7.33333 3.16667 7.33333H5.25\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  );\n}","import { useCallback } from 'react';\nimport { DefaultRawDataType } from '../models';\nimport {\n  CardAnalyticsDataType,\n  CardAnalyticsType,\n  useCardAnalytics\n} from './useCardAnalytics';\n\n/**\n * Creates a memoized function for reporting card analytics.\n *\n * @public\n *\n * @param result - result that contains data use in the card analytics event.\n * @param analyticsType - the card analytics event type to report.\n */\nexport function useCardAnalyticsCallback<T = DefaultRawDataType>(\n  result: CardAnalyticsDataType<T>,\n  analyticsType: CardAnalyticsType\n): () => void {\n  const reportAnalyticsEvent = useCardAnalytics<T>();\n  return useCallback(() => {\n    reportAnalyticsEvent(result, analyticsType);\n  }, [analyticsType, reportAnalyticsEvent, result]);\n}\n\n","import {\n  DirectAnswer as DirectAnswerData,\n  DirectAnswerType,\n  FieldValueDirectAnswer,\n  Result,\n  useSearchState\n} from '@yext/search-headless-react';\nimport { useCallback } from 'react';\nimport { FeedbackType } from '../components/ThumbsFeedback';\nimport { DefaultRawDataType } from '../models';\nimport { useAnalytics } from './useAnalytics';\n\n/**\n * Analytics event types for cta click and title click.\n *\n * @public\n */\nexport type CardCtaEventType = 'CTA_CLICK' | 'TITLE_CLICK';\n\n/**\n * The data types use to construct the payload in the analytics event.\n *\n * @public\n */\nexport type CardAnalyticsDataType<T = DefaultRawDataType> = DirectAnswerData | Result<T>;\n\n/**\n * Analytics event types for interactions on a card.\n *\n * @public\n */\nexport type CardAnalyticsType = CardCtaEventType | FeedbackType;\n\nfunction isDirectAnswer(data: unknown): data is DirectAnswerData {\n  return (data as DirectAnswerData)?.type === DirectAnswerType.FeaturedSnippet ||\n    (data as DirectAnswerData)?.type === DirectAnswerType.FieldValue;\n}\n\nexport function useCardAnalytics<T>(): (\n  cardResult: CardAnalyticsDataType<T>, analyticsEventType: CardAnalyticsType\n) => void {\n  const analytics = useAnalytics();\n  const verticalKey = useSearchState(state => state.vertical.verticalKey);\n  const queryId = useSearchState(state => state.query.queryId);\n\n  const reportCtaEvent = useCallback((\n    result: CardAnalyticsDataType<T>,\n    eventType: CardCtaEventType\n  ) => {\n    let url: string | undefined, entityId: string | undefined, fieldName: string | undefined;\n    let directAnswer = false;\n    if (isDirectAnswer(result)) {\n      url = result.relatedResult.link;\n      entityId = result.relatedResult.id;\n      fieldName = result.type === DirectAnswerType.FeaturedSnippet\n        ? undefined\n        : (result as FieldValueDirectAnswer).fieldName;\n      directAnswer = true;\n    } else {\n      url = result.link;\n      entityId = result.id;\n    }\n\n    if (!queryId) {\n      console.error('Unable to report a CTA event. Missing field: queryId.');\n      return;\n    }\n    if (!entityId) {\n      console.error('Unable to report a CTA event. Missing field: entityId.');\n      return;\n    }\n    analytics?.report({\n      type: eventType,\n      entityId,\n      searcher: verticalKey ? 'VERTICAL' : 'UNIVERSAL',\n      queryId,\n      verticalKey: verticalKey || '',\n      url,\n      fieldName,\n      directAnswer\n    });\n  }, [analytics, queryId, verticalKey]);\n\n  const reportFeedbackEvent = useCallback((\n    result: CardAnalyticsDataType<T>,\n    feedbackType: FeedbackType\n  ) => {\n    if (!queryId) {\n      console.error('Unable to report a result feedback event. Missing field: queryId.');\n      return;\n    }\n    let directAnswer = false;\n    let entityId: string | undefined;\n    if (isDirectAnswer(result)) {\n      directAnswer = true;\n      entityId = result.relatedResult.id;\n    } else {\n      entityId = result.id;\n    }\n    analytics?.report({\n      type: feedbackType,\n      entityId,\n      searcher: verticalKey ? 'VERTICAL' : 'UNIVERSAL',\n      queryId,\n      verticalKey: verticalKey || '',\n      directAnswer\n    });\n  }, [analytics, queryId, verticalKey]);\n\n  const reportAnalyticsEvent = useCallback((\n    cardResult: CardAnalyticsDataType<T>,\n    analyticsEventType: CardAnalyticsType\n  ) => {\n    if (!analytics) {\n      return;\n    }\n    if (analyticsEventType === 'TITLE_CLICK' || analyticsEventType === 'CTA_CLICK') {\n      reportCtaEvent(cardResult, analyticsEventType);\n    }\n    if (analyticsEventType === 'THUMBS_DOWN' || analyticsEventType === 'THUMBS_UP') {\n      reportFeedbackEvent(cardResult, analyticsEventType);\n    }\n  }, [analytics, reportCtaEvent, reportFeedbackEvent]);\n  return reportAnalyticsEvent;\n}","import { useCallback } from 'react';\nimport { FeedbackType } from '../components/ThumbsFeedback';\nimport { DefaultRawDataType } from '../models';\nimport { CardAnalyticsDataType, useCardAnalytics } from './useCardAnalytics';\n\n/**\n * Creates a memoized function for reporting card feedback analytics.\n *\n * @public\n *\n * @param result - card result that contains data use in the feedback analytics event.\n */\nexport function useCardFeedbackCallback<T = DefaultRawDataType>(\n  result: CardAnalyticsDataType<T>,\n): (analyticsType: FeedbackType) => void {\n  const reportAnalyticsEvent = useCardAnalytics<T>();\n  return useCallback((analyticsType: FeedbackType) => {\n    reportAnalyticsEvent(result, analyticsType);\n  }, [reportAnalyticsEvent, result]);\n}\n\n","import {\n  FieldValueDirectAnswer as FieldValueDirectAnswerType,\n  BuiltInFieldType,\n  Address,\n  UnknownFieldValueDirectAnswer\n} from '@yext/search-headless-react';\nimport { useMemo } from 'react';\nimport { UnknownFieldTypeDisplayComponent } from './DirectAnswer';\n\n/**\n * Props for FieldValueDirectAnswer.\n */\ninterface FieldValueDirectAnswerProps {\n  /** A field value direct answer result. */\n  result: FieldValueDirectAnswerType,\n  /** Handle onClick event for \"View Details\" link. */\n  viewDetailsClickHandler?: () => void,\n  /** {@inheritDoc DirectAnswerProps.UnknownFieldTypeDisplay} */\n  UnknownFieldTypeDisplay?: UnknownFieldTypeDisplayComponent,\n  /** CSS classes for customizing the component styling. */\n  cssClasses?: FieldValueDirectAnswerCssClasses\n}\n\n/**\n * The CSS class interface for FieldValueDirectAnswer.\n */\ninterface FieldValueDirectAnswerCssClasses {\n  header?: string,\n  body?: string,\n  content?: string,\n  answerContainer?: string\n}\n\n/**\n * Renders a field value direct answer provided by the Search API.\n *\n * @internal\n */\nexport function FieldValueDirectAnswer({\n  result,\n  viewDetailsClickHandler,\n  UnknownFieldTypeDisplay,\n  cssClasses = {}\n}: FieldValueDirectAnswerProps): JSX.Element {\n  const title = `${result.entityName} / ${result.fieldName}`;\n  const link = result.relatedResult.link ?? result.relatedResult.rawData.landingPageUrl as string;\n  const resultContent = useMemo(() => {\n    return getResultContent(result, UnknownFieldTypeDisplay);\n  }, [result, UnknownFieldTypeDisplay]);\n\n  return (\n    <div className={cssClasses.answerContainer}>\n      {title &&\n      <div className={cssClasses.header}>{title}</div>}\n      <div className={cssClasses.content}>\n        <div className={cssClasses.body}>{resultContent}</div>\n        {link && <div className='mt-4'>\n          <a href={link} className='text-primary' onClick={viewDetailsClickHandler}>\n            View Details\n          </a>\n        </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nfunction DefaultUnknownFieldTypeDisplay({ result }: { result: UnknownFieldValueDirectAnswer }): JSX.Element {\n  let val: string | number;\n  if (typeof result.value !== 'string' && typeof result.value !== 'number') {\n    console.warn(`Unknown field type for direct answer with \"${result.fieldApiName}\" fieldApiName. Rendering result's value as a string.`\n      + '\\nConsider using prop \"UnknownFieldTypeDisplay\" in DirectAnswer component to properly render result of unknown field type.');\n    val = JSON.stringify(result.value);\n  } else {\n    val = result.value;\n  }\n  return getTextJsxElement(val);\n}\n\nfunction getResultContent(\n  result: FieldValueDirectAnswerType,\n  UnknownFieldTypeDisplay: UnknownFieldTypeDisplayComponent = DefaultUnknownFieldTypeDisplay\n): JSX.Element {\n  switch (result.fieldType) {\n    case BuiltInFieldType.InstagramHandle:\n      return getAnchorTagJsxElement(`https://www.instagram.com/${result.value}`, result.value);\n    case BuiltInFieldType.TwitterHandle:\n      return getAnchorTagJsxElement(`https://twitter.com/${result.value}`, `@${result.value}`);\n    case BuiltInFieldType.FacebookURL:\n    case BuiltInFieldType.AndroidAppURL:\n    case BuiltInFieldType.IOSAppURL:\n      return getAnchorTagJsxElement(result.value);\n    case BuiltInFieldType.ComplexURL:\n      const url = result.value.url;\n      const displayUrl = result.value.preferDisplayUrl ? result.value.displayUrl : url;\n      return getAnchorTagJsxElement(url, displayUrl);\n    case BuiltInFieldType.URL:\n      return Array.isArray(result.value)\n        ? getListJsxElement(result.value, url => getAnchorTagJsxElement(url))\n        : getAnchorTagJsxElement(result.value);\n    case BuiltInFieldType.Phone:\n      return getAnchorTagJsxElement(`tel:${result.value}`, result.value);\n    case BuiltInFieldType.Email:\n      return getListJsxElement(result.value, e => getAnchorTagJsxElement(`mailto:${e}`, e));\n    case BuiltInFieldType.Address:\n      return getAddressJsxElement(result.value);\n    case BuiltInFieldType.RichText:\n      //TODO: SLAP-2340\n      console.warn('Rendering markdown for rich text direct answer is currently not supported. Displaying the unrendered markdown string(s) as is.');\n      return Array.isArray(result.value)\n        ? getListJsxElement(result.value, val => getTextJsxElement(val))\n        : getTextJsxElement(result.value);\n    case BuiltInFieldType.Hours:\n      return <div>{JSON.stringify(result.value)}</div>;\n    case 'unknown':\n      return <UnknownFieldTypeDisplay result={result}/>;\n    default:\n      return Array.isArray(result.value)\n        ? getListJsxElement(result.value as (string | number)[], val => getTextJsxElement(val))\n        : getTextJsxElement(result.value as string | number);\n  }\n}\n\nfunction getListJsxElement<T>(\n  list: T[],\n  getItemJsxElement: (el: T) => JSX.Element\n): JSX.Element {\n  return (<ul className='list-disc list-inside'>\n    {list.map((el, i) =>\n      <li key={i}>\n        {getItemJsxElement(el)}\n      </li>)}\n  </ul>);\n}\n\nfunction getTextJsxElement(text: string | number): JSX.Element {\n  return <p className='whitespace-pre-wrap'>{text}</p>;\n}\n\nfunction getAnchorTagJsxElement(href: string, displayText?: string): JSX.Element {\n  return <a href={href} className='text-primary'>{displayText ?? href}</a>;\n}\n\nfunction getAddressJsxElement(address: Address): JSX.Element {\n  // user specified display Address in KM\n  if (address.extraDescription) {\n    return <div>{address.extraDescription}</div>;\n  }\n  const formattedCity = address.city ? address.city + ',' : '';\n  const formattedCityRegionPostalCode = [formattedCity, address.region, address.postalCode].join(' ').trim();\n\n  return <div>\n    {address.line1 && <p>{address.line1}</p>}\n    {address.line2 && <p>{address.line2}</p>}\n    {address.line3 && <p>{address.line3}</p>}\n    {formattedCityRegionPostalCode && <p>{formattedCityRegionPostalCode}</p>}\n    <p>{address.countryCode}</p>\n  </div>;\n}\n","import { FeaturedSnippetDirectAnswer as FeaturedSnippetDirectAnswerType } from '@yext/search-headless-react';\nimport { renderHighlightedValue } from './utils/renderHighlightedValue';\nimport { useMemo } from 'react';\n\n/**\n * Props for {@link FeaturedSnippetDirectAnswer}.\n */\ninterface FeaturedSnippetDirectAnswerProps {\n  /** A featured snippet direct answer result. */\n  result: FeaturedSnippetDirectAnswerType,\n  /** Handle onClick event for \"Read more about\" link. */\n  readMoreClickHandler?: () => void,\n  /** CSS classes for customizing the component styling. */\n  cssClasses?: FeaturedSnippetDirectAnswerCssClasses\n}\n\n/**\n *  The CSS class interface for {@link FeaturedSnippetDirectAnswer}.\n */\ninterface FeaturedSnippetDirectAnswerCssClasses {\n  header?: string,\n  body?: string,\n  content?: string,\n  answerContainer?: string,\n  highlighted?: string\n}\n\n/**\n * Renders a featured snippet direct answer provided by the Search API.\n *\n * @internal\n */\n\nconst unsupportedTextFormats: string[] = ['rich_text', 'rich_text_v2', 'markdown'];\n\nexport function FeaturedSnippetDirectAnswer({\n  result,\n  readMoreClickHandler,\n  cssClasses = {}\n}: FeaturedSnippetDirectAnswerProps): JSX.Element {\n  const answer = result.fieldType === 'multi_line_text' && result.value;\n  if (unsupportedTextFormats.includes(result.fieldType)) {\n    console.warn('Rendering ' + result.fieldType + ' direct answer is currently not supported. ' +\n        'You can modify your search configuration to convert ' + result.fieldType + ' to HTML to be rendered '\n        + 'on the page.');\n  }\n  let snippet: JSX.Element;\n  const snippetValue = useMemo(() =>\n  { return { __html: result.snippet?.value }; }, [result.snippet?.value]);\n\n  if (result.fieldType === 'html') {\n    snippet = (\n      <div dangerouslySetInnerHTML={snippetValue}></div>\n    );\n  }\n  else {\n    snippet = renderHighlightedValue(result.snippet, { highlighted: cssClasses.highlighted });\n  }\n  const link = result.relatedResult.link || result.relatedResult.rawData.landingPageUrl as string;\n  const name = result.relatedResult.name;\n  const snippetLinkMessage = 'Read more about ';\n\n  return (\n    <div className={cssClasses.answerContainer}>\n      {answer &&\n        <div className={cssClasses.header}>{answer}</div>}\n      <div className={cssClasses.content}>\n        <div className={cssClasses.body}>{snippet}</div>\n        {link && name && <div className='pt-4 text-neutral'>\n          {snippetLinkMessage}\n          <a\n            className='text-primary'\n            href={link}\n            onClick={readMoreClickHandler}\n          >\n            {name}\n          </a>\n        </div>}\n      </div>\n    </div>\n  );\n}\n","import { AutocompleteResult, FieldValueStaticFilter, FilterSearchResponse, SearchParameterField, SelectableStaticFilter, StaticFilter, useSearchActions, useSearchState } from '@yext/search-headless-react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useComposedCssClasses } from '../hooks/useComposedCssClasses';\nimport { useSynchronizedRequest } from '../hooks/useSynchronizedRequest';\nimport { executeSearch } from '../utils';\nimport { isDuplicateStaticFilter } from '../utils/filterutils';\nimport { Dropdown } from './Dropdown/Dropdown';\nimport { DropdownInput } from './Dropdown/DropdownInput';\nimport { DropdownItem } from './Dropdown/DropdownItem';\nimport { DropdownMenu } from './Dropdown/DropdownMenu';\nimport { processTranslation } from './utils/processTranslation';\nimport { renderAutocompleteResult, AutocompleteResultCssClasses } from './utils/renderAutocompleteResult';\n\n/**\n * The CSS class interface for {@link FilterSearch}.\n *\n * @public\n */\nexport interface FilterSearchCssClasses extends AutocompleteResultCssClasses {\n  filterSearchContainer?: string,\n  label?: string,\n  inputElement?: string,\n  sectionLabel?: string,\n  focusedOption?: string,\n  optionsContainer?: string\n}\n\nconst builtInCssClasses: Readonly<FilterSearchCssClasses> = {\n  filterSearchContainer: 'relative mb-2',\n  label: 'mb-4 text-sm font-medium text-neutral-dark',\n  inputElement: 'text-sm bg-white outline-none h-9 w-full p-2 rounded-md border border-gray-300 focus:border-primary text-neutral-dark placeholder:text-neutral',\n  sectionLabel: 'text-sm text-neutral-dark font-semibold py-2 px-4',\n  focusedOption: 'bg-gray-100',\n  option: 'text-sm text-neutral-dark py-1 cursor-pointer hover:bg-gray-100 px-4'\n};\n\n/**\n * The parameters that are passed into {@link FilterSearchProps.onSelect}.\n *\n * @public\n */\nexport interface OnSelectParams {\n  /** The newly selected filter. */\n  newFilter: FieldValueStaticFilter,\n  /** The display name of the newly selected filter. */\n  newDisplayName: string,\n  /** The previously selected filter. */\n  currentFilter: StaticFilter | undefined,\n  /** A function that sets which filter the component is currently associated with. */\n  setCurrentFilter: (filter: StaticFilter) => void,\n  /**\n   * A function that executes a filter search and updates the input and dropdown options\n   * with the response.\n   */\n  executeFilterSearch: (query?: string) => Promise<FilterSearchResponse | undefined>\n}\n\n/**\n * The props for the {@link FilterSearch} component.\n *\n * @public\n */\nexport interface FilterSearchProps {\n  /** An array of fieldApiName and entityType which indicates what to perform the filter search against. */\n  searchFields: Omit<SearchParameterField, 'fetchEntities'>[],\n  /** The display label for the component. */\n  label?: string,\n  /**\n   * The search input's placeholder text when no text has been entered by the user.\n   * Defaults to \"Search here...\".\n   */\n  placeholder?: string,\n  /**\n   * Whether to trigger a search when an option is selected. Defaults to false.\n   *\n   * @deprecated Use the `onSelect` prop instead.\n   */\n  searchOnSelect?: boolean,\n  /** A function which is called when a filter is selected. */\n  onSelect?: (params: OnSelectParams) => void,\n  /** Determines whether or not the results of the filter search are separated by field. Defaults to false. */\n  sectioned?: boolean,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: FilterSearchCssClasses\n}\n\n/**\n * A component which allows a user to search for filters associated with specific entities and fields.\n *\n * @public\n *\n * @param props - {@link FilterSearchProps}\n * @returns A react component for Filter Search\n */\nexport function FilterSearch({\n  searchFields,\n  label,\n  placeholder = 'Search here...',\n  searchOnSelect,\n  onSelect,\n  sectioned = false,\n  customCssClasses\n}: FilterSearchProps): JSX.Element {\n  const searchActions = useSearchActions();\n  const searchParamFields = searchFields.map((searchField) => {\n    return { ...searchField, fetchEntities: false };\n  });\n  const matchingFieldIds: Set<string> = useMemo(() => {\n    const fieldIds = new Set(searchFields.map(s => s.fieldApiName));\n    if (fieldIds.has('builtin.location')) {\n      ['builtin.region', 'address.countryCode'].forEach(s => fieldIds.add(s));\n    }\n    return fieldIds;\n  }, [searchFields]);\n\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n  const [currentFilter, setCurrentFilter] = useState<StaticFilter>();\n  const [filterQuery, setFilterQuery] = useState<string>();\n  const staticFilters = useSearchState(state => state.filters.static);\n  const matchingFilters: SelectableStaticFilter[] = useMemo(() => {\n    return staticFilters?.filter(({ filter, selected }) =>\n      selected\n      && filter.kind === 'fieldValue'\n      && matchingFieldIds.has(filter.fieldId)\n    ) ?? [];\n  }, [staticFilters, matchingFieldIds]);\n\n  const [\n    filterSearchResponse,\n    executeFilterSearch,\n    clearFilterSearchResponse\n  ] = useSynchronizedRequest<string, FilterSearchResponse>(\n    inputValue => {\n      setFilterQuery(inputValue);\n      return searchActions.executeFilterSearch(inputValue ?? '', sectioned, searchParamFields);\n    },\n    (e) => console.error('Error occured executing a filter search request.\\n', e)\n  );\n\n  useEffect(() => {\n    if (matchingFilters.length > 1 && !onSelect) {\n      console.warn('More than one selected static filter found that matches the filter search fields: ['\n        + [...matchingFieldIds].join(', ')\n        + ']. Please update the state to remove the extra filters.'\n        + ' Picking one filter to display in the input.');\n    }\n\n    if (currentFilter && staticFilters?.find(f =>\n      isDuplicateStaticFilter(f.filter, currentFilter) && f.selected\n    )) {\n      return;\n    }\n\n    if (matchingFilters.length === 0) {\n      clearFilterSearchResponse();\n      setCurrentFilter(undefined);\n      setFilterQuery('');\n    } else {\n      setCurrentFilter(matchingFilters[0].filter);\n      executeFilterSearch(matchingFilters[0].displayName);\n    }\n  }, [\n    clearFilterSearchResponse,\n    currentFilter,\n    staticFilters,\n    executeFilterSearch,\n    onSelect,\n    matchingFilters,\n    matchingFieldIds\n  ]);\n\n  const sections = useMemo(() => {\n    return filterSearchResponse?.sections.filter(section => section.results.length > 0) ?? [];\n  }, [filterSearchResponse?.sections]);\n\n  const hasResults = sections.flatMap(s => s.results).length > 0;\n\n  const handleSelectDropdown = useCallback((_value, _index, itemData) => {\n    const newFilter = itemData?.filter as FieldValueStaticFilter;\n    const newDisplayName = itemData?.displayName as string;\n    if (!newFilter || !newDisplayName) {\n      return;\n    }\n\n    if (onSelect) {\n      if (searchOnSelect) {\n        console.warn('Both searchOnSelect and onSelect props were passed to the component.'\n          + ' Using onSelect instead of searchOnSelect as the latter is deprecated.');\n      }\n      return onSelect({\n        newFilter,\n        newDisplayName,\n        currentFilter,\n        setCurrentFilter,\n        executeFilterSearch\n      });\n    }\n\n    if (matchingFilters.length > 1) {\n      console.warn('More than one selected static filter found that matches the filter search fields: ['\n        + [...matchingFieldIds].join(', ')\n        + ']. Unselecting all existing matching filters and selecting the new filter.');\n    }\n    matchingFilters.forEach(f => searchActions.setFilterOption({ filter: f.filter, selected: false }));\n    if (currentFilter) {\n      searchActions.setFilterOption({ filter: currentFilter, selected: false });\n    }\n    searchActions.setFilterOption({ filter: newFilter, displayName: newDisplayName, selected: true });\n    setCurrentFilter(newFilter);\n    executeFilterSearch(newDisplayName);\n\n    if (searchOnSelect) {\n      searchActions.setOffset(0);\n      searchActions.resetFacets();\n      executeSearch(searchActions);\n    }\n  }, [\n    currentFilter,\n    searchActions,\n    executeFilterSearch,\n    onSelect,\n    searchOnSelect,\n    matchingFilters,\n    matchingFieldIds\n  ]);\n\n  const meetsSubmitCritera = useCallback(index => index >= 0, []);\n\n  const itemDataMatrix = useMemo(() => {\n    return sections.map(section => {\n      return section.results.map(result => ({\n        filter: { ...result.filter, kind: 'fieldValue' },\n        displayName: result.value\n      }));\n    });\n  }, [sections]);\n\n  function renderDropdownItems() {\n    return sections.map((section, sectionIndex) => {\n      return (\n        <div className='pb-2' key={sectionIndex}>\n          {section.label &&\n            <div className={cssClasses.sectionLabel}>\n              {section.label}\n            </div>\n          }\n          <div className={cssClasses.optionsContainer}>\n            {section.results.map((result, index) => (\n              <DropdownItem\n                key={index}\n                focusedClassName={cssClasses.focusedOption}\n                value={result.value}\n                itemData={itemDataMatrix[sectionIndex][index]}\n              >\n                {renderAutocompleteResult(result, cssClasses)}\n              </DropdownItem>\n            ))}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  const handleInputFocus = useCallback((value = '') => {\n    if (value) {\n      executeFilterSearch(value);\n    }\n  }, [executeFilterSearch]);\n\n  return (\n    <div className={cssClasses.filterSearchContainer}>\n      {label && <h1 className={cssClasses.label}>{label}</h1>}\n      <Dropdown\n        screenReaderText={getScreenReaderText(sections)}\n        onSelect={handleSelectDropdown}\n        alwaysSelectOption={true}\n        parentQuery={filterQuery}\n      >\n        <DropdownInput\n          className={cssClasses.inputElement}\n          placeholder={placeholder}\n          onChange={executeFilterSearch}\n          onFocus={handleInputFocus}\n          submitCriteria={meetsSubmitCritera}\n        />\n        <DropdownMenu>\n          {hasResults &&\n            <div className='absolute z-10 w-full shadow-lg rounded-md border border-gray-300 bg-white pt-3 pb-1 mt-1'>\n              {renderDropdownItems()}\n            </div>\n          }\n        </DropdownMenu>\n      </Dropdown>\n    </div>\n  );\n}\n\nfunction getScreenReaderText(sections: {\n  results: AutocompleteResult[],\n  label?: string\n}[]) {\n  let screenReaderText = processTranslation({\n    phrase: '0 autocomplete option found.',\n    pluralForm: '0 autocomplete options found.',\n    count: 0\n  });\n  if (sections.length === 0) {\n    return screenReaderText;\n  }\n  const screenReaderPhrases = sections.map(section => {\n    const optionInfo = section.label\n      ? `${section.results.length} ${section.label}`\n      : `${section.results.length}`;\n    return processTranslation({\n      phrase: `${optionInfo} autocomplete option found.`,\n      pluralForm: `${optionInfo} autocomplete options found.`,\n      count: section.results.length\n    });\n  });\n  screenReaderText = screenReaderPhrases.join(' ');\n  return screenReaderText;\n}\n","import { useSearchActions, useSearchState, LocationBiasMethod } from '@yext/search-headless-react';\nimport { executeSearch } from '../utils/search-operations';\nimport { getUserLocation } from '../utils/location-operations';\nimport { twMerge, useComposedCssClasses } from '../hooks/useComposedCssClasses';\nimport { useState } from 'react';\nimport LoadingIndicator from '../icons/LoadingIndicator';\n\n/**\n * The CSS class interface for the {@link LocationBias} component.\n *\n * @public\n *\n * @deprecated LocationBias component has been superseded by Geolocation component.\n */\nexport interface LocationBiasCssClasses {\n  locationBiasContainer?: string,\n  location?: string,\n  source?: string,\n  button?: string,\n  loadingIndicatorContainer?: string\n}\n\nconst builtInCssClasses: Readonly<LocationBiasCssClasses> = {\n  locationBiasContainer: 'text-sm text-neutral text-center justify-center items-center flex flex-col lg:flex-row',\n  location: 'font-semibold lg:ml-7',\n  source: 'ml-3 lg:ml-0 whitespace-pre',\n  button: 'text-primary hover:underline focus:underline ml-7 lg:ml-0',\n  loadingIndicatorContainer: 'w-4 h-4 ml-3 shrink-0'\n};\n\n/**\n * The props for the {@link LocationBias} component.\n *\n * @public\n *\n * @deprecated LocationBias component has been superseded by Geolocation component.\n */\nexport interface LocationBiasProps {\n  /** Configuration used when collecting the user's location.\n   * Definition: {@link https://w3c.github.io/geolocation-api/#position_options_interface}.\n   */\n  geolocationOptions?: PositionOptions,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: LocationBiasCssClasses\n}\n\n/**\n * A React Component which displays and collects location information in order to bias searches.\n *\n * @public\n *\n * @deprecated LocationBias component has been superseded by Geolocation component.\n *\n * @param props - {@link LocationBiasProps}\n * @returns A react component for Location Bias\n */\nexport function LocationBias({\n  geolocationOptions,\n  customCssClasses\n}: LocationBiasProps): JSX.Element | null {\n  const searchActions = useSearchActions();\n  const locationBias = useSearchState(s => s.location.locationBias);\n  const [isFetchingLocation, setIsFetchingLocation] = useState<boolean>(false);\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n  const loadingIndicatorCss = twMerge(cssClasses.loadingIndicatorContainer, (!isFetchingLocation && 'invisible'));\n\n  if (!locationBias?.displayName) return null;\n\n  const attributionMessage =\n      locationBias?.method === LocationBiasMethod.Ip ? ' (based on your internet address)'\n        : locationBias?.method === LocationBiasMethod.Device ? ' (based on your device)'\n          : '';\n\n  async function handleGeolocationClick() {\n    setIsFetchingLocation(true);\n    try {\n      const position = await getUserLocation(geolocationOptions);\n      searchActions.setUserLocation({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n      });\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setIsFetchingLocation(false);\n    }\n    executeSearch(searchActions);\n  }\n\n  return (\n    <div className={cssClasses.locationBiasContainer}>\n      <span className={cssClasses.location}>\n        {locationBias.displayName}\n      </span>\n      <span className={cssClasses.source}>\n        {attributionMessage}\n        <span className='invisible lg:visible'> - </span>\n      </span>\n      <div className='flex flex-row items-center'>\n        <button\n          className={cssClasses.button}\n          onClick={handleGeolocationClick}\n        >\n          Update your location\n        </button>\n        <div className={loadingIndicatorCss}>\n          <LoadingIndicator />\n        </div>\n      </div>\n    </div>\n  );\n}","export default function LoadingIndicator() {\n  return (\n    <div className=\"animate-[rotate_1.4s_linear_infinite]\">\n      <svg className=\"[stroke-dasharray:208] origin-[50%_50%] animate-[dash_1.4s_ease-in-out_infinite]\" viewBox=\"0 0 72 72\">\n        <circle className=\"\" cx=\"36\" cy=\"36\" r=\"33\" stroke=\"black\" strokeWidth=\"3\" fill=\"none\"/>\n      </svg>\n    </div>\n  );\n}","export function YextIcon(): JSX.Element {\n  return (\n    <svg viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M25.517 28.142v.095h-.204v.905h-.066v-.905h-.197v-.095h.467zm.667 0h.066v1h-.066v-.825l-.24.595h-.013l-.24-.595v.825h-.066v-1h.066l.247.61.246-.61zM15 28.8c7.622 0 13.8-6.178 13.8-13.8 0-7.622-6.178-13.8-13.8-13.8C7.378 1.2 1.2 7.378 1.2 15c0 7.622 6.178 13.8 13.8 13.8zM15 0c8.284 0 15 6.716 15 15 0 8.284-6.716 15-15 15-8.284 0-15-6.716-15-15C0 6.716 6.716 0 15 0zm.45 16.65v-1.2h6.6v1.2h-2.7v5.4h-1.2v-5.4h-2.7zm-1.599-1.35l.849.849-2.601 2.601 2.601 2.601-.849.849-2.601-2.601L8.649 22.2l-.849-.849 2.601-2.601L7.8 16.149l.849-.849 2.601 2.601 2.601-2.601zM18.675 9a2.175 2.175 0 00-1.847 3.323l2.995-2.995A2.163 2.163 0 0018.675 9zm0 5.55a3.375 3.375 0 112.833-5.209l-3.789 3.788a2.175 2.175 0 003.13-1.954h1.201a3.375 3.375 0 01-3.375 3.375zm-7.425-3.734L13.78 7.8l.92.771-2.85 3.397v2.582h-1.2v-2.582L7.8 8.57l.92-.771 2.53 3.016z\"></path>\n    </svg>\n  );\n}","import { Matcher, SelectableStaticFilter, useSearchActions, useSearchState } from '@yext/search-headless-react';\nimport { executeSearch } from '../utils/search-operations';\nimport { getUserLocation } from '../utils/location-operations';\nimport { useCallback, useState } from 'react';\n\nconst GEOLOCATION_FIELD_ID = 'builtin.location';\nconst LOCATION_FIELD_IDS = [GEOLOCATION_FIELD_ID, 'builtin.region', 'address.countryCode'];\nconst METERS_PER_MILE = 1609.344;\n\n/**\n * The props for {@link useGeolocationHandler} hook.\n *\n * @internal\n */\ninterface GeolocationHandlerArgs {\n  /** Configuration used when collecting the user's location. */\n  geolocationOptions?: PositionOptions,\n  /**\n   * The radius, in miles, around the user's location to find results. Defaults to 50.\n   * If location accuracy is low, a larger radius may be used automatically.\n   */\n  radius?: number,\n  /** Custom handler function to call after user's position is successfully determined. */\n  handleUserPosition?: (position: GeolocationPosition) => void\n}\n\n/**\n * Creates a function to collect user's geolocation and, by default, will set\n * a built-in location filter and execute a search.\n *\n * @internal\n *\n * @param props - {@link GeolocationHandlerArgs}\n * @returns - A function to collect and process user's geolocation\n *          - A boolean to indicate if user's geolocation is being fetch\n */\nexport function useGeolocationHandler({\n  geolocationOptions,\n  radius = 50,\n  handleUserPosition\n}: GeolocationHandlerArgs): [() => Promise<void>, boolean] {\n  const [isFetchingUserLocation, setIsFetchingUserLocation] = useState<boolean>(false);\n  const searchActions = useSearchActions();\n  const staticFilters = useSearchState(s => s.filters.static || []);\n\n  const defaultHandleUserPosition = useCallback((position: GeolocationPosition) => {\n    const { latitude, longitude, accuracy } = position.coords;\n    const locationFilter: SelectableStaticFilter = {\n      displayName: 'Current Location',\n      selected: true,\n      filter: {\n        kind: 'fieldValue',\n        fieldId: GEOLOCATION_FIELD_ID,\n        matcher: Matcher.Near,\n        value: {\n          lat: latitude,\n          lng: longitude,\n          radius: Math.max(accuracy, radius * METERS_PER_MILE)\n        },\n      }\n    };\n    const nonLocationFilters = staticFilters.filter(filter => {\n      return !(filter.filter.kind === 'fieldValue'\n        && LOCATION_FIELD_IDS.includes(filter.filter.fieldId));\n    });\n    searchActions.setStaticFilters([...nonLocationFilters, locationFilter]);\n    executeSearch(searchActions);\n  }, [radius, searchActions, staticFilters]);\n\n  const geolocationHandler = useCallback(async () => {\n    setIsFetchingUserLocation(true);\n    try {\n      const position = await getUserLocation(geolocationOptions);\n      (handleUserPosition ?? defaultHandleUserPosition)(position);\n    } catch (e) {\n      console.warn(e);\n    } finally {\n      setIsFetchingUserLocation(false);\n    }\n  }, [setIsFetchingUserLocation, geolocationOptions, handleUserPosition, defaultHandleUserPosition]);\n  return [geolocationHandler, isFetchingUserLocation];\n}\n","import { useComposedCssClasses } from '../hooks/useComposedCssClasses';\nimport LoadingIndicator from '../icons/LoadingIndicator';\nimport { YextIcon } from '../icons/YextIcon';\nimport { useGeolocationHandler } from '../hooks/useGeolocationHandler';\n\n/**\n * The CSS class interface for the Geolocation component.\n *\n * @public\n */\nexport interface GeolocationCssClasses {\n  geolocationContainer?: string,\n  button?: string,\n  iconContainer?: string\n}\n\nconst builtInCssClasses: Readonly<GeolocationCssClasses> = {\n  geolocationContainer: 'text-sm text-neutral text-center justify-center items-center flex flex-row',\n  button: 'text-primary font-semibold hover:underline focus:underline',\n  iconContainer: 'w-4 ml-2'\n};\n\n/**\n * The props for the Geolocation component.\n *\n * @public\n */\nexport interface GeolocationProps {\n  /**\n   * Configuration used when collecting the user's location.\n   * Definition: {@link https://w3c.github.io/geolocation-api/#position_options_interface}.\n   */\n  geolocationOptions?: PositionOptions,\n  /**\n   * The radius, in miles, around the user's location to find results. Defaults to 50.\n   * If location accuracy is low, a larger radius may be used automatically.\n   */\n  radius?: number,\n  /** The label for the button. Defaults to 'Use my location'. */\n  label?: string,\n  /** Custom icon component to display along with the button. */\n  GeolocationIcon?: React.FunctionComponent,\n  /**\n   * A function which is called when the geolocation button is clicked,\n   * after user's position is successfully determined.\n   */\n  handleClick?: (position: GeolocationPosition) => void,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: GeolocationCssClasses\n}\n\n/**\n * A React Component which collects location information to create a\n * location filter and perform a new search.\n *\n * @public\n *\n * @param props - {@link GeolocationProps}\n * @returns A react component for geolocation\n */\nexport function Geolocation({\n  geolocationOptions,\n  radius = 50,\n  label = 'Use my location',\n  //TODO: replace default icon with SVG create from design team\n  GeolocationIcon = YextIcon,\n  handleClick,\n  customCssClasses,\n}: GeolocationProps): JSX.Element | null {\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n  const [handleGeolocationClick, isFetchingUserLocation] = useGeolocationHandler({\n    geolocationOptions,\n    radius,\n    handleUserPosition: handleClick\n  });\n\n  return (\n    <div className={cssClasses.geolocationContainer}>\n      <button className={cssClasses.button} onClick={handleGeolocationClick}>\n        {label}\n      </button>\n      <div className={cssClasses.iconContainer}>\n        {isFetchingUserLocation ? <LoadingIndicator /> : <GeolocationIcon />}\n      </div>\n    </div>\n  );\n}\n","import { useSearchState } from '@yext/search-headless-react';\nimport { useComposedCssClasses } from '../hooks/useComposedCssClasses';\nimport classNames from 'classnames';\nimport { AppliedFiltersDisplay } from './AppliedFiltersDisplay';\nimport { DEFAULT_HIERARCHICAL_DELIMITER } from './Filters/HierarchicalFacetDisplay';\nimport { useNlpFilterDisplayNames } from '../hooks/useNlpFilterDisplayNames';\nimport { useRemovableFilters } from '../hooks/useRemovableFilters';\n\n/**\n * The CSS class interface used for {@link AppliedFilters}.\n *\n * @public\n */\nexport interface AppliedFiltersCssClasses {\n  appliedFiltersContainer?: string,\n  appliedFiltersLoading?: string,\n  nlpFilter?: string,\n  removableFilter?: string,\n  filterLabel?: string,\n  clearAllButton?: string\n}\n\nexport const builtInCssClasses: Readonly<AppliedFiltersCssClasses> = {\n  // Use negative margin to remove space above the filters on mobile\n  appliedFiltersContainer: 'flex flex-wrap -mt-3 md:mt-0 mb-2',\n  appliedFiltersLoading: 'opacity-50',\n  nlpFilter: 'border border-gray-200 rounded-3xl px-3 py-1.5 text-sm font-medium text-neutral-dark mr-2 mb-2',\n  removableFilter: 'flex items-center border border-gray-200 rounded-3xl px-3 py-1.5 text-sm font-medium text-neutral-dark mr-2 mb-2',\n  clearAllButton: 'text-sm font-medium text-primary hover:underline focus:underline mb-2'\n};\n\n/**\n * Properties for {@link AppliedFilters}.\n *\n * @public\n */\nexport interface AppliedFiltersProps {\n  /** List of filters that should not be displayed. By default, builtin.entityType will be hidden. */\n  hiddenFields?: string[],\n  /** A set of facet fieldIds that should be interpreted as \"hierarchical\". */\n  hierarchicalFacetsFieldIds?: string[],\n  /** {@inheritDoc HierarchicalFacetsProps.delimiter} */\n  hierarchicalFacetsDelimiter?: string,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: AppliedFiltersCssClasses\n}\n\nconst DEFAULT_HIDDEN_FIELDS = ['builtin.entityType'];\n\n/**\n * A component that displays a list of filters applied to the current vertical\n * search, which may include any selected options from facets, NLP filters, and\n * field value static filters.\n *\n * @public\n *\n * @param props - {@link AppliedFiltersProps}\n * @returns A React element for the applied filters\n */\nexport function AppliedFilters(props: AppliedFiltersProps): JSX.Element {\n  const isLoading = useSearchState(state => state.searchStatus.isLoading);\n\n  const {\n    hiddenFields = DEFAULT_HIDDEN_FIELDS,\n    customCssClasses = {},\n    hierarchicalFacetsDelimiter = DEFAULT_HIERARCHICAL_DELIMITER,\n    hierarchicalFacetsFieldIds\n  } = props;\n\n  const removableFilters = useRemovableFilters(\n    hierarchicalFacetsFieldIds, hierarchicalFacetsDelimiter, hiddenFields);\n  const nlpFilterDisplayNames = useNlpFilterDisplayNames(removableFilters.map(f => f.filter), hiddenFields);\n\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n  cssClasses.appliedFiltersContainer = classNames(cssClasses.appliedFiltersContainer, {\n    [cssClasses.appliedFiltersLoading ?? '']: isLoading\n  });\n\n  return (\n    <AppliedFiltersDisplay\n      removableFilters={removableFilters}\n      nlpFilterDisplayNames={nlpFilterDisplayNames}\n      cssClasses={cssClasses}\n    />\n  );\n}","import { useSearchActions, useSearchState } from '@yext/search-headless-react';\nimport { useCallback } from 'react';\nimport { executeSearch } from '../utils/search-operations';\n\n/**\n * Clears static filters and facets, resets the search offset to 0, and runs a search.\n *\n * @internal\n */\nexport function useClearFiltersCallback() {\n  const searchActions = useSearchActions();\n  const staticFilters = useSearchState(state => state.filters.static);\n\n  return useCallback(() => {\n    searchActions.setOffset(0);\n    searchActions.resetFacets();\n    staticFilters && searchActions.setStaticFilters(staticFilters.map(f => {\n      return {\n        ...f,\n        selected: false\n      };\n    }));\n    executeSearch(searchActions);\n  }, [searchActions, staticFilters]);\n}","import { CloseIcon } from '../icons/CloseIcon';\nimport { AppliedFiltersCssClasses } from './AppliedFilters';\nimport { useClearFiltersCallback } from '../hooks/useClearFiltersCallback';\nimport { FieldValueFilter, useSearchActions } from '@yext/search-headless-react';\nimport { isDuplicateFieldValueFilter } from '../utils/filterutils';\nimport { executeSearch } from '../utils/search-operations';\n\n/**\n * A representation of a filter that can be removed from the AppliedFilters component.\n *\n * @internal\n */\nexport interface RemovableFilter {\n  displayName: string,\n  handleRemove: () => void,\n  filter: FieldValueFilter\n}\n\n/**\n * Properties for {@link AppliedFilters}.\n *\n * @internal\n */\nexport interface AppliedFiltersDisplayProps {\n  removableFilters?: RemovableFilter[],\n  /**\n   * The display values of filters that are applied to the search results\n   * from the backend's natural language processing.\n   */\n  nlpFilterDisplayNames?: string[],\n  /** CSS classes for customizing the component styling. */\n  cssClasses?: AppliedFiltersCssClasses\n}\n\n/**\n * A component that renders applied filters based on the provided GroupedFilters.\n *\n * @param props - {@link AppliedFiltersDisplayProps}\n * @returns A React element for the applied filters\n */\nexport function AppliedFiltersDisplay(props: AppliedFiltersDisplayProps): JSX.Element | null {\n  const {\n    nlpFilterDisplayNames = [],\n    removableFilters = [],\n    cssClasses = {}\n  } = props;\n  const handleClickClearAllButton = useClearFiltersCallback();\n  const searchActions = useSearchActions();\n\n  if (removableFilters.length + nlpFilterDisplayNames.length === 0) {\n    return null;\n  }\n\n  const dedupedNlpFilterDisplayNames = nlpFilterDisplayNames.filter(displayName => {\n    return !removableFilters.some(f => f.displayName === displayName);\n  });\n\n  const dedupedRemovableFilters = getDedupedRemovableFilters(removableFilters);\n\n  function handleRemoveDedupedFilter(dedupedFilter: DedupedRemovableFilter) {\n    dedupedFilter.handleRemove();\n    for (const f of dedupedFilter.duplicates ?? []) {\n      f.handleRemove();\n    }\n    searchActions.setOffset(0);\n    executeSearch(searchActions);\n  }\n\n  return (\n    <div className={cssClasses.appliedFiltersContainer} aria-label='Applied filters to current search'>\n      {dedupedNlpFilterDisplayNames.map((displayName, i) => renderNlpFilter(displayName, i, cssClasses))}\n      {dedupedRemovableFilters.map((f, i) => {\n        return renderRemovableFilter(f.displayName, () => handleRemoveDedupedFilter(f), i, cssClasses);\n      })}\n      {removableFilters.length > 0 &&\n        <button onClick={handleClickClearAllButton} className={cssClasses.clearAllButton}>\n          Clear All\n        </button>\n      }\n    </div>\n  );\n}\n\ninterface DedupedRemovableFilter extends RemovableFilter {\n  duplicates?: RemovableFilter[]\n}\n\nfunction getDedupedRemovableFilters(filters: RemovableFilter[]) {\n  const dedupedFilters: DedupedRemovableFilter[] = [];\n  for (const f of filters) {\n    const preexistingDupe = dedupedFilters.find(d => isDuplicateFieldValueFilter(d.filter, f.filter));\n    if (!preexistingDupe) {\n      dedupedFilters.push(f);\n    } else {\n      if (!preexistingDupe.duplicates) {\n        preexistingDupe.duplicates = [f];\n      } else {\n        preexistingDupe.duplicates.push(f);\n      }\n    }\n  }\n  return dedupedFilters;\n}\n\nfunction renderRemovableFilter(\n  displayName: string | undefined,\n  handleRemove: () => void,\n  index: number,\n  cssClasses: AppliedFiltersCssClasses\n): JSX.Element {\n  return (\n    <div className={cssClasses.removableFilter} key={`${displayName}-${index}`}>\n      <div className={cssClasses.filterLabel}>{displayName}</div>\n      <button\n        className='w-2 h-2 text-neutral m-1.5'\n        onClick={handleRemove}\n        aria-label={`Remove \"${displayName}\" filter`}\n      >\n        <CloseIcon />\n      </button>\n    </div>\n  );\n}\n\nfunction renderNlpFilter(\n  displayName: string | undefined,\n  index: number,\n  cssClasses: AppliedFiltersCssClasses\n): JSX.Element {\n  return (\n    <div className={cssClasses.nlpFilter} key={`${displayName}-${index}`}>\n      <span className={cssClasses.filterLabel}>{displayName}</span>\n    </div>\n  );\n}\n","import { DisplayableFacet } from '@yext/search-headless-react';\nimport { ReactNode, useCallback, useState } from 'react';\nimport { useComposedCssClasses } from '../../hooks/useComposedCssClasses';\nimport { HierarchicalFacetNode, HierarchicalFacetTree, useHierarchicalFacetTree } from '../../hooks/useHierarchicalFacetTree';\nimport { useFiltersContext } from './FiltersContext';\n\nexport const DEFAULT_HIERARCHICAL_DELIMITER = '>';\n\n/**\n * Props for HierarchicalFacetDisplay\n *\n * @public\n */\nexport interface HierarchicalFacetDisplayProps {\n  /** The `DisplayableFacet` to render as a HierarchicalFacetDisplay. */\n  facet: DisplayableFacet,\n  /** {@inheritDoc HierarchicalFacetsProps.delimiter} */\n  delimiter?: string,\n  /** {@inheritDoc HierarchicalFacetsProps.showMoreLimit} */\n  showMoreLimit?: number,\n  /**\n   * CSS classes for customizing the component styling\n   * of HierarchicalFacetDisplayCssClasses.\n   */\n  customCssClasses?: HierarchicalFacetDisplayCssClasses\n}\n\n/**\n * The CSS class interface for HierarchicalFacetDisplay.\n *\n * @public\n */\nexport interface HierarchicalFacetDisplayCssClasses {\n  treeContainer?: string,\n  allCategoriesOption___active?: string,\n  allCategoriesOption___inactive?: string,\n  availableOption__active?: string,\n  availableOption__inactive?: string,\n  parentCategory?: string,\n  currentCategory?: string,\n  showMoreButton?: string\n}\n\nconst builtInCssClasses: Readonly<HierarchicalFacetDisplayCssClasses> = {\n  treeContainer: 'flex flex-col items-start',\n  allCategoriesOption___active: 'font-semibold mb-2 text-sm',\n  allCategoriesOption___inactive: 'mb-2 text-sm',\n  availableOption__active: 'font-semibold ml-4 mb-2 text-sm',\n  availableOption__inactive: 'ml-4 mb-2 text-sm',\n  parentCategory: 'mb-2 text-sm',\n  currentCategory: 'font-semibold mb-2 text-sm',\n  showMoreButton: 'ml-4 text-sm font-medium text-primary'\n};\n\n/**\n * A HierarchicalFacetDisplay takes a `DisplayableFacet` and renders the facet in a way\n * to represent multiple levels of \"hierarchies\".\n *\n * The hierarchies are determined by the provided delimiter, which defaults to \"\\>\".\n *\n * @public\n */\nexport function HierarchicalFacetDisplay({\n  facet,\n  delimiter = DEFAULT_HIERARCHICAL_DELIMITER,\n  showMoreLimit = 4,\n  customCssClasses\n}: HierarchicalFacetDisplayProps): JSX.Element {\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n  const tree = useHierarchicalFacetTree(facet, delimiter);\n  const [isShowingMore, setIsShowingMore] = useState(false);\n  const resetShowMore = useCallback(() => setIsShowingMore(false), []);\n  const toggleShowMore = useCallback(() => {\n    setIsShowingMore(!isShowingMore);\n  }, [isShowingMore]);\n\n  /** Iteratively parses the `HierarchicalFacetTree` into an array of ReactNodes */\n  function renderTree(): ReactNode[] {\n    let treePointer: HierarchicalFacetTree = tree;\n    const renderedNodesAndShowMoreButton: ReactNode[] = [renderAllCategoriesButton()];\n\n    while (treePointer) {\n      const currentNodes = Object.values(treePointer);\n      const selectedChildNode = currentNodes.find(n => n.selected);\n      const selectedHasNoChildren =\n        selectedChildNode && Object.values(selectedChildNode.childTree).length === 0;\n      const activeParentNode = currentNodes.find(n => n.hasSelectedChild);\n\n      if ((!selectedChildNode && !activeParentNode) || selectedHasNoChildren) {\n        renderedNodesAndShowMoreButton.push(...renderAvailableOptions(currentNodes));\n        if (currentNodes.length > showMoreLimit) {\n          renderedNodesAndShowMoreButton.push(renderShowMoreButton());\n        }\n        break;\n      }\n\n      const activeNode = selectedChildNode ?? activeParentNode;\n      if (!activeNode) {\n        break;\n      }\n      renderedNodesAndShowMoreButton.push(\n        renderCategory(activeNode, facet.fieldId));\n      treePointer = activeNode.childTree;\n    }\n\n    return renderedNodesAndShowMoreButton;\n  }\n\n  function renderAllCategoriesButton() {\n    return (\n      <AllCategories\n        key='_AllCategories'\n        activeClassName={cssClasses.allCategoriesOption___active}\n        inactiveClassName={cssClasses.allCategoriesOption___inactive}\n        facet={facet}\n        resetShowMore={resetShowMore}\n      />\n    );\n  }\n\n  function renderAvailableOptions(nodes: HierarchicalFacetNode[]) {\n    const nodesToRender = isShowingMore ? nodes : nodes.slice(0, showMoreLimit);\n    return nodesToRender.map(n =>\n      <AvailableOption\n        key={n.lastDisplayNameToken}\n        activeClassName={cssClasses.availableOption__active}\n        inactiveClassName={cssClasses.availableOption__inactive}\n        fieldId={facet.fieldId}\n        currentNode={n}\n        resetShowMore={resetShowMore}\n        siblingNodes={nodes.filter(siblingNode => siblingNode !== n)}\n      />\n    );\n  }\n\n  function renderShowMoreButton() {\n    return <ShowMoreButton\n      key='_ShowMoreButton'\n      className={cssClasses.showMoreButton}\n      isShowingMore={isShowingMore}\n      toggleShowMore={toggleShowMore}\n    />;\n  }\n\n  function renderCategory(selectedNode: HierarchicalFacetNode, fieldId: string) {\n    const sharedProps = {\n      key: selectedNode.lastDisplayNameToken,\n      resetShowMore,\n      selectedNode,\n      fieldId\n    };\n\n    if (selectedNode.hasSelectedChild) {\n      return <ParentCategory className={cssClasses.parentCategory} {...sharedProps}/>;\n    } else {\n      return <CurrentCategory className={cssClasses.currentCategory} {...sharedProps}/>;\n    }\n  }\n\n  return (\n    <div className={cssClasses.treeContainer}>\n      {renderTree()}\n    </div>\n  );\n}\n\n/**\n * A hard-coded \"All Categories\" button that can be used to reset the HierarchicalFacetDisplay\n * to its initial state, i.e. with no options selected.\n */\nfunction AllCategories({ facet, inactiveClassName, activeClassName, resetShowMore }: {\n  facet: DisplayableFacet,\n  activeClassName?: string,\n  inactiveClassName?: string,\n  resetShowMore: () => void\n}) {\n  const { applyFilters, selectFilter } = useFiltersContext();\n  const handleClickAllCategories = useCallback(() => {\n    facet.options\n      .filter(o => o.selected)\n      .forEach(o => selectFilter({ ...o, fieldId: facet.fieldId, selected: false }));\n    applyFilters();\n    resetShowMore();\n  }, [applyFilters, facet.fieldId, facet.options, resetShowMore, selectFilter]);\n\n  if (facet.options.find(o => o.selected)) {\n    return (\n      <button\n        className={inactiveClassName}\n        onClick={handleClickAllCategories}\n      >\n        All Categories /\n      </button>\n    );\n  }\n\n  return (\n    <div className={activeClassName}>All Categories</div>\n  );\n}\n\n/** An option currently available for selection or deselection. */\nfunction AvailableOption(props: {\n  fieldId: string,\n  activeClassName?: string,\n  inactiveClassName?: string,\n  resetShowMore: () => void,\n  currentNode: HierarchicalFacetNode,\n  siblingNodes: HierarchicalFacetNode[]\n}) {\n  const { fieldId, currentNode, activeClassName, inactiveClassName, resetShowMore, siblingNodes } = props;\n  const { applyFilters, selectFilter } = useFiltersContext();\n  const { selected, lastDisplayNameToken, facetOption } = currentNode;\n  const handleClickAvailableOptions = useCallback(() => {\n    siblingNodes.filter(n => n.selected).forEach(n => selectFilter({\n      ...n.facetOption,\n      selected: false,\n      fieldId\n    }));\n    selectFilter({\n      ...facetOption,\n      selected: !selected,\n      fieldId\n    });\n    const parentFacetOption = currentNode.parentNode?.facetOption;\n    parentFacetOption && selectFilter({\n      ...parentFacetOption,\n      selected,\n      fieldId\n    });\n    applyFilters();\n    resetShowMore();\n  }, [\n    applyFilters,\n    currentNode.parentNode?.facetOption,\n    facetOption,\n    fieldId,\n    resetShowMore,\n    selectFilter,\n    selected,\n    siblingNodes\n  ]);\n\n  return (\n    <button\n      className={selected ? activeClassName : inactiveClassName}\n      onClick={handleClickAvailableOptions}\n    >\n      {lastDisplayNameToken}\n    </button>\n  );\n}\n\n/** A parent category that is not the most immediate one. */\nfunction ParentCategory({ fieldId, selectedNode, className, resetShowMore }: {\n  fieldId: string,\n  selectedNode: HierarchicalFacetNode,\n  className?: string,\n  resetShowMore: () => void\n}) {\n  const { applyFilters, selectFilter } = useFiltersContext();\n\n  const deselectChildOptions = useCallback((node: HierarchicalFacetNode) => {\n    const tree = node.childTree;\n    Object.values(tree).forEach(n => {\n      selectFilter({\n        ...n.facetOption,\n        selected: false,\n        fieldId\n      });\n      deselectChildOptions(n);\n    });\n  }, [fieldId, selectFilter]);\n\n  const handleClickParentCategory = useCallback(() => {\n    selectFilter({\n      ...selectedNode.facetOption,\n      selected: true,\n      fieldId\n    });\n    deselectChildOptions(selectedNode);\n    applyFilters();\n    resetShowMore();\n  }, [applyFilters, deselectChildOptions, fieldId, resetShowMore, selectFilter, selectedNode]);\n\n  return (\n    <button className={className} onClick={handleClickParentCategory}>\n      {selectedNode.lastDisplayNameToken + ' /'}\n    </button>\n  );\n}\n\n/** The currently selected category, i.e. the most immediate category. */\nfunction CurrentCategory({ fieldId, selectedNode, className, resetShowMore }: {\n  fieldId: string,\n  selectedNode: HierarchicalFacetNode,\n  className?: string,\n  resetShowMore: () => void\n}) {\n  const { applyFilters, selectFilter } = useFiltersContext();\n  const handleClickCurrentCategory = useCallback(() => {\n    selectFilter({\n      ...selectedNode.facetOption,\n      selected: false,\n      fieldId\n    });\n    const parentFacetOption = selectedNode.parentNode?.facetOption;\n    parentFacetOption && selectFilter({\n      ...parentFacetOption,\n      selected: true,\n      fieldId\n    });\n    applyFilters();\n    resetShowMore();\n  }, [\n    applyFilters,\n    fieldId,\n    resetShowMore,\n    selectFilter,\n    selectedNode.facetOption,\n    selectedNode.parentNode?.facetOption\n  ]);\n\n  return (\n    <button\n      className={className}\n      onClick={handleClickCurrentCategory}\n    >\n      {selectedNode.lastDisplayNameToken}\n    </button>\n  );\n}\n\n/** The \"Show more/less\" button for hiding/showing additional `AvailableOption`s */\nfunction ShowMoreButton({ className, isShowingMore, toggleShowMore }: {\n  className?: string,\n  isShowingMore: boolean,\n  toggleShowMore: () => void\n}) {\n  return (\n    <button className={className} onClick={toggleShowMore}>\n      {isShowingMore ? 'Show less' : 'Show more'}\n    </button>\n  );\n}","import { DisplayableFacet, FacetOption } from '@yext/search-headless-react';\nimport { useMemo } from 'react';\n\n/**\n * A tree of `HierarchicalFacetNode`s\n */\nexport type HierarchicalFacetTree = {\n  [key: string]: HierarchicalFacetNode\n};\n\n/**\n * A single node of a `HierarchicalFacetTree`\n */\nexport type HierarchicalFacetNode = {\n  selected: boolean,\n  hasSelectedChild: boolean,\n  facetOption: FacetOption,\n  childTree: HierarchicalFacetTree,\n  parentNode?: HierarchicalFacetNode,\n  displayNameTokens: string[],\n  lastDisplayNameToken: string\n};\n\n/**\n * Parses a `DisplayableFacet` into a `HierarchicalFacetTree`, then memoizes it.\n */\nexport function useHierarchicalFacetTree(\n  hierarchicalFacet: DisplayableFacet,\n  delimiter: string\n): HierarchicalFacetTree {\n  return useMemo(() => {\n    return parseHierarchicalFacetTree(hierarchicalFacet, delimiter);\n  }, [delimiter, hierarchicalFacet]);\n}\n\n/**\n * Parses a `DisplayableFacet` into a `HierarchicalFacetTree`.\n */\nexport function parseHierarchicalFacetTree(\n  hierarchicalFacet: DisplayableFacet,\n  delimiter: string\n): HierarchicalFacetTree {\n  const optionsInAscendingLength = hierarchicalFacet?.options.map(o => {\n    const displayNameTokens = o.displayName.split(delimiter).map(s => s.trim());\n    return {\n      ...o,\n      displayNameTokens\n    };\n  }).sort((a, b) => a.displayNameTokens.length - b.displayNameTokens.length) || [];\n\n  const tree: HierarchicalFacetTree = {};\n\n  optionsInAscendingLength.forEach(o => {\n    const {\n      displayNameTokens,\n      displayName\n    } = o;\n\n    let currentTree: HierarchicalFacetTree = tree;\n    let parentNode: HierarchicalFacetNode | undefined = undefined;\n\n    for (const token of displayNameTokens.slice(0, -1)) {\n      if (!(token in currentTree)) {\n        console.error(\n          `Error parsing hierarchical facet option \"${displayName}\" at token \"${token}\". Current tree:`,\n          JSON.stringify(tree));\n        return;\n      }\n      if (o.selected) {\n        currentTree[token].hasSelectedChild = true;\n      }\n      parentNode = currentTree[token];\n      currentTree = currentTree[token].childTree;\n    }\n\n    const lastDisplayNameToken = displayNameTokens[displayNameTokens.length - 1];\n    currentTree[lastDisplayNameToken] = {\n      selected: o.selected,\n      displayNameTokens,\n      lastDisplayNameToken,\n      facetOption: {\n        value: o.value,\n        matcher: o.matcher\n      },\n      hasSelectedChild: false,\n      childTree: {},\n      parentNode: parentNode\n    };\n  });\n\n  return tree;\n}","import { createContext, useContext } from 'react';\nimport { SelectableFieldValueFilter } from '../../models/SelectableFieldValueFilter';\n\n/**\n * FiltersContext is responsible for handling filter selection.\n *\n * @public\n */\nexport interface FiltersContextType {\n  /** A function called when a filter is selected. */\n  selectFilter: (filter: SelectableFieldValueFilter) => void,\n  /** A function called when filters should be applied. */\n  applyFilters: () => void,\n  /** The list of SelectableFieldValueFilters provided by the context. */\n  filters: SelectableFieldValueFilter[]\n}\n\n/**\n * Filters context which provides the filters to render and a handler for selecting a filter.\n *\n * @public\n */\nexport const FiltersContext = createContext<FiltersContextType | null>(null);\n\n/**\n * A hook used to access the {@link Filters.FiltersContextType}.\n *\n * @public\n */\nexport function useFiltersContext(): FiltersContextType {\n  const filtersContextInstance = useContext(FiltersContext);\n  if (filtersContextInstance === null) {\n    throw new Error('Tried to use FiltersContext when none exists.');\n  }\n  return filtersContextInstance;\n}\n","import { FieldValueFilter, useSearchState } from '@yext/search-headless-react';\nimport { useMemo } from 'react';\nimport { isDuplicateFieldValueFilter } from '../utils/filterutils';\n\n/**\n * Returns a memoized array of nlp filter display values, with hiddenFields and duplicate filters removed.\n *\n * @internal\n */\nexport function useNlpFilterDisplayNames(\n  removableFilters: FieldValueFilter[],\n  hiddenFields: string[]\n) {\n  const nlpFilters = useSearchState(state => state.vertical.appliedQueryFilters);\n\n  return useMemo(() => {\n    return nlpFilters?.filter(({ filter }) => {\n      if (hiddenFields.includes(filter.fieldId)) {\n        return false;\n      }\n      const duplicateFilter = removableFilters.find(f => isDuplicateFieldValueFilter(f, filter));\n      return !duplicateFilter;\n    }).map(f => f.displayValue) ?? [];\n  }, [hiddenFields, nlpFilters, removableFilters]);\n}\n","import { FieldValueFilter, useSearchState, useSearchActions, DisplayableFacet, DisplayableFacetOption, SearchActions, Matcher } from '@yext/search-headless-react';\nimport lodash from 'lodash';\nimport { useMemo } from 'react';\nimport { isNearFilterValue } from '../utils/filterutils';\nimport { isDescendantHierarchicalFacet } from '../utils/isDescendantHierarchicalFacet';\nimport { useStateUpdatedOnSearch } from './useStateUpdatedOnSearch';\nimport { useRemovableStaticFilters } from './useRemovableStaticFilters';\nimport { RemovableFilter } from '../components/AppliedFiltersDisplay';\n\n/**\n * Returns a memoized RemovableFilter[], with handling for static filters,\n * hierarchical facets, and non-hierarchical facets.\n *\n * Duplicates are kept.\n *\n * @internal\n */\nexport function useRemovableFilters(\n  hierarchicalFieldIds: string[] | undefined,\n  hierarchicalDelimiter: string,\n  hiddenFields: string[]\n): RemovableFilter[] {\n  const facets = useStateUpdatedOnSearch(state => state.filters.facets);\n  const hasResults = !!useSearchState(state => state.vertical.results);\n  const searchActions = useSearchActions();\n  const removableStaticFilters = useRemovableStaticFilters(hiddenFields);\n\n  return useMemo(() => {\n    if (!hasResults) {\n      return [];\n    }\n\n    const removableFacets = facets\n      ?.filter(f => !hiddenFields.includes(f.fieldId))\n      .flatMap((f: DisplayableFacet) => {\n        if (hierarchicalFieldIds?.includes(f.fieldId)) {\n          return processHierarchicalFacet(f, hierarchicalDelimiter, searchActions, facets);\n        }\n        return processRegularFacet(f, searchActions);\n      }) ?? [];\n\n    return [...removableStaticFilters, ...removableFacets];\n  }, [\n    facets,\n    hasResults,\n    hiddenFields,\n    hierarchicalDelimiter,\n    hierarchicalFieldIds,\n    searchActions,\n    removableStaticFilters\n  ]);\n}\n\nfunction processRegularFacet(f: DisplayableFacet, searchActions: SearchActions) {\n  return f.options.filter(o => o.selected).map(option => {\n\n    const filter: FieldValueFilter = {\n      value: option.value,\n      matcher: option.matcher,\n      fieldId: f.fieldId\n    };\n\n    return {\n      displayName: option.displayName,\n      handleRemove: () => handleRemoveFacetOption(filter, searchActions),\n      filter\n    };\n  });\n}\n\nfunction processHierarchicalFacet(\n  f: DisplayableFacet,\n  delimiter: string,\n  searchActions: SearchActions,\n  facets: DisplayableFacet[] | undefined\n): RemovableFilter[] {\n  function createAppliedFilter(o: DisplayableFacetOption, tokens: string[]) {\n    const filter = {\n      matcher: o.matcher,\n      value: o.value,\n      fieldId: f.fieldId\n    };\n\n    const handleRemove =\n      () => handleRemoveHierarchicalFacetOption(filter, tokens, delimiter, searchActions, facets);\n\n    return {\n      displayName: tokens[tokens.length - 1],\n      handleRemove,\n      filter,\n      tokens\n    };\n  }\n\n  return f.options.filter(o => o.selected).flatMap(selectedOption => {\n    const displayNameTokens = splitDisplayName(selectedOption.displayName, delimiter);\n    const appliedFacets: {\n      displayName: string,\n      handleRemove: () => void,\n      filter: FieldValueFilter,\n      tokens: string[]\n    }[] = [createAppliedFilter(selectedOption, displayNameTokens)];\n\n    // Create an object for each facet that is a parent of the currently selected option,\n    // despite them not being explicitly selected\n    f.options.forEach(option => {\n      const tokens = splitDisplayName(option.displayName, delimiter);\n      const isDescendant = isDescendantHierarchicalFacet(\n        displayNameTokens,\n        tokens\n      );\n      if (!isDescendant) {\n        return;\n      }\n      appliedFacets.push(createAppliedFilter(option, tokens));\n    });\n    appliedFacets.sort((a, b) => a.tokens.length - b.tokens.length);\n    return appliedFacets;\n  });\n}\n\nfunction handleRemoveHierarchicalFacetOption(\n  filter: {\n    value: DisplayableFacetOption['value'],\n    fieldId: string,\n    matcher: Matcher\n  },\n  displayNameTokens: string[],\n  delimiter: string,\n  searchActions: SearchActions,\n  facets: DisplayableFacet[] | undefined\n) {\n  searchActions.setFacetOption(filter.fieldId, {\n    matcher: filter.matcher,\n    value: filter.value\n  }, false);\n\n  // Uncheck all descendant options in the hierarchy\n  facets\n    ?.filter(f => f.fieldId === filter.fieldId)\n    .flatMap(f => f.options)\n    .forEach(o => {\n      if (!o.selected) {\n        return;\n      }\n      const tokensToCheck = splitDisplayName(o.displayName, delimiter);\n      if (isDescendantHierarchicalFacet(tokensToCheck, displayNameTokens)) {\n        searchActions.setFacetOption(filter.fieldId, {\n          matcher: o.matcher,\n          value: o.value\n        }, false);\n      }\n    });\n  const parentTokens = displayNameTokens.slice(0, -1);\n  const parentOption = facets\n    ?.filter(f => f.fieldId === filter.fieldId)\n    .flatMap(f => f.options)\n    .find(o => {\n      const tokens = splitDisplayName(o.displayName, delimiter);\n      return lodash.isEqual(tokens, parentTokens);\n    });\n\n  parentOption && searchActions.setFacetOption(filter.fieldId, {\n    matcher: parentOption.matcher,\n    value: parentOption.value\n  }, true);\n}\n\nfunction handleRemoveFacetOption(\n  { fieldId, matcher, value }: FieldValueFilter,\n  searchActions: SearchActions\n) {\n  if (isNearFilterValue(value)) {\n    console.error('A FieldValueFilter with a NearFilterValue is not a supported RemovableFilter.');\n    return;\n  }\n  searchActions.setFacetOption(fieldId, { matcher, value }, false);\n}\n\nfunction splitDisplayName(displayName: string, delimiter: string): string[] {\n  return displayName.split(delimiter).map(s => s.trim());\n}\n","/**\n * Given a parent displayName and corresponding tokens, and a child displayName and corresponding\n * tokens that we want to check, return whether the \"child\" is actually a descendant of the \"parent\"\n *\n * @internal\n */\nexport function isDescendantHierarchicalFacet(\n  descendantTokens: string[],\n  parentTokens: string[]\n): boolean {\n  if (descendantTokens.length <= parentTokens.length) {\n    return false;\n  }\n\n  for (let i = 0; i < parentTokens.length; i++) {\n    if (descendantTokens[i] !== parentTokens[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import { StateSelector, useSearchState } from '@yext/search-headless-react';\nimport { useRef } from 'react';\n\n/**\n * Selects a portion Answers State, snapshotted to the last time a search was completed.\n */\nexport function useStateUpdatedOnSearch<T>(\n  stateSelector: StateSelector<T>\n): T | undefined {\n  const isLoading = useSearchState(state => state.searchStatus.isLoading);\n  const wasLoading = useRef<boolean | undefined>(isLoading);\n  const currentState = useSearchState(stateSelector);\n  const snapshottedState = useRef<T>(currentState);\n  if (!isLoading && wasLoading.current) {\n    snapshottedState.current = currentState;\n  }\n  wasLoading.current = isLoading;\n\n  return snapshottedState.current;\n}","import { useSearchState, useSearchActions } from '@yext/search-headless-react';\nimport { useMemo } from 'react';\nimport { RemovableFilter } from '../components/AppliedFiltersDisplay';\nimport { SelectableFieldValueFilter } from '../models/SelectableFieldValueFilter';\nimport { getSelectableFieldValueFilters } from '../utils/filterutils';\nimport { useStateUpdatedOnSearch } from './useStateUpdatedOnSearch';\n\n/**\n * Returns a RemovableFilter[] sourced from the static filters state.\n *\n * @internal\n */\nexport function useRemovableStaticFilters(hiddenFields: string[]): RemovableFilter[] {\n  const staticFilters = useStateUpdatedOnSearch(state => state.filters.static);\n  const hasResults = !!useSearchState(state => state.vertical.results);\n  const searchActions = useSearchActions();\n\n  return useMemo(() => {\n    if (!hasResults || !staticFilters) {\n      return [];\n    }\n\n    function handleRemoveStaticFilterOption(filter: SelectableFieldValueFilter) {\n      searchActions.setFilterOption({\n        filter: { ...filter, kind: 'fieldValue' },\n        selected: false\n      });\n    }\n\n    return getSelectableFieldValueFilters(staticFilters)\n      .filter(f => f.selected && !hiddenFields.includes(f.fieldId))\n      .map(f => ({\n        displayName: f.displayName ?? '',\n        handleRemove: () => handleRemoveStaticFilterOption(f),\n        filter: f\n      }));\n  }, [hasResults, hiddenFields, searchActions, staticFilters]);\n}\n","import { useSearchState, VerticalResults as VerticalResultsData } from '@yext/search-headless-react';\nimport { StandardSection } from './sections/StandardSection';\nimport {\n  SectionHeader,\n  SectionHeaderCssClasses,\n  builtInCssClasses as sectionHeaderCssClasses\n} from './sections/SectionHeader';\nimport { useComposedCssClasses } from '../hooks/useComposedCssClasses';\nimport classNames from 'classnames';\nimport { VerticalConfigMap } from '../models/verticalConfig';\n\n/**\n * The CSS class interface used for {@link UniversalResults}.\n *\n * @public\n */\nexport interface UniversalResultsCssClasses extends SectionHeaderCssClasses {\n  universalResultsContainer?: string,\n  universalResultsLoading?: string\n}\n\nconst builtInCssClasses: Readonly<UniversalResultsCssClasses> = {\n  universalResultsContainer: 'space-y-8',\n  universalResultsLoading: 'opacity-50',\n  ...sectionHeaderCssClasses\n};\n\n/**\n * Props for {@link UniversalResults}.\n *\n * @public\n */\nexport interface UniversalResultsProps<T> {\n  /** Whether or not to show the applied filters. */\n  showAppliedFilters?: boolean,\n  /** A mapping of verticalKey to the configuration for each vertical. */\n  verticalConfigMap: VerticalConfigMap<T>,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: UniversalResultsCssClasses\n}\n\n/**\n * Displays the results of a universal search with the results for each vertical separated\n * into sections.\n *\n * @public\n *\n * @param props - {@link UniversalResultsProps}\n * @returns A React element for the universal results, or null if there are none\n */\nexport function UniversalResults<T>({\n  verticalConfigMap,\n  showAppliedFilters,\n  customCssClasses\n}: UniversalResultsProps<T>): JSX.Element | null {\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n  const resultsFromAllVerticals = useSearchState(state => state?.universal?.verticals) || [];\n  const isLoading = useSearchState(state => state.searchStatus.isLoading);\n\n  if (resultsFromAllVerticals.length === 0) {\n    return null;\n  }\n\n  const resultsClassNames = classNames(cssClasses.universalResultsContainer, {\n    [cssClasses.universalResultsLoading ?? '']: isLoading\n  });\n\n  return (\n    <div className={resultsClassNames}>\n      {renderVerticalSections({ resultsFromAllVerticals, showAppliedFilters, verticalConfigMap, cssClasses })}\n    </div>\n  );\n}\n\ninterface VerticalSectionsProps<T> extends UniversalResultsProps<T> {\n  resultsFromAllVerticals: VerticalResultsData[],\n  cssClasses: UniversalResultsCssClasses\n}\n\n/**\n * Renders a list of {@link SectionComponent}s based on the given list of vertical results and\n * corresponding configs, including specifying which section template to use.\n */\nfunction renderVerticalSections<T>(props: VerticalSectionsProps<T>): JSX.Element {\n  const { resultsFromAllVerticals, verticalConfigMap, cssClasses } = props;\n  return <>\n    {resultsFromAllVerticals\n      .filter(verticalResults => verticalResults.results)\n      .map(verticalResults => {\n        const verticalKey = verticalResults.verticalKey;\n        const verticalConfig = verticalConfigMap[verticalKey] || {};\n\n        const label = verticalConfig.label ?? verticalKey;\n        const results = verticalResults.results;\n\n        const SectionComponent = verticalConfig.SectionComponent || StandardSection;\n\n        const appliedQueryFilters = props.showAppliedFilters\n          ? verticalResults.appliedQueryFilters\n          : undefined;\n\n        return (\n          <SectionComponent\n            results={results}\n            verticalKey={verticalKey}\n            header={<SectionHeader {...{\n              label,\n              appliedQueryFilters,\n              verticalKey,\n              viewAllButton: verticalConfig.viewAllButton,\n              getViewAllUrl: verticalConfig.getViewAllUrl,\n              cssClasses\n            }}/>}\n            CardComponent={verticalConfig.CardComponent}\n            key={verticalKey}\n          />\n        );\n      })\n    }\n  </>;\n}\n","import { VerticalResultsCssClasses } from './VerticalResults';\nimport { CardComponent } from '../models/cardComponent';\nimport { Result } from '@yext/search-headless-react';\nimport { useComposedCssClasses } from '../hooks/useComposedCssClasses';\nimport classNames from 'classnames';\n\nconst builtInCssClasses: Readonly<VerticalResultsCssClasses> = {\n  verticalResultsLoading: 'opacity-50'\n};\n\ninterface VerticalResultsDisplayProps<T> {\n  CardComponent: CardComponent<T>,\n  isLoading?: boolean,\n  results: Result<T>[],\n  customCssClasses?: VerticalResultsCssClasses\n}\n\n/**\n * A Component that displays all the search results for a given vertical.\n *\n * @param props - The props for the Component, including the results and the card type\n *                to be used.\n */\nexport function VerticalResultsDisplay<T>(props: VerticalResultsDisplayProps<T>): JSX.Element | null {\n  const {\n    CardComponent,\n    results,\n    isLoading = false,\n    customCssClasses\n  } = props;\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n\n  if (results.length === 0) {\n    return null;\n  }\n\n  const resultsClassNames = classNames(cssClasses.verticalResultsContainer, {\n    [cssClasses.verticalResultsLoading ?? '']: isLoading\n  });\n\n  return (\n    <div className={resultsClassNames}>\n      {results?.map(result => renderResult(CardComponent, result))}\n    </div>\n  );\n}\n\n/**\n * Renders a single result using the specified card and configuration.\n *\n * @param CardComponent - The card for the vertical.\n * @param result - The result to render.\n */\nfunction renderResult<T>(\n  CardComponent: CardComponent<T>,\n  result: Result<T>\n): JSX.Element {\n  return <CardComponent result={result} key={result.id || result.index}/>;\n}","import { useComposedCssClasses } from '../../../hooks/useComposedCssClasses';\nimport {\n  ThumbsFeedback,\n  builtInCssClasses as thumbsFeedbackCssClasses,\n  FeedbackType,\n  ThumbsFeedbackCssClasses\n} from '../../ThumbsFeedback';\nimport { renderHighlightedValue } from '../../utils/renderHighlightedValue';\nimport { CtaData } from '../../../models/StandardCardData';\n\nimport { HighlightedValue } from '@yext/search-headless-react';\nimport { MouseEventHandler } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * The CSS class interface used for the StandardCardDisplay.\n *\n * @public\n */\ninterface StandardCardCssClasses extends ThumbsFeedbackCssClasses {\n  container?: string,\n  header?: string,\n  body?: string,\n  cta1?: string,\n  cta2?: string,\n  title?: string\n}\n\n/**\n * Default Tailwind styles for the StandardCardDisplay.\n */\nconst builtInCssClasses: Readonly<StandardCardCssClasses> = {\n  container: 'flex flex-col justify-between border border-gray-200 rounded-lg mb-4 p-4 shadow-sm',\n  header: 'flex text-neutral-dark',\n  body: 'flex justify-end pt-2.5 text-base',\n  cta1: 'whitespace-nowrap bg-primary text-white font-medium rounded-lg py-2 px-5 shadow',\n  cta2: 'whitespace-nowrap bg-white text-primary font-medium rounded-lg py-2 px-5 mt-2 shadow',\n  title: 'text-lg font-medium',\n  thumbsFeedbackContainer: 'flex justify-end mt-4 text-sm text-gray-500 font-medium',\n  thumbsUpIcon: thumbsFeedbackCssClasses.thumbsUpIcon,\n  thumbsDownIcon: thumbsFeedbackCssClasses.thumbsDownIcon\n};\n\n/**\n * Click handlers for the various buttons and links that can appear in the StandardCardDisplay.\n */\ninterface ClickHandlers {\n  handleTitleClick: MouseEventHandler<HTMLAnchorElement>,\n  handleCtaClick: MouseEventHandler<HTMLButtonElement>,\n  handleFeedbackClick: (feedback: FeedbackType) => void\n}\n\n/**\n * Props for displaying the basic, Standard card.\n */\ninterface StandardCardDisplayProps {\n  title: string | HighlightedValue,\n  link?: string,\n  description?: string,\n  showFeedbackButtons?: boolean,\n  cta1?: CtaData,\n  cta2?: CtaData,\n  clickHandlers: ClickHandlers,\n  customCssClasses?: StandardCardCssClasses\n}\n\n/**\n * The display portion of the {@link StandardCard}.\n *\n * @param props - Contains a title, an optional description, and up to two CTAs. Click handlers for\n *                the various buttons and links are also supplied. The props can also include custom\n *                styling.\n * @returns - The rendered Result card.\n */\nfunction StandardCardDisplay(props: StandardCardDisplayProps) {\n  const {\n    title,\n    link,\n    description,\n    customCssClasses,\n    clickHandlers,\n    showFeedbackButtons,\n    cta1,\n    cta2\n  } = props;\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n\n  function renderTitle(title: string | HighlightedValue, link?: string) {\n    const titleJsx = renderHighlightedValue(title, { highlighted: 'font-bold', nonHighlighted: 'font-medium' });\n\n    return (\n      link\n        ? <a href={link} className='text-lg font-medium text-primary hover:underline focus:underline' onClick={clickHandlers.handleTitleClick}>\n          {titleJsx}\n        </a>\n        : <div className={cssClasses.title}>{titleJsx}</div>\n    );\n  }\n\n  function renderCTAs(cta1?: CtaData | undefined, cta2?: CtaData | undefined) {\n    if (cta1 || cta2) {\n      return (\n        <div className='flex flex-col justify-end ml-4'>\n          {cta1 &&\n            <button className={cssClasses.cta1} onClick={clickHandlers.handleCtaClick}>{cta1.label}</button>}\n          {cta2 &&\n            <button className={cssClasses.cta2} onClick={clickHandlers.handleCtaClick}>{cta2.label}</button>}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  function renderDescription(text: string | undefined) {\n    if (text) {\n      return (\n        <div className='w-full'>\n          {renderHighlightedValue(text, { highlighted: 'font-semibold', nonHighlighted: 'font-normal' })}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  function renderFeedbackIcons() {\n    if (showFeedbackButtons) {\n      return (\n        <ThumbsFeedback\n          feedbackText=''\n          onClick={clickHandlers.handleFeedbackClick}\n          customCssClasses={cssClasses}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  return (\n    <div className={cssClasses.container}>\n      <div className={cssClasses.header}>\n        {renderTitle(title, link)}\n      </div>\n      {(description ?? cta1 ?? cta2) &&\n        <div className={cssClasses.body}>\n          {renderDescription(description)}\n          {renderCTAs(cta1, cta2)}\n        </div>\n      }\n      {renderFeedbackIcons()}\n    </div>\n  );\n}\n\n/**\n * The PropTypes for the StandardCardDisplay component. Note that props known at compile-time\n * are not included here. Type-checking of these props is taken care of by TypeScript.\n */\nStandardCardDisplay.propTypes = {\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      matchedSubstrings: PropTypes.arrayOf(PropTypes.shape({\n        length: PropTypes.number.isRequired,\n        offset: PropTypes.number.isRequired\n      })).isRequired\n    })\n  ]).isRequired,\n  link: PropTypes.string,\n  description: PropTypes.string,\n  cta1: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    linkType: PropTypes.string.isRequired\n  }),\n  cta2: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    linkType: PropTypes.string.isRequired\n  })\n};\n\nexport { StandardCardDisplay, StandardCardCssClasses };","import { useCardAnalyticsCallback } from '../../../hooks/useCardAnalyticsCallback';\nimport { CardProps } from '../../../models/cardComponent';\nimport { useCardFeedbackCallback } from '../../../hooks/useCardFeedbackCallback';\nimport { StandardCardDisplay, StandardCardCssClasses } from './StandardCardDisplay';\nimport { DefaultRawDataType } from '../../../models';\n\n/**\n * Props for a StandardCard.\n *\n * @public\n */\nexport interface StandardCardProps<T = DefaultRawDataType> extends CardProps<T> {\n  /** Whether or not to show thumbs up/down buttons to provide feedback on the result card */\n  showFeedbackButtons?: boolean,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: StandardCardCssClasses\n}\n\n/**\n * This Component renders the base result card.\n *\n * @public\n *\n * @param props - An object containing the result itself and any additional information needed\n *                to render the card\n * @returns A React element for the result card\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function StandardCard(props: StandardCardProps<any>): JSX.Element {\n  const {\n    result,\n    customCssClasses,\n    showFeedbackButtons\n  } = props;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data: any = {\n    title: result.highlightedFields?.name ?? result.name ?? result.rawData.name,\n    description: result.highlightedFields?.description ?? result.rawData.description,\n    cta1: result.rawData.c_primaryCTA,\n    cta2: result.rawData.c_secondaryCTA,\n  };\n\n  // eslint-disable-next-line react-perf/jsx-no-new-object-as-prop\n  const clickHandlers = {\n    handleCtaClick: useCardAnalyticsCallback(result, 'CTA_CLICK'),\n    handleTitleClick: useCardAnalyticsCallback(result, 'TITLE_CLICK'),\n    handleFeedbackClick: useCardFeedbackCallback(result)\n  };\n\n  /*\n    Note the title, link, description, and CTA props are sourced from LiveAPI data. This data\n    must be type-checked at run-time. This is accomplished by using the StandardCardDisplay's PropTypes.\n  */\n  return (\n    <StandardCardDisplay\n      customCssClasses={customCssClasses}\n      showFeedbackButtons={showFeedbackButtons}\n      clickHandlers={clickHandlers}\n      title={data.title}\n      link={result.link}\n      description={data.description}\n      cta1={data.cta1}\n      cta2={data.cta2}\n    />\n  );\n}\n\nexport { StandardCardCssClasses };","import { VerticalResultsDisplay } from '../VerticalResultsDisplay';\nimport { SectionProps } from '../../models/sectionComponent';\nimport { StandardCard } from '../cards/standard/StandardCard';\nimport { useComposedCssClasses } from '../../hooks/useComposedCssClasses';\nimport { VerticalResultsCssClasses } from '../VerticalResults';\nimport { DefaultRawDataType } from '../../models';\n\n/**\n * The CSS class interface used for {@link StandardSection}.\n *\n * @public\n */\nexport interface StandardSectionCssClasses extends VerticalResultsCssClasses {\n  section?: string\n}\n\nconst builtInCssClasses: Readonly<StandardSectionCssClasses> = {\n  section: ''\n};\n\n/**\n * The configuration for a StandardSection.\n *\n * @public\n */\nexport interface StandardSectionProps<T = DefaultRawDataType> extends SectionProps<T> {\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: StandardSectionCssClasses\n}\n\n/**\n * A component that displays all the results for a vertical using a standard section template.\n *\n * @public\n *\n * @param props - {@link StandardSectionProps}\n * @returns A React element for a standard section, or null if there are no results to display\n */\nexport function StandardSection<T>(props: StandardSectionProps<T>): JSX.Element | null {\n  const cssClasses = useComposedCssClasses(builtInCssClasses, props.customCssClasses);\n  const { results, CardComponent = StandardCard, header } = props;\n\n  if (results.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className={cssClasses.section}>\n      {header}\n      <VerticalResultsDisplay\n        results={results}\n        CardComponent={CardComponent}\n        customCssClasses={cssClasses}\n      />\n    </section>\n  );\n}","export function CollectionIcon(): JSX.Element {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M19 11H5M19 11C20.1046 11 21 11.8954 21 13V19C21 20.1046 20.1046 21 19 21H5C3.89543 21 3 20.1046 3 19V13C3 11.8954 3.89543 11 5 11M19 11V9C19 7.89543 18.1046 7 17 7M5 11V9C5 7.89543 5.89543 7 7 7M7 7V5C7 3.89543 7.89543 3 9 3H15C16.1046 3 17 3.89543 17 5V7M7 7H17\" stroke=\"#1f2937\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  );\n}","import { AppliedFiltersCssClasses } from '../AppliedFilters';\nimport { AppliedFiltersDisplay } from '../AppliedFiltersDisplay';\nimport { CollectionIcon } from '../../icons/CollectionIcon';\nimport { AppliedQueryFilter, useSearchState } from '@yext/search-headless-react';\nimport classNames from 'classnames';\nimport { useAnalytics } from '../../hooks/useAnalytics';\nimport { VerticalLink } from '../../models/verticalLink';\nimport { useCallback } from 'react';\n\nconst FALLBACK_CSS_CLASSES: SectionHeaderCssClasses = {};\n\n/**\n * The CSS class interface used for the SectionHeader component.\n *\n * @public\n */\nexport interface SectionHeaderCssClasses extends AppliedFiltersCssClasses {\n  sectionHeaderContainer?: string,\n  sectionHeaderIconContainer?: string,\n  sectionHeaderLabel?: string,\n  viewMoreContainer?: string,\n  viewMoreLink?: string\n}\n\nexport const builtInCssClasses: Readonly<SectionHeaderCssClasses> = {\n  sectionHeaderContainer: 'flex items-center w-full pl-1 mb-4',\n  sectionHeaderIconContainer: 'w-5 h-5',\n  sectionHeaderLabel: 'font-bold text-neutral-dark text-base pl-3',\n  viewMoreContainer: 'flex justify-end flex-grow ml-auto font-medium text-neutral-dark',\n  viewMoreLink: 'text-primary pr-1 pl-3',\n  appliedFiltersContainer: 'ml-3 flex flex-wrap',\n  nlpFilter: 'border border-gray-200 rounded-3xl px-3 py-1.5 text-sm font-medium text-neutral-dark mr-2',\n  removableFilter: 'flex items-center border border-gray-200 rounded-3xl px-3 py-1.5 text-sm font-medium text-neutral-dark mr-2'\n};\n\n/**\n * The props for a {@link SectionHeader}.\n */\nexport interface SectionHeaderProps {\n  /** The display label for the section header. */\n  label: string,\n  /** An array of AppliedQueryFilters which are displayed in the section header. */\n  appliedQueryFilters?: AppliedQueryFilter[],\n  /** CSS classes for customizing the component styling. */\n  cssClasses?: SectionHeaderCssClasses,\n  /** The verticalKey associated with the section. */\n  verticalKey: string,\n  /** Display a button to view all results for that section, if true. */\n  viewAllButton?: boolean,\n  /** A function which returns the viewAll link based on the vertical and query. */\n  getViewAllUrl?: (data: VerticalLink) => string\n}\n\n/**\n * The header of a section which includes an icon, the section title, applied query filters, and optionally\n * a view all button.\n *\n * @param props - {@link SectionHeaderProps}\n * @returns A React element for a Section Header\n */\nexport function SectionHeader(props: SectionHeaderProps): JSX.Element {\n  const {\n    label,\n    verticalKey,\n    viewAllButton = false,\n    appliedQueryFilters,\n    cssClasses = FALLBACK_CSS_CLASSES,\n    getViewAllUrl\n  } = props;\n  const latestQuery = useSearchState(state => state.query.mostRecentSearch);\n  const nlpFilterDisplayNames = appliedQueryFilters?.map(f => f.displayValue);\n\n  const analytics = useAnalytics();\n  const queryId = useSearchState(state => state.query.queryId);\n\n  const isLoading = useSearchState(state => state.searchStatus.isLoading);\n  cssClasses.appliedFiltersContainer = classNames(cssClasses.appliedFiltersContainer, {\n    [cssClasses.appliedFiltersLoading ?? '']: isLoading\n  });\n\n  const href = getViewAllUrl\n    ? getViewAllUrl({ verticalKey, query: latestQuery })\n    : `/${verticalKey}?query=${latestQuery}`;\n\n  const handleClickViewAllButton = useCallback(() => {\n    if (!analytics) {\n      return;\n    }\n    if (!queryId) {\n      console.error('Unable to report a vertical view all event. Missing field: queryId.');\n      return;\n    }\n    analytics?.report({\n      type: 'VERTICAL_VIEW_ALL',\n      queryId,\n      verticalKey\n    });\n  }, [analytics, queryId, verticalKey]);\n\n  return (\n    <div className={cssClasses.sectionHeaderContainer}>\n      <div className={cssClasses.sectionHeaderIconContainer}>\n        <CollectionIcon></CollectionIcon>\n      </div>\n      <h2 className={cssClasses.sectionHeaderLabel}>{label}</h2>\n      {appliedQueryFilters &&\n        <AppliedFiltersDisplay nlpFilterDisplayNames={nlpFilterDisplayNames} cssClasses={cssClasses} />\n      }\n      {viewAllButton &&\n        <div className={cssClasses.viewMoreContainer}>\n          <a className={cssClasses.viewMoreLink} href={href}>\n            <button onClick={handleClickViewAllButton}>\n              View all\n            </button>\n          </a>\n        </div>}\n    </div>\n  );\n}","import { CardComponent } from '../models/cardComponent';\nimport { useSearchState } from '@yext/search-headless-react';\nimport { VerticalResultsDisplay } from './VerticalResultsDisplay';\n\n/**\n * The CSS class interface used for {@link VerticalResults}.\n *\n * @public\n */\nexport interface VerticalResultsCssClasses {\n  verticalResultsContainer?: string,\n  verticalResultsLoading?: string\n}\n\n/**\n * Props for the VerticalResults component.\n *\n * @public\n */\nexport interface VerticalResultsProps<T> {\n  /** {@inheritDoc CardComponent} */\n  CardComponent: CardComponent<T>,\n  /**\n   * Whether or not all results should be displayed when there are none returned from the search.\n   * Defaults to true.\n   */\n  displayAllOnNoResults?: boolean,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: VerticalResultsCssClasses\n}\n\n/**\n * A component that renders search results for a vertical page.\n *\n * @public\n *\n * @param props - {@link VerticalResultsProps}\n * @returns A React element for the results, or null if no results should be displayed\n */\nexport function VerticalResults<T>(props: VerticalResultsProps<T>): JSX.Element | null {\n  const { displayAllOnNoResults = true, ...otherProps } = props;\n  const verticalResults = useSearchState(state => state.vertical.results) || [];\n  const allResultsForVertical =\n    useSearchState(state => state.vertical?.noResults?.allResultsForVertical.results) || [];\n  const isLoading = useSearchState(state => state.searchStatus.isLoading);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let results = verticalResults as any;\n  if (verticalResults.length === 0 && displayAllOnNoResults) {\n    results = allResultsForVertical;\n  }\n\n  return (\n    <VerticalResultsDisplay results={results} isLoading={isLoading} {...otherProps} />\n  );\n}\n","import { useSearchState, useSearchActions } from '@yext/search-headless-react';\nimport { useComposedCssClasses } from '../hooks/useComposedCssClasses';\nimport { ChevronIcon as PageNavigationIcon } from '../icons/ChevronIcon';\nimport { usePaginationAnalytics } from '../hooks/usePaginationAnalytics';\nimport { executeSearch } from '../utils';\nimport { PropsWithChildren, useCallback } from 'react';\nimport classNames from 'classnames';\n\n/**\n * Props for {@link Pagination} component\n *\n * @public\n */\nexport interface PaginationProps {\n  /**\n   * Whether or not to paginate based on the total results count of\n   * the vertical when there are none returned from the search.\n   * Defaults to false.\n   */\n  paginateAllOnNoResults?: boolean,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: PaginationCssClasses\n}\n\n/**\n * The CSS classes used for pagination.\n *\n * @public\n */\nexport interface PaginationCssClasses {\n  paginationContainer?: string,\n  paginationLoading?: string,\n  label?: string,\n  selectedLabel?: string,\n  leftIconContainer?: string,\n  rightIconContainer?: string,\n  icon?: string\n}\n\nconst builtInPaginationCssClasses: Readonly<PaginationCssClasses> = {\n  paginationContainer: 'flex justify-center mb-4',\n  paginationLoading: 'opacity-50',\n  label: 'z-0 inline-flex items-center px-4 py-2 text-sm font-semibold border border-gray-300 text-neutral',\n  selectedLabel: 'z-10 inline-flex items-center px-4 py-2 text-sm font-semibold border border-primary text-primary bg-primary-light',\n  leftIconContainer: 'inline-flex items-center px-3.5 py-2 border border-gray-300 rounded-l-md',\n  rightIconContainer: 'inline-flex items-center px-3.5 py-2 border border-gray-300 rounded-r-md',\n  icon: 'w-3 text-gray-600'\n};\n\n/**\n * Renders a component that divide a series of vertical results into chunks\n * across multiple pages and enable user to navigate between those pages.\n *\n * @public\n */\nexport function Pagination(props: PaginationProps): JSX.Element | null {\n  const { customCssClasses = {}, paginateAllOnNoResults = false } = props;\n  const cssClasses = useComposedCssClasses(builtInPaginationCssClasses, customCssClasses);\n  const searchActions = useSearchActions();\n  const verticalResultsCount = useSearchState(state => state.vertical.resultsCount) || 0;\n  const allResultsCountForVertical =\n    useSearchState(state => state.vertical?.noResults?.allResultsForVertical.resultsCount) || 0;\n  const isLoading = useSearchState(state => state.searchStatus.isLoading);\n\n  let resultsCount = verticalResultsCount;\n  if (verticalResultsCount === 0 && paginateAllOnNoResults) {\n    resultsCount = allResultsCountForVertical;\n  }\n\n  const offset = useSearchState(state => state.vertical.offset) || 0;\n  const limit = useSearchState(state => state.vertical.limit) || 20;\n  const currentPageNumber = (offset / limit) + 1;\n  const maxPageCount = Math.ceil(resultsCount / limit);\n\n  const reportAnalyticsEvent = usePaginationAnalytics();\n  const navigateToPage = useCallback((newPageNumber: number) => {\n    const newOffset = limit * (newPageNumber - 1);\n    searchActions.setOffset(newOffset);\n    executeSearch(searchActions);\n    reportAnalyticsEvent(newPageNumber, currentPageNumber, maxPageCount);\n  }, [searchActions, limit, maxPageCount, currentPageNumber, reportAnalyticsEvent]);\n\n  if (maxPageCount <= 1) {\n    return null;\n  }\n\n  const paginationLabels: string[] = generatePaginationLabels(currentPageNumber, maxPageCount);\n  const paginationContainerClassNames = classNames(cssClasses.paginationContainer, {\n    [cssClasses.paginationLoading ?? '']: isLoading\n  });\n\n  return (\n    <div className={paginationContainerClassNames}>\n      <nav className='inline-flex shadow-sm -space-x-px' aria-label=\"Pagination\">\n        <PaginationButton\n          ariaLabel='Navigate to the previous results page'\n          className={cssClasses.leftIconContainer}\n          navigateToPage={navigateToPage}\n          newPageNumber={currentPageNumber - 1}\n          disabled={currentPageNumber === 1}\n        >\n          <PageNavigationIcon className={cssClasses.icon + ' transform -rotate-90'} />\n        </PaginationButton>\n        {paginationLabels.map((label, index) => {\n          switch (label) {\n            case '...':\n              return (\n                <div\n                  key={index}\n                  className={cssClasses.label}\n                >\n                  {label}\n                </div>\n              );\n            case `${currentPageNumber}`:\n              return (\n                <PaginationButton\n                  key={index}\n                  className={cssClasses.selectedLabel}\n                  navigateToPage={navigateToPage}\n                  newPageNumber={currentPageNumber}\n                >\n                  {label}\n                </PaginationButton>\n              );\n            default:\n              return (\n                <PaginationButton\n                  key={index}\n                  className={cssClasses.label}\n                  navigateToPage={navigateToPage}\n                  newPageNumber={Number(label)}\n                >\n                  {label}\n                </PaginationButton>\n              );\n          }\n        })}\n        <PaginationButton\n          ariaLabel='Navigate to the next results page'\n          className={cssClasses.rightIconContainer}\n          navigateToPage={navigateToPage}\n          newPageNumber={currentPageNumber + 1}\n          disabled={currentPageNumber === maxPageCount}\n        >\n          <PageNavigationIcon className={cssClasses.icon + ' transform rotate-90'} />\n        </PaginationButton>\n      </nav>\n    </div>\n  );\n}\n\ninterface PaginationButtonProps {\n  className?: string,\n  navigateToPage: (newPageNumber: number) => void,\n  newPageNumber: number,\n  ariaLabel?: string,\n  disabled?: boolean\n}\n\nfunction PaginationButton(props: PropsWithChildren<PaginationButtonProps>): JSX.Element | null {\n  const { navigateToPage, newPageNumber } = props;\n  const handleClick = useCallback(() => {\n    navigateToPage(newPageNumber);\n  }, [navigateToPage, newPageNumber]);\n\n  return (\n    <button\n      aria-label={props.ariaLabel}\n      className={props.className}\n      onClick={handleClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nfunction generatePaginationLabels(currentPageNumber: number, maxPageCount: number): string[] {\n  const paginationLabels: string[] = [];\n  const previousPageNumber = currentPageNumber - 1;\n  const nextPageNumber = currentPageNumber + 1;\n\n  if (previousPageNumber > 3) {\n    paginationLabels.push('1', '...', `${previousPageNumber}`);\n  } else if (previousPageNumber !== 0) {\n    [...Array(previousPageNumber)].forEach((_, index) => paginationLabels.push(`${index + 1}`));\n  }\n  paginationLabels.push(`${currentPageNumber}`);\n  if (maxPageCount - nextPageNumber > 2) {\n    paginationLabels.push(`${nextPageNumber}`, '...', `${maxPageCount}`);\n  } else if (nextPageNumber <= maxPageCount) {\n    [...Array(maxPageCount - nextPageNumber + 1)]\n      .forEach((_, index) => paginationLabels.push(`${nextPageNumber + index}`));\n  }\n  return paginationLabels;\n}\n","export function ChevronIcon({ className }: { className?: string }): JSX.Element {\n  return (\n    <svg\n      viewBox=\"0 0 12 8\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className={className}\n    >\n      <path d=\"M1.33341 6.5L6.00008 1.83333L10.6667 6.5\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  );\n}","import { useAnalytics } from './useAnalytics';\nimport { useSearchState } from '@yext/search-headless-react';\n\nexport function usePaginationAnalytics(): (\n  newPage: number,\n  currentPage: number,\n  totalPageCount: number\n) => void {\n  const analytics = useAnalytics();\n  const verticalKey = useSearchState(state => state.vertical.verticalKey);\n  const queryId = useSearchState(state => state.query.queryId);\n\n  const reportPaginateEvent = (newPage: number, currentPage: number, totalPageCount: number) => {\n    if (!analytics) {\n      return;\n    }\n    if (!queryId) {\n      console.error('Unable to report a pagination event. Missing field: queryId.');\n      return;\n    }\n    if (!verticalKey) {\n      console.error('Unable to report a pagination event. Missing field: verticalKey.');\n      return;\n    }\n    analytics.report({\n      type: 'PAGINATE',\n      queryId: queryId,\n      verticalKey: verticalKey,\n      newPage,\n      currentPage,\n      totalPageCount\n    });\n  };\n  return reportPaginateEvent;\n}\n\n","export function StarIcon({ className }: { className?: string }): JSX.Element {\n  return (\n    <svg\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 18 18\"\n      className={className}\n    >\n      <path d=\"M8.991 0C4.023 0 0 4.032 0 9s4.023 9 8.991 9C13.968 18 18 13.968 18 9s-4.032-9-9.009-9zm3.816 14.4L9 12.105 5.193 14.4l1.008-4.329-3.357-2.907 4.428-.378L9 2.7l1.728 4.077 4.428.378-3.357 2.907z\"></path>\n    </svg>\n  );\n}","import { processTranslation } from './utils/processTranslation';\nimport { StarIcon } from '../icons/StarIcon';\nimport { useSearchState, VerticalResults as VerticalResultsData } from '@yext/search-headless-react';\nimport { useComposedCssClasses } from '../hooks/useComposedCssClasses';\nimport classNames from 'classnames';\nimport { VerticalConfig } from '../models/verticalConfig';\n\n/**\n * The CSS class interface used for {@link AlternativeVerticals}.\n *\n * @public\n */\nexport interface AlternativeVerticalsCssClasses {\n  alternativeVerticalsContainer?: string,\n  alternativeVerticalsLoading?: string,\n  noResultsText?: string,\n  categoriesText?: string,\n  suggestion?: string,\n  verticalIcon?: string\n}\n\nconst builtInCssClasses: Readonly<AlternativeVerticalsCssClasses> = {\n  alternativeVerticalsContainer: 'flex flex-col justify-between border border-gray-200 rounded-lg mb-4 p-4 shadow-sm',\n  alternativeVerticalsLoading: 'opacity-50',\n  noResultsText: 'text-lg text-neutral-dark pb-2',\n  categoriesText: 'text-neutral',\n  suggestion: 'pb-4 flex items-center',\n  verticalIcon: 'w-4 mr-2'\n};\n\ninterface VerticalSuggestion {\n  resultsCount: number,\n  label?: string,\n  verticalKey: string\n}\n\nfunction isVerticalSuggestion(suggestion: unknown): suggestion is VerticalSuggestion {\n  return (suggestion as VerticalSuggestion)?.resultsCount !== undefined &&\n    (suggestion as VerticalSuggestion)?.verticalKey !== undefined;\n}\n\n/**\n * A map of vertical keys to labels.\n *\n * @public\n */\nexport interface VerticalLabelMap {\n  /** Config mapped to a vertical. */\n  [verticalKey: string]: Pick<VerticalConfig, 'label'>\n}\n\n/**\n * Props for {@link AlternativeVerticals}.\n *\n * @public\n */\nexport interface AlternativeVerticalsProps {\n  /** The label for the current vertical. */\n  currentVerticalLabel: string,\n  /** A map of verticalKeys to the display label for that vertical. */\n  verticalConfigMap: VerticalLabelMap,\n  /**\n   * Whether or not all results should be displayed when there are none returned from the search.\n   * Defaults to true.\n   */\n  displayAllOnNoResults?: boolean,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: AlternativeVerticalsCssClasses\n}\n\n/**\n * A component that displays the alternative verticals that have results if a search returns none\n * on the current vertical.\n *\n * @public\n *\n * @param props - {@link AlternativeVerticalsProps}\n * @returns A React element for the alternative verticals, or null if there are none with results\n */\nexport function AlternativeVerticals({\n  currentVerticalLabel,\n  verticalConfigMap,\n  displayAllOnNoResults = true,\n  customCssClasses\n}: AlternativeVerticalsProps): JSX.Element | null {\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n\n  const alternativeVerticals = useSearchState(state => state.vertical.noResults?.alternativeVerticals) || [];\n  const allResultsForVertical =\n    useSearchState(state => state.vertical.noResults?.allResultsForVertical.results) || [];\n  const query = useSearchState(state => state.query.mostRecentSearch);\n\n  const verticalSuggestions = buildVerticalSuggestions(verticalConfigMap, alternativeVerticals);\n  const isShowingAllResults = displayAllOnNoResults && allResultsForVertical.length > 0;\n\n  const isLoading = useSearchState(state => state.searchStatus.isLoading);\n  const containerClassNames = classNames(cssClasses.alternativeVerticalsContainer, {\n    [cssClasses.alternativeVerticalsLoading ?? '']: isLoading\n  });\n\n  function buildVerticalSuggestions(\n    verticalConfigMap: VerticalLabelMap,\n    alternativeVerticals: VerticalResultsData[]): VerticalSuggestion[] {\n\n    return alternativeVerticals\n      .filter((alternativeResults: VerticalResultsData) => {\n        return !!verticalConfigMap[alternativeResults.verticalKey];\n      })\n      .map((alternativeResults: VerticalResultsData) => {\n        return {\n          label: verticalConfigMap[alternativeResults.verticalKey].label,\n          verticalKey: alternativeResults.verticalKey,\n          resultsCount: alternativeResults.resultsCount\n        };\n      })\n      .filter(isVerticalSuggestion)\n      .filter(verticalSuggestion => verticalSuggestion.resultsCount > 0);\n  }\n\n  if (verticalSuggestions.length <= 0) {\n    return null;\n  }\n\n  return (\n    <div className={containerClassNames}>\n      {renderNoResultsInfo()}\n      {verticalSuggestions &&\n        <div className='pt-4 text-neutral-dark'>\n          <div className={cssClasses.categoriesText}>\n            <span>\n              {processTranslation({\n                phrase: 'The following category yielded results for - ',\n                pluralForm: 'The following categories yielded results for - ',\n                count: verticalSuggestions.length\n              })}\n            </span>\n            <strong>{query}</strong>\n          </div>\n          <ul className='pt-4'>\n            {verticalSuggestions.map(renderSuggestion)}\n          </ul>\n        </div>\n      }\n    </div>\n  );\n\n  function renderNoResultsInfo() {\n    return (\n      <div className={cssClasses.noResultsText}>\n        <span>No results found in {currentVerticalLabel}.</span>\n        {isShowingAllResults &&\n          <span> Showing all {currentVerticalLabel} instead.</span>\n        }\n      </div>\n    );\n  }\n\n  function renderSuggestion(suggestion: VerticalSuggestion) {\n    const resultsCountText = processTranslation({\n      phrase: `${suggestion.resultsCount} result`,\n      pluralForm: `${suggestion.resultsCount} results`,\n      count: suggestion.resultsCount\n    });\n    return (\n      <li key={suggestion.verticalKey} className={cssClasses.suggestion}>\n        <div className={cssClasses.verticalIcon}><StarIcon/></div>\n        <span className='font-bold'>{suggestion.label} - {resultsCountText}</span>\n      </li>\n    );\n  }\n}","import {\n  SearchTypeEnum,\n  useSearchState,\n  VerticalResults,\n  VerticalSearchState\n} from '@yext/search-headless-react';\nimport classNames from 'classnames';\nimport { processTranslation } from './utils/processTranslation';\nimport { useComposedCssClasses } from '../hooks/useComposedCssClasses';\n\n/**\n *  The CSS class interface for {@link ResultsCount}.\n *\n * @public\n */\nexport interface ResultsCountCssClasses {\n  resultsCountContainer?: string,\n  resultsCountLoading?: string\n}\n\n/**\n * Props for {@link ResultsCount}.\n *\n * @public\n */\nexport interface ResultsCountProps {\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: ResultsCountCssClasses\n}\n\nconst builtInCssClasses: Readonly<ResultsCountCssClasses> = {\n  resultsCountContainer: 'font-semibold text-neutral mb-4 py-2 mr-2.5 whitespace-nowrap',\n  resultsCountLoading: 'opacity-50'\n};\n\n/**\n * Renders results count of a universal/vertical search.\n *\n * @public\n *\n * @param props - {@link ResultsCountProps}\n */\nexport function ResultsCount({ customCssClasses }: ResultsCountProps): JSX.Element | null {\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n  const isLoading = useSearchState(state => state.searchStatus.isLoading);\n  const resultsCountText = useResultsCount();\n\n  const resultsCountClassnames = classNames(cssClasses.resultsCountContainer, {\n    [cssClasses.resultsCountLoading ?? '']: isLoading\n  });\n  return <div className={resultsCountClassnames}>{resultsCountText}</div>;\n}\n\n/**\n * Generates a string for the results count of the recent universal/vertical search.\n */\nfunction useResultsCount() {\n  const isVertical = useSearchState(state => state.meta.searchType) === SearchTypeEnum.Vertical;\n  const results = useSearchState(state => isVertical ? state.vertical : state.universal.verticals);\n  const offset = useSearchState(state => state.vertical.offset) || 0;\n  const limit = useSearchState(state => state.vertical.limit) || 20;\n  let resultsCount = 0;\n  if (results) {\n    if (isUniversalSearchResults(results)) {\n      results.forEach(resultsOfAVertical => resultsCount += resultsOfAVertical.resultsCount);\n    } else {\n      resultsCount = results.resultsCount ?? 0;\n    }\n  }\n  if (resultsCount === 0) {\n    return null;\n  }\n  const resultsCountText = processTranslation({\n    phrase: `${resultsCount} Result`,\n    pluralForm: `${resultsCount} Results`,\n    count: resultsCount\n  });\n\n  if (resultsCount > limit && isVertical){\n    const paginateStart = offset + 1;\n    const paginateEnd = Math.min((offset + limit), resultsCount);\n    const paginateRange = `${paginateStart} - ${paginateEnd}`;\n    const resultCountWithPaginationText = `${paginateRange} of ${resultsCount} Results`;\n    return resultCountWithPaginationText;\n  } else {\n    return resultsCountText;\n  }\n}\n\nfunction isUniversalSearchResults(data: VerticalResults[] | VerticalSearchState): data is VerticalResults[] {\n  return Array.isArray(data);\n}\n","import { FieldValueFilter, Matcher, NumberRangeValue } from '@yext/search-headless-react';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useFiltersContext } from './FiltersContext';\nimport { useFilterGroupContext } from './FilterGroupContext';\nimport { useComposedCssClasses } from '../../hooks/useComposedCssClasses';\nimport { findSelectableFieldValueFilter } from '../../utils/filterutils';\nimport classNames from 'classnames';\nimport { useId } from '@reach/auto-id';\n/**\n * The configuration data for a field value filter option.\n *\n * @public\n */\nexport interface FilterOptionConfig {\n  /** The value used to perform filtering. */\n  value: string | number | boolean | NumberRangeValue,\n  /** The type of filtering operation used. Defaults to an equals comparison. */\n  matcher?: Matcher,\n  /** If this particular filter should be selected by default. */\n  selectedByDefault?: boolean,\n  /** The display name. Defaults to the value prop. */\n  displayName?: string,\n  /** The number of results associated with this filter. */\n  resultsCount?: number\n}\n\n/**\n * Props for the {@link Filters.CheckboxOption}.\n *\n * @public\n */\nexport interface CheckboxOptionProps extends FilterOptionConfig {\n  /** CSS classes for customizing the component styling defined by {@link Filters.CheckboxCssClasses}. */\n  customCssClasses?: CheckboxCssClasses\n}\n\n/**\n * The CSS class interface for {@link Filters.CheckboxOption}.\n *\n * @public\n */\nexport interface CheckboxCssClasses {\n  input?: string,\n  input___disabled?: string,\n  label?: string,\n  label___disabled?: string,\n  container?: string,\n  optionContainer?: string,\n  tooltipContainer?: string,\n  tooltip?: string\n}\n\nconst builtInCssClasses: Readonly<CheckboxCssClasses> = {\n  label: 'text-neutral text-sm font-normal cursor-pointer',\n  label___disabled: 'opacity-50 cursor-not-allowed',\n  input: 'w-3.5 h-3.5 form-checkbox cursor-pointer border border-gray-300 rounded-sm text-primary focus:ring-primary',\n  input___disabled: 'border-gray-200 bg-gray-50 cursor-not-allowed',\n  container: 'flex items-center',\n  optionContainer: 'flex items-center space-x-3 peer',\n  tooltipContainer: 'invisible peer-hover:visible relative -right-5 -top-5',\n  tooltip: 'absolute z-10 left-0 -top-0.5 whitespace-nowrap rounded shadow-lg p-3 text-sm bg-neutral-dark text-white'\n};\n\n/**\n * A checkbox component that represents a single FieldValueFilter.\n *\n * @public\n *\n * @param props - {@link Filters.CheckboxOptionProps}\n */\nexport function CheckboxOption(props: CheckboxOptionProps): JSX.Element | null {\n  const { fieldId, isOptionsDisabled } = useFilterGroupContext();\n  const {\n    value,\n    matcher = Matcher.Equals,\n    selectedByDefault = false,\n    displayName = props.value,\n    resultsCount\n  } = props;\n  const cssClasses = useComposedCssClasses(builtInCssClasses, props.customCssClasses);\n  const optionId = useId();\n  const { selectFilter, filters, applyFilters } = useFiltersContext();\n\n  const handleClick = useCallback((checked: boolean) => {\n    selectFilter({\n      matcher,\n      fieldId,\n      value,\n      displayName: typeof displayName === 'string' ? displayName : undefined,\n      selected: checked\n    });\n    applyFilters();\n  }, [applyFilters, fieldId, displayName, selectFilter, value, matcher]);\n\n  const handleChange = useCallback(evt => {\n    handleClick(evt.target.checked);\n  }, [handleClick]);\n\n  const optionFilter: FieldValueFilter = useMemo(() => {\n    return {\n      fieldId,\n      matcher,\n      value\n    };\n  }, [fieldId, value, matcher]);\n  const existingStoredFilter = findSelectableFieldValueFilter(optionFilter, filters);\n\n  useEffect(() => {\n    if (!existingStoredFilter && selectedByDefault) {\n      selectFilter({\n        ...optionFilter,\n        displayName: typeof displayName === 'string' ? displayName : undefined,\n        selected: true\n      });\n    }\n  }, [displayName, selectFilter, selectedByDefault, existingStoredFilter, optionFilter]);\n\n  const isSelected = existingStoredFilter ? existingStoredFilter.selected : false;\n\n  const labelText = resultsCount ? `${displayName} (${resultsCount})` : displayName;\n\n  const inputClasses = classNames(cssClasses.input, {\n    [cssClasses.input___disabled ?? '']: isOptionsDisabled\n  });\n  const labelClasses = classNames(cssClasses.label, {\n    [cssClasses.label___disabled ?? '']: isOptionsDisabled\n  });\n\n  return (\n    <div className={cssClasses.container}>\n      <div className={cssClasses.optionContainer}>\n        <input\n          type='checkbox'\n          id={optionId}\n          checked={isSelected}\n          className={inputClasses}\n          onChange={handleChange}\n          disabled={isOptionsDisabled}\n        />\n        <label className={labelClasses} htmlFor={optionId}>{labelText}</label>\n      </div>\n      {isOptionsDisabled &&\n        <div className={cssClasses.tooltipContainer}>\n          <div className={cssClasses.tooltip}>\n            Clear the range to select options.\n          </div>\n        </div>\n      }\n    </div>\n  );\n}\n","import { createContext, useContext } from 'react';\nimport { UseCollapseOutput } from 'react-collapsed/dist/types';\n\n/**\n * FilterGroupContext is responsible for searchable filters and collapsible filter groups.\n *\n * @public\n */\nexport interface FilterGroupContextType {\n  /** The value which is being used to search the FilterGroup. */\n  searchValue: string,\n  /** The fieldId to use with child filter components e.g. {@link Filters.CheckboxOption}. */\n  fieldId: string,\n  /** Sets the searchValue which is used to filter the FilterGroup. */\n  setSearchValue: (value: string) => void,\n  /** Returns the attributes used to collapse the filter group. */\n  getCollapseProps: UseCollapseOutput['getCollapseProps'],\n  /** Returns the attributes used to toggle the filter group. */\n  getToggleProps: UseCollapseOutput['getToggleProps'],\n  /** Indicates whether or not the filter group is expanded. */\n  isExpanded: boolean,\n  /** Whether or not the filter options should be disabled. */\n  isOptionsDisabled: boolean,\n  /** Sets the value for whether or not the filter options should be disabled. */\n  setIsOptionsDisabled: (value: boolean) => void\n}\n\n/**\n * Filter context to support searchable filters and collapsible filter groups.\n *\n * @public\n */\nexport const FilterGroupContext = createContext<FilterGroupContextType | null>(null);\n\n/**\n * A hook used to access the {@link Filters.FilterGroupContextType}.\n *\n * @public\n */\nexport function useFilterGroupContext(): FilterGroupContextType {\n  const filterGroupContextInstance = useContext(FilterGroupContext);\n  if (filterGroupContextInstance === null) {\n    throw new Error('Tried to use FilterGroupContext when none exists.');\n  }\n  return filterGroupContextInstance;\n}","import classNames from 'classnames';\nimport { ChevronIcon } from '../../icons/ChevronIcon';\nimport { useFilterGroupContext } from './FilterGroupContext';\nimport { useComposedCssClasses } from '../../hooks/useComposedCssClasses';\n\n/**\n * The CSS class interface for {@link CollapsibleLabelProps}.\n *\n * @public\n */\nexport interface CollapsibleLabelCssClasses {\n  label?: string\n}\n\n/**\n * Props for {@link Filters.CollapsibleLabel}.\n *\n * @public\n */\nexport interface CollapsibleLabelProps {\n  /** The label's text value which is displayed by the component. */\n  label?: string,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: CollapsibleLabelCssClasses\n}\n\nexport const builtInCssClasses: Readonly<CollapsibleLabelCssClasses> = {\n  label: 'text-neutral-dark text-sm font-medium text-left',\n};\n\n/**\n * CollapsibleLabel is a button for collapsing and expanding filters within a parent\n * {@link Filters.FilterGroupProvider}.\n *\n * For more customization, use {@link Filters.FilterGroupContext} directly.\n *\n * @param props - {@link Filters.CollapsibleLabelProps}\n *\n * @public\n */\nexport function CollapsibleLabel({ label, customCssClasses }: CollapsibleLabelProps): JSX.Element {\n  const { isExpanded, getToggleProps } = useFilterGroupContext();\n  const iconClassName = classNames('w-3 text-gray-400', {\n    'transform rotate-180': !isExpanded\n  });\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n\n  return (\n    <button className='w-full flex justify-between items-center mb-4' {...getToggleProps()}>\n      <div className={cssClasses.label}>\n        {label}\n      </div>\n      <ChevronIcon className={iconClassName}/>\n    </button>\n  );\n}\n","import { PropsWithChildren } from 'react';\nimport { useFilterGroupContext } from './FilterGroupContext';\n\n/**\n * Props for the {@link Filters.CollapsibleSection}.\n *\n * @public\n */\nexport type CollapsibleSectionProps = PropsWithChildren<{\n  /** CSS classes applied to the component's container div. */\n  className?: string\n}>;\n\n/**\n * CollapsibleSection are used for collapsing and un-collapsing groups of filters.\n * It is intended to be used with {@link Filters.CollapsibleLabel}s within the same\n * {@link Filters.FilterGroupProvider}.\n *\n * @param props - {@link Filters.CollapsibleSectionProps}\n *\n * @public\n */\nexport function CollapsibleSection(props: CollapsibleSectionProps): JSX.Element {\n  const {\n    className = 'space-y-3',\n    children\n  } = props;\n\n  const { getCollapseProps } = useFilterGroupContext();\n\n  return (\n    <div className={className} {...getCollapseProps()}>\n      {children}\n    </div>\n  );\n}","import {\n  DisplayableFacet,\n  useSearchActions,\n  useSearchState\n} from '@yext/search-headless-react';\nimport { ReactNode, useMemo } from 'react';\nimport { SelectableFieldValueFilter } from '../../models/SelectableFieldValueFilter';\n\nimport { getSelectedNumericalFacetFields, isNumberRangeValue } from '../../utils/filterutils';\nimport { clearStaticRangeFilters } from '../../utils/filterutils';\nimport { executeSearch } from '../../utils/search-operations';\nimport { FiltersContext, FiltersContextType } from './FiltersContext';\n\n/**\n * Props for {@link Filters.FacetsProvider}\n *\n * @public\n */\nexport interface FacetsProviderProps {\n  /** CSS class names applied to the component's container div. */\n  className?: string,\n  /** Whether or not a search is automatically run when a filter is selected. Defaults to true. */\n  searchOnChange?: boolean,\n  /** A function which renders the Facets UI with the provided facets data.\n   *\n   * @remarks\n   * It is intended to be used with the Filters subcomponents including Filters.FilterGroupProvider,\n   * Filters.CollapsibleLabel, Filters.SearchInput, Filters.CheckboxOption, Filters.CollapsibleSection\n   */\n  children?: (facets: DisplayableFacet[]) => ReactNode\n}\n\n/**\n * The FacetsProvider component is a wrapper component around {@link Filters} that updates facet\n * options when a child filter is updated.\n *\n * The representation of the facets is configured using a FACC (function as a child component)\n * The FACC is passed the facets data, and is intended for use with components like\n * {@link Filters.CheckboxOption}.\n *\n * @public\n *\n * @param props - {@link Filters.FacetsProviderProps}\n */\nexport function FacetsProvider({\n  children,\n  className = 'w-full',\n  searchOnChange = true\n}: FacetsProviderProps): JSX.Element {\n  const searchActions = useSearchActions();\n  const facetsInState = useSearchState(state => state.filters.facets);\n  const facets = useMemo(() => facetsInState ?? [], [facetsInState]);\n  const filters: SelectableFieldValueFilter[] = useMemo(() => {\n    return facets.flatMap(f => f.options.map(o => {\n      return {\n        fieldId: f.fieldId,\n        value: o.value,\n        matcher: o.matcher,\n        selected: o.selected,\n        displayName: o.displayName\n      };\n    }));\n  }, [facets]);\n\n  const filtersContextInstance: FiltersContextType = useMemo(() => {\n    return {\n      selectFilter(filter: SelectableFieldValueFilter) {\n        if (typeof filter.value === 'object' && !isNumberRangeValue(filter.value)) {\n          console.error('Facets only support string, number, boolean, and NumberRangeValue. Found the following object value instead:', filter.value);\n          return;\n        }\n        const facetOption = {\n          matcher: filter.matcher,\n          value: filter.value\n        };\n        searchActions.setFacetOption(filter.fieldId, facetOption, filter.selected);\n      },\n      applyFilters() {\n        if (searchOnChange) {\n          searchActions.setOffset(0);\n          clearStaticRangeFilters(searchActions, getSelectedNumericalFacetFields(searchActions));\n          executeSearch(searchActions);\n        }\n      },\n      filters\n    };\n  }, [searchActions, filters, searchOnChange]);\n\n  return (\n    <div className={className}>\n      <FiltersContext.Provider value={filtersContextInstance}>\n        {children?.(facets)}\n      </FiltersContext.Provider>\n    </div>\n  );\n}","import { PropsWithChildren, useMemo, useState } from 'react';\nimport useCollapse from 'react-collapsed';\nimport { FilterGroupContext } from './FilterGroupContext';\n\n/**\n * Props for a {@link Filters.FilterGroupProvider}.\n *\n * @public\n */\nexport type FilterGroupProviderProps = PropsWithChildren<{\n  /** Whether the {@link Filters.FilterGroupProvider} should start out expanded. Defaults to true. */\n  defaultExpanded?: boolean,\n  /** {@inheritDoc Filters.FilterGroupContextType.fieldId} */\n  fieldId: string\n}>;\n\n/**\n * The Filters.FilterGroupProvider component represents a group of filters to\n * support for searching and collapsing.\n *\n * @remarks\n * A Filter.Group designates a set of filters which may be collapsed through the\n * {@link Filters.CollapsibleLabel} and {@link Filters.CollapsibleSection} components. A Filter.Group\n * also designates a set of filters which may be searched with the {@link Filters.SearchInput}\n * component.\n *\n * @public\n *\n * @param props - {@link Filters.FilterGroupProviderProps}\n */\nexport function FilterGroupProvider(props: FilterGroupProviderProps): JSX.Element {\n  const {\n    children,\n    defaultExpanded = true,\n    fieldId\n  } = props;\n\n  const [searchValue, setSearchValue] = useState('');\n  const [isOptionsDisabled, setIsOptionsDisabled] = useState(false);\n  const { getCollapseProps, getToggleProps, isExpanded } = useCollapse({ defaultExpanded });\n  const FilterGroupContextInstance = useMemo(() => {\n    return {\n      fieldId,\n      searchValue,\n      setSearchValue,\n      getCollapseProps,\n      getToggleProps,\n      isExpanded,\n      isOptionsDisabled,\n      setIsOptionsDisabled\n    };\n  }, [\n    fieldId,\n    getCollapseProps,\n    getToggleProps,\n    isExpanded,\n    searchValue,\n    isOptionsDisabled\n  ]);\n\n  return (\n    <FilterGroupContext.Provider value={FilterGroupContextInstance}>\n      {children}\n    </FilterGroupContext.Provider>\n  );\n}","import { useCallback } from 'react';\nimport { useFilterGroupContext } from './FilterGroupContext';\n\n/**\n * Props for the {@link Filters.SearchInput}.\n *\n * @public\n */\nexport interface SearchInputProps {\n  /** CSS class names applied to the input element. */\n  className?: string,\n  /** {@inheritDoc FilterSearch.placeholder} */\n  placeholder?: string\n}\n\n/**\n * SearchInput is a simple input component that updates the\n * active searchValue for a particular {@link Filters.FilterGroupProvider}.\n *\n * @param props - {@link Filters.SearchInputProps}\n *\n * @public\n */\nexport function SearchInput(props: SearchInputProps): JSX.Element {\n  const {\n    className = 'text-sm form-input bg-white h-9 w-full outline-none p-2 mb-2 rounded-md border border-gray-300 focus:ring-primary focus:ring-0 text-neutral-dark placeholder:text-neutral',\n    placeholder = 'Search here...'\n  } = props;\n  const { searchValue, setSearchValue } = useFilterGroupContext();\n  const handleChange = useCallback(e => {\n    setSearchValue(e.target.value);\n  }, [setSearchValue]);\n\n  return (\n    <input\n      className={className}\n      type='text'\n      placeholder={placeholder}\n      value={searchValue}\n      onChange={handleChange}\n    />\n  );\n}","import { useSearchActions, useSearchState } from '@yext/search-headless-react';\nimport { PropsWithChildren, useMemo } from 'react';\nimport { SelectableFieldValueFilter } from '../../models/SelectableFieldValueFilter';\nimport { getSelectableFieldValueFilters } from '../../utils/filterutils';\nimport { executeSearch } from '../../utils/search-operations';\nimport { FiltersContext, FiltersContextType } from './FiltersContext';\n\n/**\n * Props for the {@link Filters.StaticFiltersProvider}.\n *\n * @public\n */\nexport type StaticFiltersProviderProps = PropsWithChildren<{\n  /** CSS class names applied to the StaticFilter's container div. */\n  className?: string,\n  /** Whether or not a search is automatically run when a filter is selected. Defaults to true. */\n  searchOnChange?: boolean\n}>;\n\n/**\n * The StaticFilters component is a wrapper component around {@link Filters} that updates static filter\n * options when a child filter is updated.\n *\n * The representation of the facets is configured using props.children,\n * and is intended for use with components like {@link Filters.CheckboxOption}.\n *\n * @param props - {@link Filters.StaticFiltersProviderProps}\n *\n * @public\n */\nexport function StaticFiltersProvider({\n  children,\n  className = 'w-full',\n  searchOnChange = true\n}: StaticFiltersProviderProps): JSX.Element {\n  const searchActions = useSearchActions();\n  const displayableFilters = useSearchState(state => state.filters.static);\n\n  const filtersContextInstance: FiltersContextType = useMemo(() => {\n    return {\n      selectFilter(filter: SelectableFieldValueFilter) {\n        const { selected, displayName, ...fieldValueFilter } = filter;\n        searchActions.setFilterOption({\n          filter: {\n            kind: 'fieldValue',\n            ...fieldValueFilter\n          },\n          selected,\n          displayName\n        });\n      },\n      applyFilters() {\n        if (searchOnChange) {\n          searchActions.setOffset(0);\n          searchActions.resetFacets();\n          executeSearch(searchActions);\n        }\n      },\n      filters: getSelectableFieldValueFilters(displayableFilters ?? [])\n    };\n  }, [searchActions, displayableFilters, searchOnChange]);\n\n  return (\n    <div className={className}>\n      <FiltersContext.Provider value={filtersContextInstance}>\n        {children}\n      </FiltersContext.Provider>\n    </div>\n  );\n}\n","import { Matcher, NumberRangeValue, useSearchActions, useSearchState } from '@yext/search-headless-react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useFilterGroupContext } from './FilterGroupContext';\nimport { useComposedCssClasses } from '../../hooks/useComposedCssClasses';\nimport { clearStaticRangeFilters, findSelectableFieldValueFilter, getSelectableFieldValueFilters, parseNumberRangeInput } from '../../utils/filterutils';\nimport { executeSearch } from '../../utils/search-operations';\nimport classNames from 'classnames';\nimport { useFiltersContext } from './FiltersContext';\nimport { InvalidIcon } from '../../icons/InvalidIcon';\n\n/**\n * Props for RangeInput\n *\n * @public\n */\nexport interface RangeInputProps {\n  /**\n   * Returns the filter's display name based on the range values which is used when the filter\n   * is displayed by other components such as AppliedFilters.\n   *\n   * @remarks\n   * By default, the displayName separates the range with a dash such as '10 - 20'.\n   * If the range is unbounded, it will display as 'Up to 20' or 'Over 10'.\n   */\n  getFilterDisplayName?: (value: NumberRangeValue) => string,\n  /**\n   * An optional element which renders in front of the input text.\n   */\n  inputPrefix?: JSX.Element,\n  /** CSS classes for customizing the component styling defined by RangeInputCssClasses */\n  customCssClasses?: RangeInputCssClasses\n}\n\n/**\n * The CSS class interface for RangeInput.\n *\n * @public\n */\nexport interface RangeInputCssClasses {\n  rangeInputContainer?: string,\n  input?: string,\n  input___withPrefix?: string,\n  input___withoutPrefix?: string,\n  input___disabled?: string,\n  input___enabled?: string,\n  input___valid?: string,\n  input___invalid?: string,\n  inputContainer?: string,\n  inputRowContainer?: string,\n  buttonsContainer?: string,\n  inputPrefix?: string,\n  inputPrefix___disabled?: string,\n  inputPrefix___enabled?: string,\n  applyButton?: string,\n  clearButton?: string,\n  tooltipContainer?: string,\n  tooltip?: string,\n  invalidMessage?: string,\n  invalidRowContainer?: string\n}\n\nconst builtInCssClasses: Readonly<RangeInputCssClasses> = {\n  rangeInputContainer: 'flex flex-col',\n  input: 'w-full h-9 form-input cursor-pointer border rounded-md focus:ring-0 text-neutral-dark text-sm text-right appearance-none leading-9',\n  input___withPrefix: 'pl-[2.5rem]',\n  input___withoutPrefix: 'px-2',\n  input___disabled: 'bg-gray-50 placeholder:text-neutral-light cursor-not-allowed',\n  input___enabled: 'placeholder:text-neutral',\n  input___valid: 'border-gray-300 focus:border-primary',\n  input___invalid: 'border-red-700 focus:border-red-700',\n  inputContainer: 'relative',\n  inputRowContainer: 'flex flex-row items-center space-x-3 group',\n  buttonsContainer: 'flex flex-row items-center justify-between pt-2',\n  inputPrefix: 'absolute left-2 top-2 text-sm',\n  inputPrefix___disabled: 'text-neutral-light cursor-not-allowed',\n  inputPrefix___enabled: 'text-neutral',\n  applyButton: 'text-sm text-primary font-medium',\n  clearButton: 'text-sm text-neutral font-medium',\n  tooltipContainer: 'invisible group-hover:visible relative -top-6',\n  tooltip: 'absolute z-10 left-0 whitespace-nowrap rounded shadow-lg p-3 text-sm bg-neutral-dark text-white',\n  invalidMessage: 'pl-3 text-sm text-red-700',\n  invalidRowContainer: 'pt-2 flex flex-row items-center'\n};\n\n/**\n * Represents a single number range static filter which accepts user input.\n *\n * @public\n *\n * @param props - RangeInputProps\n */\nexport function RangeInput(props: RangeInputProps): JSX.Element | null {\n  const { filters } = useFiltersContext();\n  const { fieldId, setIsOptionsDisabled } = useFilterGroupContext();\n  const {\n    getFilterDisplayName = getDefaultFilterDisplayName,\n    inputPrefix\n  } = props;\n  const cssClasses = useComposedCssClasses(builtInCssClasses, props.customCssClasses);\n  const searchActions = useSearchActions();\n  const [minRangeInput, setMinRangeInput] = useState<string>('');\n  const [maxRangeInput, setMaxRangeInput] = useState<string>('');\n  const staticFilters = useSearchState(state => state.filters.static);\n  const fieldValueFilters = useMemo(\n    () => getSelectableFieldValueFilters(staticFilters ?? []),\n    [staticFilters]\n  );\n  const isDisabled = filters.some(filter => filter.selected && filter.fieldId === fieldId);\n\n  const rangeFilter = useMemo(() => {\n    return {\n      kind: 'fieldValue' as const,\n      fieldId,\n      matcher: Matcher.Between,\n      value: parseNumberRangeInput(minRangeInput, maxRangeInput),\n    };\n  }, [fieldId, maxRangeInput, minRangeInput]);\n\n  const isValid = isValidRange(rangeFilter.value);\n\n   // Find a static filter which matches the current range input\n  const matchingFilter = findSelectableFieldValueFilter(rangeFilter, fieldValueFilters);\n  const isSelectedInAnswersState = matchingFilter?.selected === true;\n  const hasUserInput = !!(minRangeInput || maxRangeInput);\n  const shouldRenderApplyButton = hasUserInput && !isSelectedInAnswersState;\n\n  useEffect(() => {\n    setIsOptionsDisabled(hasUserInput);\n  }, [hasUserInput, setIsOptionsDisabled]);\n\n  const handleMinChange = useCallback(event => {\n    const input = event?.target?.value;\n    validateNumericInput(input) && setMinRangeInput(input);\n  }, []);\n\n  const handleMaxChange = useCallback(event => {\n    const input = event?.target?.value;\n    validateNumericInput(input) && setMaxRangeInput(input);\n  }, []);\n\n  const handleClickApply = useCallback(() => {\n    if (!rangeFilter.value.start && !rangeFilter.value.end) {\n      return;\n    }\n    if (!isValid) {\n      return;\n    }\n    const displayName = getFilterDisplayName(rangeFilter.value);\n    clearStaticRangeFilters(searchActions, new Set([fieldId]));\n    searchActions.setFilterOption({\n      filter: rangeFilter,\n      selected: true,\n      displayName\n    });\n    searchActions.setOffset(0);\n    executeSearch(searchActions);\n  }, [searchActions, fieldId, getFilterDisplayName, isValid, rangeFilter]);\n\n  const handleClickClear = useCallback(() => {\n    const displayName = getFilterDisplayName(rangeFilter.value);\n    searchActions.setFilterOption({\n      filter: rangeFilter,\n      selected: false,\n      displayName\n    });\n    setMinRangeInput('');\n    setMaxRangeInput('');\n    searchActions.setOffset(0);\n    executeSearch(searchActions);\n  }, [searchActions, getFilterDisplayName, rangeFilter]);\n\n  const inputClasses = classNames(cssClasses.input, {\n    [cssClasses.input___withPrefix ?? '']: !!inputPrefix,\n    [cssClasses.input___withoutPrefix ?? '']: !inputPrefix,\n    [cssClasses.input___disabled ?? '']: isDisabled,\n    [cssClasses.input___enabled ?? '']: !isDisabled,\n    [cssClasses.input___invalid ?? '']: !isValid,\n    [cssClasses.input___valid ?? '']: isValid\n  });\n\n  const inputPrefixClasses = classNames(cssClasses.inputPrefix, {\n    [cssClasses.inputPrefix___disabled ?? '']: isDisabled,\n    [cssClasses.inputPrefix___enabled ?? '']: !isDisabled,\n  });\n\n  function renderInput(value: string, onChange: (event: unknown) => void, placeholder: string) {\n    return (\n      <div className={cssClasses.inputContainer}>\n        {inputPrefix && <span className={inputPrefixClasses} aria-hidden=\"true\">{inputPrefix}</span>}\n        <input\n          type='text'\n          inputMode='decimal'\n          value={value}\n          placeholder={placeholder}\n          disabled={isDisabled}\n          className={inputClasses}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={cssClasses.rangeInputContainer}>\n      <div className={cssClasses.inputRowContainer}>\n        {renderInput(minRangeInput, handleMinChange, 'Min')}\n        <div className='w-2.5 text-sm text-neutral'>-</div>\n        {renderInput(maxRangeInput, handleMaxChange, 'Max')}\n        {isDisabled &&\n        <div className={cssClasses.tooltipContainer}>\n          <div className={cssClasses.tooltip}>\n            Unselect an option to enter in a range.\n          </div>\n        </div>\n        }\n      </div>\n      {!isValid &&\n        <div className={cssClasses.invalidRowContainer}>\n          <InvalidIcon/>\n          <div className={cssClasses.invalidMessage}>Invalid range</div>\n        </div>\n      }\n      {hasUserInput &&\n        <div className={cssClasses.buttonsContainer}>\n          <button\n            className={cssClasses.clearButton}\n            onClick={handleClickClear}\n          >\n            Clear min and max\n          </button>\n          {shouldRenderApplyButton &&\n            <button\n              className={cssClasses.applyButton}\n              onClick={handleClickApply}\n            >\n              Apply\n            </button>\n          }\n        </div>\n      }\n    </div>\n  );\n}\n\n/**\n * Creates the filter's display name based on the number range.\n */\nfunction getDefaultFilterDisplayName(numberRange: NumberRangeValue) {\n  const start = numberRange.start;\n  const end = numberRange.end;\n\n  if (start && end) {\n    return `${start.value} - ${end.value}`;\n  } else if (start && !end) {\n    return `Over ${start.value}`;\n  } else if (end && !start) {\n    return `Up to ${end.value}`;\n  }\n  return '';\n}\n\n/**\n * Returns true only if the provided string passes the numeric validation.\n *\n * @remarks\n * Allows whole numbers and numbers with a single period.\n */\nfunction validateNumericInput(str: string) {\n  const numberRegex = new RegExp(/^\\d*\\.?\\d*$/);\n  return numberRegex.test(str);\n}\n\n/**\n * Determines if the range is valid.\n */\nfunction isValidRange(range: NumberRangeValue): boolean {\n  if (range.start && range.end) {\n    return range.start.value <= range.end.value;\n  }\n  return true;\n}","export function InvalidIcon(): JSX.Element {\n  return (\n    <svg width=\"20\" height=\"18\" viewBox=\"0 0 20 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M9.99955 7V9M9.99955 13H10.0095M3.07134 17H16.9277C18.4673 17 19.4296 15.3333 18.6598 14L11.7316 2C10.9618 0.666667 9.0373 0.666667 8.2675 2L1.33929 14C0.569492 15.3333 1.53174 17 3.07134 17Z\" stroke=\"#B91C1C\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </svg>\n  );\n}\n","import { useSearchUtilities } from '@yext/search-headless-react';\nimport { PropsWithChildren, useMemo, useState } from 'react';\nimport {\n  CheckboxOption,\n  CollapsibleSection,\n  FilterOptionConfig,\n  SearchInput,\n  FilterGroupProvider,\n  useFilterGroupContext,\n  CheckboxCssClasses\n} from './Filters';\nimport { FacetTitle } from './FacetTiltle';\n\n/**\n * The CSS class interface for FilterGroup.\n *\n * @public\n */\nexport interface FilterGroupCssClasses {\n  titleLabel?: string,\n  searchInput?: string,\n  optionsContainer?: string,\n  option?: string,\n  optionInput?: string,\n  optionLabel?: string\n}\n\n/**\n * Props for the FilterGroup component.\n *\n * @public\n */\nexport interface FilterGroupProps {\n  /** The fieldId corresponding to the filter group. */\n  fieldId: string,\n  /** {@inheritDoc FilterOptionConfig} */\n  filterOptions: FilterOptionConfig[],\n  /** The displayed label for the filter group. */\n  title: string,\n  /** Whether or not the filter is collapsible. Defaults to true. */\n  collapsible?: boolean,\n  /**\n   * If the filter group is collapsible, whether or not it should start out\n   * expanded. Defaults to true.\n   */\n  defaultExpanded?: boolean,\n  /** Whether or not to display a text input to search for filter options. */\n  searchable?: boolean,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: FilterGroupCssClasses,\n  /** Limit on the number of options to be displayed. */\n  showMoreLimit?: number\n}\n\n/**\n * Renders a group of selectable filters with support for searching and collapsing.\n */\nexport function FilterGroup({\n  fieldId,\n  filterOptions,\n  title,\n  collapsible = true,\n  defaultExpanded = true,\n  searchable,\n  customCssClasses = {},\n  showMoreLimit = filterOptions.length,\n  children\n}: PropsWithChildren<FilterGroupProps>) {\n  const cssClasses = useMemo(() => {\n    const { option, optionLabel, optionInput, ...remainingClasses } = customCssClasses;\n    return {\n      ...remainingClasses,\n      ...option && { optionContainer: option },\n      ...optionLabel && { label: optionLabel },\n      ...optionInput && { input: optionInput }\n    };\n  }, [customCssClasses]);\n\n  return (\n    <FilterGroupProvider\n      fieldId={fieldId}\n      defaultExpanded={!collapsible || defaultExpanded}\n    >\n      <FacetTitle\n        label={title}\n        customCssClasses={customCssClasses}\n        collapsible={collapsible}\n      />\n      <CollapsibleSection className={cssClasses.optionsContainer}>\n        {searchable && <SearchInput className={cssClasses.searchInput} />}\n        <CheckboxOptions\n          filterOptions={filterOptions}\n          showMoreLimit={showMoreLimit}\n          cssClasses={cssClasses} />\n        {children}\n      </CollapsibleSection>\n    </FilterGroupProvider>\n  );\n}\n\nfunction CheckboxOptions({\n  filterOptions,\n  showMoreLimit,\n  cssClasses\n}: {\n  filterOptions: FilterOptionConfig[],\n  showMoreLimit: number,\n  cssClasses: CheckboxCssClasses\n}) {\n  const searchUtilities = useSearchUtilities();\n  const { searchValue } = useFilterGroupContext();\n\n  const shouldRenderOption = (\n    option: FilterOptionConfig\n  ) => {\n    return searchUtilities.isCloseMatch(option.displayName || option.value.toString(), searchValue);\n  };\n\n  let displayedOptions = filterOptions.filter(shouldRenderOption).map(o => {\n    return (\n      <CheckboxOption\n        {...o}\n        key={o.displayName || o.value.toString()}\n        customCssClasses={cssClasses}\n      />\n    );\n  });\n\n  const isLimited = displayedOptions.length > showMoreLimit;\n\n  const [showAll, setShowAll] = useState<boolean>(!isLimited);\n  displayedOptions = displayedOptions.slice(0, showAll ? displayedOptions.length : showMoreLimit);\n\n  return (\n    <>\n      {displayedOptions}\n      {isLimited &&\n        /* eslint-disable-next-line react-perf/jsx-no-new-function-as-prop */\n        <button className='text-primary py-1 text-sm' onClick={() => setShowAll(!showAll)}>\n          {showAll ? 'Show Less' : 'Show More'}\n        </button>\n      }\n    </>\n  );\n}","import { builtInCollapsibleLabelCssClasses, CollapsibleLabel, CollapsibleLabelCssClasses } from './Filters';\nimport { Fragment, useMemo } from 'react';\nimport { twMerge } from '../hooks/useComposedCssClasses';\nimport { FilterGroupCssClasses } from './FilterGroup';\n\n/**\n * Props for the {@link FacetTitle} component.\n *\n * @internal\n */\nexport interface FacetTitleProps {\n  /** The label to use in the title. */\n  label?: string,\n  /** {@inheritDoc FilterGroupProps.collapsible} */\n  collapsible?: boolean,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: FilterGroupCssClasses\n}\n\n/**\n * The tile of a facet component.\n *\n * @param props - props to render the component\n * @returns A React component\n *\n * @internal\n */\nexport function FacetTitle({\n  label,\n  customCssClasses,\n  collapsible = true,\n}: FacetTitleProps) {\n  const collapsibleLabelCssClasses: CollapsibleLabelCssClasses = useMemo(() => {\n    return {\n      label: customCssClasses?.titleLabel\n    };\n  }, [customCssClasses]);\n\n  return <Fragment>\n    {collapsible\n      ? <CollapsibleLabel label={label} customCssClasses={collapsibleLabelCssClasses} />\n      : (label && <div className={twMerge(\n        'mb-4', builtInCollapsibleLabelCssClasses.label, collapsibleLabelCssClasses.label)}>\n        {label}\n      </div>)}\n  </Fragment>;\n}\n","import { FilterGroup, FilterGroupCssClasses } from './FilterGroup';\nimport { FilterOptionConfig } from './Filters';\nimport { StaticFiltersProvider } from './Filters/StaticFiltersProvider';\n\n/**\n * The CSS class interface for {@link StaticFilters}.\n *\n * @public\n */\nexport interface StaticFiltersCssClasses extends FilterGroupCssClasses {\n  staticFiltersContainer?: string\n}\n\n/**\n * The configuration data for a field value static filter option.\n *\n * @public\n */\nexport type StaticFilterOptionConfig = Omit<FilterOptionConfig, 'matcher' | 'value'> & {\n  /** The value used to perform filtering. */\n  value: string | number | boolean\n};\n\n/**\n * Props for the {@link StaticFilters} component.\n *\n * @public\n */\nexport interface StaticFiltersProps {\n  /** The fieldId corresponding to the static filter group. */\n  fieldId: string,\n  /** {@inheritDoc StaticFilterOptionConfig} */\n  filterOptions: StaticFilterOptionConfig[],\n  /** The displayed label for the static filter group. */\n  title: string,\n  /** {@inheritDoc FilterGroupProps.collapsible} */\n  collapsible?: boolean,\n  /** {@inheritDoc FilterGroupProps.defaultExpanded} */\n  defaultExpanded?: boolean,\n  /** {@inheritDoc FilterGroupProps.searchable} */\n  searchable?: boolean,\n  /**\n   * Whether or not a search is automatically run when a filter is selected.\n   * Defaults to true.\n   */\n  searchOnChange?: boolean,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: StaticFiltersCssClasses\n}\n\n/**\n * A component that displays a group of user-configured field value filters\n * that will be applied to the current vertical search.\n *\n * @param props - {@link StaticFiltersProps}\n * @returns A React component for field value static filters\n *\n * @public\n */\nexport function StaticFilters(props: StaticFiltersProps): JSX.Element {\n  const { searchOnChange, customCssClasses = {}, ...filterGroupProps } = props;\n  const { staticFiltersContainer: containerClassName, ...filterGroupCssClasses } = customCssClasses;\n  return (\n    <StaticFiltersProvider searchOnChange={searchOnChange} className={containerClassName}>\n      <FilterGroup\n        key={filterGroupProps.fieldId}\n        customCssClasses={filterGroupCssClasses}\n        {...filterGroupProps}\n      />\n    </StaticFiltersProvider>\n  );\n}\n","import { FacetsProvider } from './Filters';\nimport { FilterGroup, FilterGroupCssClasses } from './FilterGroup';\nimport { Fragment } from 'react';\nimport { FilterDivider } from './FilterDivider';\nimport { isStringFacet } from '../utils/filterutils';\n\n/**\n * The CSS class interface for {@link StandardFacets}.\n *\n * @deprecated Use {@link StandardFacet} with {@link Facets} instead.\n * @public\n */\nexport interface StandardFacetsCssClasses extends FilterGroupCssClasses {\n  standardFacetsContainer?: string,\n  divider?: string\n}\n\n/**\n * Props for the {@link StandardFacets} component.\n *\n * @deprecated Use {@link StandardFacet} with {@link Facets} instead.\n * @public\n */\nexport interface StandardFacetsProps {\n  /** {@inheritDoc FilterGroupProps.collapsible} */\n  collapsible?: boolean,\n  /** {@inheritDoc FilterGroupProps.defaultExpanded} */\n  defaultExpanded?: boolean,\n  /**\n   * Whether or not a search is automatically run when a filter is selected.\n   * Defaults to true.\n   */\n  searchOnChange?: boolean,\n  /** List of filter ids that should not be displayed. */\n  excludedFieldIds?: string[],\n  /**\n   * Whether or not to show the option counts for each filter.\n   * Defaults to true.\n   */\n  showOptionCounts?: boolean,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: StandardFacetsCssClasses,\n  /**\n   * Limit on the number of options to be displayed.\n   * Defaults to 10.\n   */\n  showMoreLimit?: number\n}\n\n/**\n * A component that displays simple facets applicable to the current vertical search.\n *\n * @remarks\n * Numerical facets is not included. Hierachical facets will not be display in a\n * tree level structure. Use `excludedFieldIds` to exclude hierachical facets, if any,\n * when using this component.\n *\n * @param props - {@link StandardFacetsProps}\n * @returns A React component for facets\n *\n * @deprecated Use {@link Facets} instead.\n * @public\n */\nexport function StandardFacets(props: StandardFacetsProps) {\n  const {\n    searchOnChange,\n    excludedFieldIds = [],\n    customCssClasses = {},\n    showMoreLimit = 10,\n    showOptionCounts = true,\n    ...filterGroupProps\n  } = props;\n  return (\n    <FacetsProvider searchOnChange={searchOnChange} className={customCssClasses.standardFacetsContainer}>\n      {facets => facets\n        .filter(f => !excludedFieldIds.includes(f.fieldId) && isStringFacet(f))\n        .map((f, i) => {\n          return (\n            <Fragment key={f.fieldId}>\n              <FilterGroup\n                fieldId={f.fieldId}\n                filterOptions={f.options.map(o => {\n                  return showOptionCounts ? { ...o, resultsCount: o.count } : o;\n                })}\n                title={f.displayName}\n                customCssClasses={customCssClasses}\n                showMoreLimit={showMoreLimit}\n                searchable={f.options.length > showMoreLimit}\n                {...filterGroupProps}\n              />\n              {(i < facets.length - 1) && <FilterDivider className={customCssClasses.divider}/>}\n            </Fragment>\n          );\n        })\n      }\n    </FacetsProvider>\n  );\n}\n","import { twMerge } from '../hooks/useComposedCssClasses';\n/**\n * A divider component used to separate NumericalFacets, HierarchicalFacets, StandardFacets,\n * and StaticFilters.\n *\n * @param props - A customizable className for filter divider\n * @returns A React component for filter divider\n *\n * @public\n */\nexport function FilterDivider({ className }: { className?: string }): JSX.Element {\n  return <div className={twMerge('w-full h-px bg-gray-200 my-4', className)} />;\n}","import {\n  CollapsibleLabel,\n  CollapsibleSection,\n  FacetsProvider,\n  FilterGroupProvider,\n  HierarchicalFacetDisplay,\n  HierarchicalFacetDisplayCssClasses\n} from './Filters';\nimport { StandardFacetsProps } from './StandardFacets';\nimport { Fragment } from 'react';\nimport { FilterDivider } from './FilterDivider';\n\n/**\n * The CSS class interface for {@link HierarchicalFacets}.\n *\n * @public\n */\nexport interface HierarchicalFacetsCssClasses extends HierarchicalFacetDisplayCssClasses {\n  hierarchicalFacetsContainer?: string,\n  divider?: string\n}\n\n/**\n * Props for the {@link HierarchicalFacets} component.\n *\n * @deprecated Use {@link HierarchicalFacet} with {@link Facets} instead.\n * @public\n */\nexport interface HierarchicalFacetsProps extends Omit<StandardFacetsProps, 'excludedFieldIds'> {\n  /** List of filter ids to render as hierarchical facets. */\n  includedFieldIds: string[],\n  /** The delimiter for determining facet hierarchies, defaults to \"\\>\". */\n  delimiter?: string,\n  /** The maximum number of options to render before displaying the \"Show more/less\" button. Defaults to 4. */\n  showMoreLimit?: number,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: HierarchicalFacetsCssClasses\n}\n\n/**\n * A component that displays hierarchical facets, in a tree level structure,\n * applicable to the current vertical search.\n *\n * @param props - {@link HierarchicalFacetsProps}\n * @returns A React component for facets\n *\n * @deprecated Use {@link HierarchicalFacet} with {@link Facets} instead.\n * @public\n */\nexport function HierarchicalFacets({\n  searchOnChange,\n  collapsible,\n  defaultExpanded,\n  includedFieldIds,\n  customCssClasses = {},\n  delimiter,\n  showMoreLimit\n}: HierarchicalFacetsProps) {\n  return (\n    <FacetsProvider searchOnChange={searchOnChange} className={customCssClasses.hierarchicalFacetsContainer}>\n      {facets => facets\n        .filter(f => f.options.length > 0 && includedFieldIds.includes(f.fieldId))\n        .map((f, i) => {\n          return (\n            <Fragment key={f.fieldId}>\n              <FilterGroupProvider\n                fieldId={f.fieldId}\n                defaultExpanded={!collapsible || defaultExpanded}\n              >\n                {collapsible\n                  ? <CollapsibleLabel label={f.displayName} />\n                  : (f.displayName && <div className='text-neutral-dark text-sm font-medium text-left mb-4'>{f.displayName}</div>)\n                }\n                <CollapsibleSection >\n                  <HierarchicalFacetDisplay\n                    facet={f}\n                    delimiter={delimiter}\n                    showMoreLimit={showMoreLimit}\n                    customCssClasses={customCssClasses}\n                  />\n                </CollapsibleSection>\n              </FilterGroupProvider>\n              {(i < facets.length - 1) && <FilterDivider className={customCssClasses.divider}/>}\n            </Fragment>\n          );\n        })\n      }\n    </FacetsProvider>\n  );\n}","import { FacetsProvider, RangeInput, RangeInputCssClasses } from './Filters';\nimport { FilterGroup, FilterGroupCssClasses } from './FilterGroup';\nimport { Fragment } from 'react';\nimport { NumberRangeValue } from '@yext/search-headless-react';\nimport { StandardFacetsProps } from './StandardFacets';\nimport { isNumericalFacet } from '../utils/filterutils';\nimport { FilterDivider } from './FilterDivider';\n\n/**\n * The CSS class interface for {@link NumericalFacets}.\n *\n * @public\n */\nexport interface NumericalFacetsCssClasses extends FilterGroupCssClasses, RangeInputCssClasses {\n  numericalFacetsContainer?: string,\n  divider?: string\n}\n\n/**\n * Props for the {@link NumericalFacets} component.\n *\n * @deprecated Use {@link NumericalFacet} with {@link Facets} instead.\n * @public\n */\nexport interface NumericalFacetsProps extends Omit<StandardFacetsProps, 'excludedFieldIds'> {\n  /** List of filter ids to render as numerical facets. */\n  includedFieldIds?: string[],\n  /**\n   * Returns the filter's display name based on the range values which is used when the filter\n   * is displayed by other components such as AppliedFilters.\n   *\n   * @remarks\n   * By default, the displayName separates the range with a dash such as '10 - 20'.\n   * If the range is unbounded, it will display as 'Up to 20' or 'Over 10'.\n   */\n  getFilterDisplayName?: (value: NumberRangeValue) => string,\n  /**\n   * An optional element which renders in front of the input text.\n   */\n  inputPrefix?: JSX.Element,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: NumericalFacetsCssClasses\n}\n\nconst DEFAULT_RANGE_INPUT_PREFIX = <>$</>;\n\n/**\n * A component that displays numerical facets applicable to the current vertical search.\n *\n * @param props - {@link NumericalFacetsProps}\n * @returns A React component for facets\n *\n * @deprecated Use {@link NumericalFacet} with {@link Facets} instead.\n * @public\n */\nexport function NumericalFacets({\n  searchOnChange,\n  includedFieldIds = [],\n  getFilterDisplayName,\n  inputPrefix = DEFAULT_RANGE_INPUT_PREFIX,\n  customCssClasses = {},\n  ...filterGroupProps\n}: NumericalFacetsProps) {\n  return (\n    <FacetsProvider searchOnChange={searchOnChange} className={customCssClasses.numericalFacetsContainer}>\n      {facets => facets\n        .filter(f => isNumericalFacet(f)\n          && (includedFieldIds.length === 0 || includedFieldIds.includes(f.fieldId)))\n        .map((f, i) => {\n          return (\n            <Fragment key={f.fieldId}>\n              <FilterGroup\n                fieldId={f.fieldId}\n                filterOptions={f.options}\n                title={f.displayName}\n                customCssClasses={customCssClasses}\n                {...filterGroupProps}\n              >\n                <RangeInput\n                  getFilterDisplayName={getFilterDisplayName}\n                  inputPrefix={inputPrefix}\n                  customCssClasses={customCssClasses}\n                />\n              </FilterGroup>\n              {(i < facets.length - 1) && <FilterDivider className={customCssClasses.divider}/>}\n            </Fragment>\n          );\n        })\n      }\n    </FacetsProvider>\n  );\n}","import { FilterGroup } from './FilterGroup';\nimport { DisplayableFacet } from '@yext/search-headless-react';\nimport { StandardFacetProps } from './FacetProps';\n\n/**\n * A component that displays the content of a standard facet.\n *\n * @param props - props to render the component\n * @returns A React component for the content of a standard facet\n *\n * @internal\n */\nexport function StandardFacetContent({\n  fieldId,\n  label,\n  transformOptions,\n  customCssClasses,\n  facet,\n  showMoreLimit = 10,\n  showOptionCounts = true,\n  ...filterGroupProps\n}: StandardFacetProps & { facet: DisplayableFacet }) {\n  const options = facet.options || [];\n  const transformedOptions = transformOptions ? (transformOptions(options) || []) : options;\n\n  return (\n    <FilterGroup\n      fieldId={fieldId}\n      filterOptions={transformedOptions.map(o => {\n        return showOptionCounts ? { ...o, resultsCount: o.count } : o;\n      })}\n      title={label || facet.displayName}\n      customCssClasses={customCssClasses}\n      showMoreLimit={showMoreLimit}\n      searchable={facet?.options.length > showMoreLimit}\n      {...filterGroupProps}\n    />\n  );\n}\n","import { FacetsProvider } from './Filters';\nimport { StandardFacetContent } from './StandardFacetContent';\nimport {\n  FacetProps,\n  FacetsProps, HierarchicalFacetProps, NumericalFacetProps,\n  StandardFacetProps\n} from './FacetProps';\nimport { isNumericalFacet, isStringFacet } from '../utils/filterutils';\nimport { FilterDivider } from './FilterDivider';\nimport { Fragment, ReactElement } from 'react';\nimport { NumericalFacetContent } from './NumericalFacetContent';\nimport { HierarchicalFacetContent } from './HierarchicalFacetContent';\nimport { DisplayableFacet } from '@yext/search-headless-react';\n\n/** @internal */\nenum FacetType {\n  STANDARD = 'STANDARD',\n  NUMERICAL = 'NUMERICAL',\n  HIERARCHICAL = 'HIERARCHICAL'\n}\n\n/**\n * A component that displays all facets applicable to the current vertical search.\n *\n * @remarks\n * This component is a quick way of getting facets on the page, and it will render standard facets,\n * numerical facets, and hierarchical facets. The {@link StandardFacet}, {@link NumericalFacet},\n * and {@link HierarchicalFacet} components can be used to override the default facet configuration.\n *\n * @param props - {@link FacetsProps}\n * @returns A React component for facets\n *\n * @public\n */\nexport function Facets(props: FacetsProps) {\n  const {\n    searchOnChange,\n    onlyRenderChildren = false,\n    children,\n    hierarchicalFieldIds,\n    excludedFieldIds = [],\n    customCssClasses = {},\n  } = props;\n\n  const fieldIdToCustomFacetProps = new Map();\n  const fieldIds: string[] = [];\n  if (children) {\n    (Array.isArray(children) ? children : [children])\n      .filter(child => child?.props?.fieldId)\n      .forEach(child => {\n        fieldIdToCustomFacetProps.set(child.props.fieldId, child);\n        fieldIds.push(child.props.fieldId);\n      });\n  }\n\n  return (\n    <div>\n      <FacetsProvider searchOnChange={searchOnChange} className={customCssClasses.facetsContainer}>\n        {facets => {\n          if (!facets || !facets.length) {\n            return;\n          }\n\n          if (!onlyRenderChildren) {\n            facets.forEach(facet => {\n              if (!fieldIds.includes(facet.fieldId)) {\n                fieldIds.push(facet.fieldId);\n              }\n            });\n          }\n\n          const fieldIdToFacet = new Map();\n          facets.forEach(facet => fieldIdToFacet.set(facet.fieldId, facet));\n\n          return fieldIds\n            .filter(fieldId =>\n              !excludedFieldIds.includes(fieldId)\n              && fieldIdToFacet.get(fieldId).options.length > 0\n              && (!onlyRenderChildren || fieldIdToCustomFacetProps.has(fieldId)))\n            .map((fieldId, i) => {\n              const facet: DisplayableFacet = fieldIdToFacet.get(fieldId);\n\n              return (\n                <Fragment key={facet.fieldId}>\n                  <Facet\n                    facet={facet}\n                    facetsCustomCssClasses={customCssClasses}\n                    fieldIdToCustomFacetProps={fieldIdToCustomFacetProps}\n                    hierarchicalFieldIds={hierarchicalFieldIds}\n                  />\n                  {(i < facets.length - 1)\n                    && <FilterDivider className={customCssClasses?.divider}/>}\n                </Fragment>\n              );\n            });\n        }\n        }\n      </FacetsProvider>\n    </div>\n  );\n}\n\n/**\n * A component that displays a single standard facet. Use this to override the default rendering.\n *\n * @param props - {@link StandardFacetProps}\n * @returns ReactElement\n * @public\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function StandardFacet(props: StandardFacetProps) { return null; }\n\n/**\n * A component that displays a single numerical facet. Use this to override the default rendering.\n *\n * @param props - {@link NumericalFacetProps}\n * @returns ReactElement\n * @public\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function NumericalFacet(props: NumericalFacetProps) { return null; }\n\n/**\n * A component that displays a single hierarchical facet, in a tree level structure, applicable to\n * the current vertical search. Use this to override the default rendering.\n *\n * @param props - {@link HierarchicalFacetProps}\n * @returns ReactElement\n * @public\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function HierarchicalFacet(props: HierarchicalFacetProps) { return null; }\n\n/**\n * A component that represents a single facet.\n *\n * @param facet - {@link DisplayableFacet}\n * @param facetsCustomCssClasses - {@link FacetsCssClasses}\n * @param fieldIdToCustomFacetProps - a map of fieldId to facet props\n * @param hierarchicalFieldIds - a list of hierarchical field ids\n * @returns {@link ReactElement}\n *\n * @internal\n */\nexport function Facet({\n  facet,\n  facetsCustomCssClasses,\n  fieldIdToCustomFacetProps,\n  hierarchicalFieldIds,\n}) {\n  let facetType: FacetType;\n  let facetProps: FacetProps = {\n    fieldId: facet.fieldId,\n    label: facet.displayName,\n  };\n  if (fieldIdToCustomFacetProps.has(facet.fieldId)) {\n    const customFacetElement: ReactElement = fieldIdToCustomFacetProps.get(facet.fieldId);\n    facetProps = { ...facetProps, ...customFacetElement.props };\n    facetType = getFacetTypeFromReactElementType(\n      (typeof customFacetElement.type === 'function')\n        ? customFacetElement.type.name : '');\n  } else {\n    facetType = getFacetTypeFromFacet(facet, hierarchicalFieldIds);\n  }\n\n  facetProps = {\n    ...facetProps,\n    customCssClasses: {\n      ...facetsCustomCssClasses,\n      ...facetProps.customCssClasses,\n    },\n  };\n\n  switch (facetType) {\n    case FacetType.NUMERICAL:\n      return (<NumericalFacetContent facet={facet} {...facetProps}/>);\n    case FacetType.HIERARCHICAL:\n      return (<HierarchicalFacetContent facet={facet} {...facetProps}/>);\n    case FacetType.STANDARD:\n    // fall through\n    default:\n      return (<StandardFacetContent facet={facet} {...facetProps}/>);\n  }\n}\n\n/**\n * Returns the type of the facet based on the props.\n * @param elementType - string\n * @returns {@link FacetType}\n *\n * @internal\n */\nexport function getFacetTypeFromReactElementType(elementType: string) {\n  switch (elementType) {\n    case NumericalFacet.name.toString():\n      return FacetType.NUMERICAL;\n    case HierarchicalFacet.name.toString():\n      return FacetType.HIERARCHICAL;\n    case StandardFacet.name.toString():\n      // fall through\n    default:\n      return FacetType.STANDARD;\n  }\n}\n\n/**\n * Returns the type of the facet based on facet.\n * @param facet - {@link DisplayableFacet}\n * @param hierarchicalFieldIds - string\n * @returns {@link FacetType}\n *\n * @internal\n */\nexport function getFacetTypeFromFacet(\n  facet: DisplayableFacet,\n  hierarchicalFieldIds: string[] = [],\n) {\n  if (hierarchicalFieldIds.includes(facet.fieldId)) {\n    return FacetType.HIERARCHICAL;\n  } else if (isStringFacet(facet)) {\n    return FacetType.STANDARD;\n  } else if (isNumericalFacet(facet)) {\n    return FacetType.NUMERICAL;\n  }\n\n  return FacetType.STANDARD;\n}\n","import { FilterGroup } from './FilterGroup';\nimport { DisplayableFacet } from '@yext/search-headless-react';\nimport { NumericalFacetProps } from './FacetProps';\nimport { RangeInput } from './Filters';\n\nconst DEFAULT_RANGE_INPUT_PREFIX = <>$</>;\n\n/**\n * A component that displays the content of a numerical facet.\n *\n * @param props - props to render the component\n * @returns A React component for the content of a standard facet\n *\n * @internal\n */\nexport function NumericalFacetContent({\n  fieldId,\n  label,\n  transformOptions,\n  customCssClasses,\n  getFilterDisplayName,\n  facet,\n  showMoreLimit = 10,\n  showOptionCounts = false,\n  inputPrefix = DEFAULT_RANGE_INPUT_PREFIX,\n  ...filterGroupProps\n}: NumericalFacetProps & { facet: DisplayableFacet }) {\n  const options = facet.options || [];\n  const transformedOptions = transformOptions ? (transformOptions(options) || []) : options;\n\n  return (\n    <FilterGroup\n      fieldId={fieldId}\n      filterOptions={transformedOptions.map(o => {\n        return showOptionCounts ? { ...o, resultsCount: o.count } : o;\n      })}\n      title={label || facet.displayName}\n      customCssClasses={customCssClasses}\n      showMoreLimit={showMoreLimit}\n      searchable={facet?.options.length > showMoreLimit}\n      {...filterGroupProps}\n    >\n      <RangeInput\n        getFilterDisplayName={getFilterDisplayName}\n        inputPrefix={inputPrefix}\n        customCssClasses={customCssClasses}\n      />\n    </FilterGroup>\n  );\n}\n","import { DisplayableFacet } from '@yext/search-headless-react';\nimport { HierarchicalFacetProps } from './FacetProps';\nimport {\n  CollapsibleSection,\n  FilterGroupProvider,\n  HierarchicalFacetDisplay\n} from './Filters';\nimport { FacetTitle } from './FacetTiltle';\n\n/**\n * A component that displays the content of a hierarchical facet.\n *\n * @param props - props to render the component\n * @returns A React component for the content of a hierarchical facet\n *\n * @internal\n */\nexport function HierarchicalFacetContent({\n  fieldId,\n  label,\n  transformOptions,\n  customCssClasses,\n  delimiter,\n  facet,\n  collapsible = true,\n  defaultExpanded = true,\n  showMoreLimit = 4,\n}: HierarchicalFacetProps & { facet: DisplayableFacet }) {\n  const options = facet.options || [];\n  const transformedOptions = transformOptions ? (transformOptions(options) || []) : options;\n\n  return (\n    <FilterGroupProvider fieldId={fieldId} defaultExpanded={!collapsible || defaultExpanded}>\n      <FacetTitle\n        label={label || facet.displayName}\n        customCssClasses={customCssClasses}\n        collapsible={collapsible}\n      />\n      <CollapsibleSection >\n        <HierarchicalFacetDisplay\n          // eslint-disable-next-line react-perf/jsx-no-new-object-as-prop\n          facet={{\n            ...facet,\n            options: transformedOptions,\n          }}\n          delimiter={delimiter}\n          showMoreLimit={showMoreLimit}\n          customCssClasses={customCssClasses}\n        />\n      </CollapsibleSection>\n    </FilterGroupProvider>\n  );\n}\n","import { useSearchActions } from '@yext/search-headless-react';\nimport { useCallback } from 'react';\nimport { useComposedCssClasses } from '../hooks';\nimport { clearStaticRangeFilters, getSelectedNumericalFacetFields } from '../utils/filterutils';\nimport { executeSearch } from '../utils/search-operations';\n\n/**\n * Props for {@link ApplyFiltersButton}\n *\n * @public\n */\nexport interface ApplyFiltersButtonProps {\n  /** The label for the button, defaults to 'Apply Filters' */\n  label?: string,\n  /** CSS classes for customizing the component styling. */\n  customCssClasses?: ApplyFiltersButtonCssClasses\n}\n\n/**\n * The CSS class interface for {@link ApplyFiltersButtonProps}.\n *\n * @public\n */\nexport interface ApplyFiltersButtonCssClasses {\n  button?: string\n}\n\nconst builtInCssClasses: Readonly<ApplyFiltersButtonCssClasses> = {\n  button: 'border border-gray-300 px-2.5 py-1 rounded-md text-primary bg-white shadow-md sticky bottom-3'\n};\n\n/**\n * Runs a vertical search.\n * By default has `position: sticky` styling that anchors it to the bottom of the page.\n *\n * @remarks\n * This is intended to be used when `searchOnChange` field is set to false on all\n * the Facets/StaticFilters components.\n *\n * @public\n */\nexport function ApplyFiltersButton({\n  customCssClasses,\n  label = 'Apply Filters'\n}: ApplyFiltersButtonProps): JSX.Element {\n  const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);\n  const searchActions = useSearchActions();\n  const handleClick = useCallback(() => {\n    searchActions.setOffset(0);\n    clearStaticRangeFilters(searchActions, getSelectedNumericalFacetFields(searchActions));\n    executeSearch(searchActions);\n  }, [searchActions]);\n\n  return (\n    <button\n      onClick={handleClick}\n      className={cssClasses.button}\n    >\n      {label}\n    </button>\n  );\n}","import { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { Result, useSearchState } from '@yext/search-headless-react';\nimport { useDebouncedFunction } from '../hooks/useDebouncedFunction';\nimport ReactDOM from 'react-dom';\n\n/**\n * A functional component that can be used to render a custom marker on the map.\n *\n * @public\n */\nexport type PinComponent<T> = (props: {\n  index: number,\n  mapbox: mapboxgl.Map,\n  result: Result<T>\n}) => JSX.Element;\n\n/**\n * A function use to derive a result's coordinate.\n *\n * @public\n */\nexport type CoordinateGetter<T> = (result: Result<T>) => Coordinate | undefined;\n\n/**\n * Coordinate use to represent the result's location on a map.\n *\n * @public\n */\nexport interface Coordinate {\n  /** The latitude of the location. */\n  latitude: number,\n  /** The longitude of the location. */\n  longitude: number\n}\n\n/**\n * A function which is called when user drag the map.\n *\n * @public\n */\nexport type OnDragHandler = (center: mapboxgl.LngLat, bounds: mapboxgl.LngLatBounds) => void;\n\n/**\n * Props for the {@link MapboxMap} component.\n * The type param \"T\" represents the type of \"rawData\" field of the results use in the map.\n *\n * @public\n */\nexport interface MapboxMapProps<T> {\n  /** Mapbox access token. */\n  mapboxAccessToken: string,\n  /** Interface for map customization derived from Mapbox GL's Map options. */\n  mapboxOptions?: Omit<mapboxgl.MapboxOptions, 'container'>,\n  /**\n   * Custom Pin component to render for markers on the map.\n   * By default, the built-in marker image from Mapbox GL is used.\n   */\n  PinComponent?: PinComponent<T>,\n  /**\n   * A function to derive a result's coordinate for the corresponding marker's location on the map.\n   * By default, \"yextDisplayCoordinate\" field is used as the result's display coordinate.\n   */\n  getCoordinate?: CoordinateGetter<T>,\n  /** {@inheritDoc OnDragHandler} */\n  onDrag?: OnDragHandler\n}\n\n/**\n * A component that renders a map with markers to show result locations using Mapbox GL.\n *\n * @remarks\n * For the map to work properly, be sure to include Mapbox GL stylesheet in the application.\n *\n * @example\n * For instance, user may add the following import statement in their application's index file\n * or in the file where `MapboxMap` is used:\n * `import 'mapbox-gl/dist/mapbox-gl.css';`\n *\n * Or, user may add a stylesheet link in their html page:\n * `<link href=\"https://api.mapbox.com/mapbox-gl-js/v2.9.2/mapbox-gl.css\" rel=\"stylesheet\" />`\n *\n * @param props - {@link MapboxMapProps}\n * @returns A React element containing a Mapbox Map\n *\n * @public\n */\nexport function MapboxMap<T>({\n  mapboxAccessToken,\n  mapboxOptions,\n  PinComponent,\n  getCoordinate = getDefaultCoordinate,\n  onDrag\n}: MapboxMapProps<T>) {\n  useEffect(() => {\n    mapboxgl.accessToken = mapboxAccessToken;\n  }, [mapboxAccessToken]);\n\n  const mapContainer = useRef<HTMLDivElement>(null);\n  const map = useRef<mapboxgl.Map | null>(null);\n  const markers = useRef<mapboxgl.Marker[]>([]);\n\n  const locationResults = useSearchState(state => state.vertical.results) as Result<T>[];\n  const onDragDebounced = useDebouncedFunction(onDrag, 100);\n\n  useEffect(() => {\n    if (mapContainer.current && !map.current) {\n      const options: mapboxgl.MapboxOptions = {\n        container: mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [-74.005371, 40.741611],\n        zoom: 9,\n        ...mapboxOptions\n      };\n      map.current = new mapboxgl.Map(options);\n      const mapbox = map.current;\n      mapbox.resize();\n      if (onDragDebounced) {\n        mapbox.on('drag', () => {\n          onDragDebounced(mapbox.getCenter(), mapbox.getBounds());\n        });\n      }\n    }\n  }, [mapboxOptions, onDragDebounced]);\n\n  useEffect(() => {\n    markers.current.forEach(marker => marker.remove());\n    markers.current = [];\n    const mapbox = map.current;\n    if (mapbox && locationResults?.length > 0) {\n      const bounds = new mapboxgl.LngLatBounds();\n      locationResults.forEach((result, i) => {\n        const markerLocation = getCoordinate(result);\n        if (markerLocation) {\n          const { latitude, longitude } = markerLocation;\n          const el = document.createElement('div');\n          const markerOptions: mapboxgl.MarkerOptions = {};\n          if (PinComponent) {\n            ReactDOM.render(<PinComponent\n              index={i}\n              mapbox={mapbox}\n              result={result}\n            />, el);\n            markerOptions.element = el;\n          }\n          const marker = new mapboxgl.Marker(markerOptions)\n            .setLngLat({ lat: latitude, lng: longitude })\n            .addTo(mapbox);\n          markers.current.push(marker);\n          bounds.extend([longitude, latitude]);\n        }\n      });\n\n      if (!bounds.isEmpty()){\n        mapbox.fitBounds(bounds, {\n          padding: { top: 50, bottom: 50, left: 50, right: 50 },\n          maxZoom: 15\n        });\n      }\n    }\n  }, [PinComponent, getCoordinate, locationResults]);\n\n  return (\n    <div ref={mapContainer} className='h-full w-full' />\n  );\n}\n\nfunction isCoordinate(data: unknown): data is Coordinate {\n  return typeof data == 'object'\n    && typeof data?.['latitude'] === 'number'\n    && typeof data?.['longitude'] === 'number';\n}\n\nfunction getDefaultCoordinate<T>(result: Result<T>): Coordinate | undefined {\n  const yextDisplayCoordinate = result.rawData['yextDisplayCoordinate'];\n  if (!yextDisplayCoordinate) {\n    console.error('Unable to use the default \"yextDisplayCoordinate\" field as the result\\'s coordinate to display on map.'\n    + '\\nConsider providing the \"getCoordinate\" prop to MapboxMap component to fetch the desire coordinate from result.');\n    return undefined;\n  }\n  if (!isCoordinate(yextDisplayCoordinate)) {\n    console.error('The default `yextDisplayCoordinate` field from result is not of type \"Coordinate\".');\n    return undefined;\n  }\n  return yextDisplayCoordinate;\n}\n","import { PropsWithChildren } from 'react';\nimport { provideAnalytics, AnalyticsConfig } from '@yext/analytics';\nimport { AnalyticsContext } from '../hooks/useAnalytics';\n\n/**\n * A higher-order component which provides analytics for its children.\n *\n * @public\n *\n * @param props - The configuration for the analytics service\n * @returns A React element that provides analytics context\n */\nexport function AnalyticsProvider(props: PropsWithChildren<AnalyticsConfig>): JSX.Element {\n  const { children, ...analyticsConfig } = props;\n  const analyticsReporter = provideAnalytics(analyticsConfig);\n\n  return (\n    <AnalyticsContext.Provider value={analyticsReporter}>\n      {children}\n    </AnalyticsContext.Provider>\n  );\n}","import { HighlightedValue } from '@yext/search-headless-react';\n\n/**\n * The data used by the {@link StandardCard} and taken from the original Result.\n *\n * @public\n */\nexport interface StandardCardData {\n  /** The text to display in the card's header. */\n  title: HighlightedValue | string,\n  /** The content to display in the card's body. */\n  description: HighlightedValue | string,\n  /** CTA data to render. */\n  cta1: CtaData,\n  /** CTA data to render. */\n  cta2: CtaData\n}\n\n/**\n * The shape of a StandardCard CTA field's data.\n *\n * @public\n */\nexport interface CtaData {\n  /** The display label for the CTA element. */\n  label: string,\n  /** The CTA link source. */\n  link: string,\n  /** The CTA link type (e.g. URL, Phone, Email, Other). */\n  linkType: string\n}\n\n/**\n * Type guard for CtaData.\n *\n * @public\n *\n * @param data - the data to validate.\n * @returns whether the data is of type CtaData.\n */\nexport function isCtaData(data: unknown): data is CtaData {\n  if (typeof data !== 'object' || data === null) {\n    return false;\n  }\n  const expectedKeys = ['label', 'link', 'linkType'];\n  return expectedKeys.every(key => {\n    return key in data;\n  });\n}"],"mappings":"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","names":["import_search_headless_react","import_react","import_react","import_react","import_react","import_search_headless_react","import_search_headless_react","import_react","import_react","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","import_react","import_react","import_react","import_react","import_jsx_runtime","import_react","import_react","import_jsx_runtime","import_jsx_runtime","useRootClosePkg","useIsomorphicLayoutEffect","import_react","import_jsx_runtime","import_jsx_runtime","import_react","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime","import_react","import_search_headless_react","import_search_headless_react","import_search_headless_react","lodash","import_jsx_runtime","builtInCssClasses","executeAutocomplete","query","_a","verticalKey","classNames","import_search_headless_react","import_classnames","import_react","import_jsx_runtime","builtInCssClasses","classNames","import_search_headless_react","import_search_headless_react","import_react","import_jsx_runtime","import_use_isomorphic_layout_effect","import_jsx_runtime","useLayoutEffect","useIsomorphicLayoutEffect","builtInCssClasses","import_react","import_search_headless_react","import_react","import_react","import_search_headless_react","import_react","import_jsx_runtime","FieldValueDirectAnswer","url","import_react","import_jsx_runtime","_a","import_jsx_runtime","builtInCssClasses","FieldValueDirectAnswer","import_search_headless_react","import_react","import_jsx_runtime","builtInCssClasses","getScreenReaderText","import_search_headless_react","import_react","import_jsx_runtime","import_jsx_runtime","builtInCssClasses","import_jsx_runtime","import_search_headless_react","import_react","import_jsx_runtime","builtInCssClasses","import_search_headless_react","import_classnames","import_search_headless_react","import_react","import_search_headless_react","import_jsx_runtime","import_react","import_react","import_react","import_jsx_runtime","builtInCssClasses","_a","import_search_headless_react","import_react","import_search_headless_react","import_lodash","import_react","import_search_headless_react","import_react","import_search_headless_react","import_react","lodash","import_jsx_runtime","builtInCssClasses","classNames","import_search_headless_react","import_classnames","import_jsx_runtime","builtInCssClasses","classNames","import_jsx_runtime","builtInCssClasses","title","link","cta1","cta2","PropTypes","import_jsx_runtime","import_jsx_runtime","builtInCssClasses","import_jsx_runtime","import_search_headless_react","import_classnames","import_react","import_jsx_runtime","builtInCssClasses","classNames","import_classnames","import_jsx_runtime","builtInCssClasses","_a","classNames","import_search_headless_react","import_jsx_runtime","_a","import_search_headless_react","import_jsx_runtime","import_search_headless_react","import_react","import_classnames","import_jsx_runtime","_a","classNames","import_jsx_runtime","import_search_headless_react","import_classnames","import_jsx_runtime","builtInCssClasses","_a","classNames","verticalConfigMap","alternativeVerticals","import_search_headless_react","import_classnames","import_jsx_runtime","builtInCssClasses","classNames","import_search_headless_react","import_react","import_react","import_classnames","import_auto_id","import_jsx_runtime","builtInCssClasses","classNames","import_classnames","import_jsx_runtime","builtInCssClasses","classNames","import_jsx_runtime","import_search_headless_react","import_react","import_jsx_runtime","import_react","import_jsx_runtime","useCollapse","import_react","import_jsx_runtime","import_search_headless_react","import_react","import_jsx_runtime","import_search_headless_react","import_react","import_classnames","import_jsx_runtime","import_jsx_runtime","builtInCssClasses","_a","classNames","import_search_headless_react","import_react","import_react","import_jsx_runtime","builtInCssClasses","import_jsx_runtime","import_react","import_jsx_runtime","import_react","import_jsx_runtime","import_jsx_runtime","import_react","import_jsx_runtime","import_react","import_jsx_runtime","import_jsx_runtime","import_react","import_jsx_runtime","DEFAULT_RANGE_INPUT_PREFIX","import_jsx_runtime","import_jsx_runtime","import_search_headless_react","import_react","import_jsx_runtime","builtInCssClasses","import_react","import_search_headless_react","import_jsx_runtime","PinComponent","mapboxgl","ReactDOM","import_jsx_runtime"]}